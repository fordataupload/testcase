[{"node type": "expr_stmt", "line number": "(19, 54)", "node content": "<ExprStmt: _logger = logging.getLogger('theano.compile.function')@19,0>", "related code": "_logger = logging.getLogger('theano.compile.function')\n"}, {"node type": "string", "line number": "(18, 37)", "node content": "<String: \"restructuredtext en\">", "related code": "__docformat__ = \"restructuredtext en\"\n"}, {"node type": "not_test", "line number": "(281, 44)", "node content": "PythonNode(not_test, [<Keyword: not>, PythonNode(atom_expr, [<Name: isinstance@281,11>, PythonNode(trailer, [<Operator: (>, PythonNode(arglist, [<Name: inputs@281,22>, <Operator: ,>, PythonNode(atom, [<Operator: (>, PythonNode(testlist_comp, [<Name: list@281,31>, <Operator: ,>, <Name: tuple@281,37>]), <Operator: )>])]), <Operator: )>])])])", "related code": "    if not isinstance(inputs, (list, tuple)):\n"}, {"node type": "expr_stmt", "line number": "(287, 68)", "node content": "<ExprStmt: # compute some features of the arguments:     uses_tuple = any([isinstance(i, (list, tuple)) for i in inputs])@287,4>", "related code": "    uses_tuple = any([isinstance(i, (list, tuple)) for i in inputs])\n"}, {"node type": "expr_stmt", "line number": "(288, 32)", "node content": "<ExprStmt: uses_updates = bool(updates)@288,4>", "related code": "    uses_updates = bool(updates)\n"}, {"node type": "expr_stmt", "line number": "(289, 30)", "node content": "<ExprStmt: uses_givens = bool(givens)@289,4>", "related code": "    uses_givens = bool(givens)\n"}, {"node type": "string", "line number": "(19, 53)", "node content": "<String: 'theano.compile.function'>", "related code": "_logger = logging.getLogger('theano.compile.function')\n"}, {"node type": "keyword", "line number": "(244, 14)", "node content": "<Keyword: is>", "related code": "    if name is None:\n"}, {"node type": "keyword", "line number": "(261, 17)", "node content": "<Keyword: is>", "related code": "    if updates is None:\n"}, {"node type": "keyword", "line number": "(279, 16)", "node content": "<Keyword: is>", "related code": "    if givens is None:\n"}, {"node type": "keyword", "line number": "(281, 10)", "node content": "<Keyword: not>", "related code": "    if not isinstance(inputs, (list, tuple)):\n"}, {"node type": "expr_stmt", "line number": "(242, 26)", "node content": "<ExprStmt: output_keys = None@242,8>", "related code": "        output_keys = None\n"}, {"node type": "expr_stmt", "line number": "(246, 56)", "node content": "<ExprStmt: # Determine possible file names         source_file = re.sub(r'\\.pyc?', '.py', __file__)@246,8>", "related code": "        source_file = re.sub(r'\\.pyc?', '.py', __file__)\n"}, {"node type": "expr_stmt", "line number": "(249, 34)", "node content": "<ExprStmt: stack = tb.extract_stack()@249,8>", "related code": "        stack = tb.extract_stack()\n"}, {"node type": "expr_stmt", "line number": "(252, 31)", "node content": "<ExprStmt: last_frame = stack[idx]@252,8>", "related code": "        last_frame = stack[idx]\n"}, {"node type": "expr_stmt", "line number": "(262, 20)", "node content": "<ExprStmt: updates = []@262,8>", "related code": "        updates = []\n"}, {"node type": "or_test", "line number": "(253, 74)", "node content": "PythonNode(or_test, [PythonNode(comparison, [PythonNode(atom_expr, [<Name: last_frame@253,12>, PythonNode(trailer, [<Operator: [>, <Number: 0>, <Operator: ]>])]), <Operator: ==>, <Name: source_file@253,29>]), <Keyword: or>, PythonNode(comparison, [PythonNode(atom_expr, [<Name: last_frame@253,44>, PythonNode(trailer, [<Operator: [>, <Number: 0>, <Operator: ]>])]), <Operator: ==>, <Name: compiled_file@253,61>])])", "related code": "        if (last_frame[0] == source_file or last_frame[0] == compiled_file):\n"}, {"node type": "operator", "line number": "(247, 37)", "node content": "<Operator: +>", "related code": "        compiled_file = source_file + 'c'\n"}, {"node type": "string", "line number": "(247, 41)", "node content": "<String: 'c'>", "related code": "        compiled_file = source_file + 'c'\n"}, {"node type": "operator", "line number": "(250, 26)", "node content": "<Operator: ->", "related code": "        idx = len(stack) - 1\n"}, {"node type": "number", "line number": "(250, 28)", "node content": "<Number: 1>", "related code": "        idx = len(stack) - 1\n"}, {"node type": "operator", "line number": "(253, 28)", "node content": "<Operator: ==>", "related code": "        if (last_frame[0] == source_file or last_frame[0] == compiled_file):\n"}, {"node type": "operator", "line number": "(253, 60)", "node content": "<Operator: ==>", "related code": "        if (last_frame[0] == source_file or last_frame[0] == compiled_file):\n"}, {"node type": "string", "line number": "(246, 38)", "node content": "<String: r'\\.pyc?'>", "related code": "        source_file = re.sub(r'\\.pyc?', '.py', __file__)\n"}, {"node type": "string", "line number": "(246, 45)", "node content": "<String: '.py'>", "related code": "        source_file = re.sub(r'\\.pyc?', '.py', __file__)\n"}, {"node type": "string", "line number": "(255, 30)", "node content": "<String: \"theano/gof\">", "related code": "            while \"theano/gof\" in func_frame[0] and idx > 0:\n"}, {"node type": "keyword", "line number": "(255, 33)", "node content": "<Keyword: in>", "related code": "            while \"theano/gof\" in func_frame[0] and idx > 0:\n"}, {"node type": "operator", "line number": "(255, 57)", "node content": "<Operator: >>", "related code": "            while \"theano/gof\" in func_frame[0] and idx > 0:\n"}, {"node type": "number", "line number": "(255, 59)", "node content": "<Number: 0>", "related code": "            while \"theano/gof\" in func_frame[0] and idx > 0:\n"}, {"node type": "operator", "line number": "(259, 34)", "node content": "<Operator: +>", "related code": "            name = func_frame[0] + ':' + str(func_frame[1])\n"}, {"node type": "string", "line number": "(259, 38)", "node content": "<String: ':'>", "related code": "            name = func_frame[0] + ':' + str(func_frame[1])\n"}, {"node type": "operator", "line number": "(259, 40)", "node content": "<Operator: +>", "related code": "            name = func_frame[0] + ':' + str(func_frame[1])\n"}, {"node type": "keyword", "line number": "(287, 59)", "node content": "<Keyword: in>", "related code": "    uses_tuple = any([isinstance(i, (list, tuple)) for i in inputs])\n"}, {"node type": "number", "line number": "(253, 24)", "node content": "<Number: 0>", "related code": "        if (last_frame[0] == source_file or last_frame[0] == compiled_file):\n"}, {"node type": "number", "line number": "(253, 56)", "node content": "<Number: 0>", "related code": "        if (last_frame[0] == source_file or last_frame[0] == compiled_file):\n"}, {"node type": "operator", "line number": "(254, 36)", "node content": "<Operator: ->", "related code": "            func_frame = stack[idx - 1]\n"}, {"node type": "number", "line number": "(254, 38)", "node content": "<Number: 1>", "related code": "            func_frame = stack[idx - 1]\n"}, {"node type": "number", "line number": "(255, 46)", "node content": "<Number: 0>", "related code": "            while \"theano/gof\" in func_frame[0] and idx > 0:\n"}, {"node type": "number", "line number": "(259, 31)", "node content": "<Number: 0>", "related code": "            name = func_frame[0] + ':' + str(func_frame[1])\n"}, {"node type": "number", "line number": "(259, 57)", "node content": "<Number: 1>", "related code": "            name = func_frame[0] + ':' + str(func_frame[1])\n"}]
