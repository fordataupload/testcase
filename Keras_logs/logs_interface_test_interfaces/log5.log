2020-10-04 18:57:25.250240: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_100.dll
============================= test session starts =============================
platform win32 -- Python 3.6.12, pytest-6.0.2, py-1.9.0, pluggy-0.13.1
rootdir: C:\Users\mutation\Desktop\testcase\tests\keras\legacy
plugins: flaky-3.7.0
collected 38 items

interface_test.py ........................F....F........                 [100%]Using TensorFlow backend.


================================== FAILURES ===================================
________________________ test_conv1d_legacy_interface _________________________

    def test_conv1d_legacy_interface():
        old_layer = keras.layers.Convolution1D(5,
                                               filter_length=3,
                                               input_dim=3,
                                               input_length=4,
>                                              name='conv')

interface_test.py:555: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\legacy\interfaces.py:34: in wrapper
    args, kwargs, converted = preprocessor(args, kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

args = (<keras.layers.convolutional.Conv1D object at 0x000001C2F642AE10>, 5)
kwargs = {'filter_length': 3, 'input_shape': (4, 3), 'name': 'conv'}

    def conv1d_args_preprocessor(args, kwargs):
        converted = None
        if 'input_dim' in kwargs:
            if 'input_length' in kwargs:
                length = kwargs.pop('input_length')
            else:
                length = None
            input_shape = (length, kwargs.pop('input_dim'))
            kwargs['input_shape'] = input_shape
>           converted.append(('input_shape', 'input_dim'))
E           AttributeError: 'NoneType' object has no attribute 'append'

C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\legacy\interfaces.py:251: AttributeError
_____________________ test_atrousconv1d_legacy_interface ______________________

    def test_atrousconv1d_legacy_interface():
        old_layer = keras.layers.AtrousConvolution1D(5, 3,
                                                     init='normal',
                                                     subsample_length=2,
                                                     border_mode='valid',
                                                     W_regularizer='l1',
                                                     b_regularizer='l2',
                                                     W_constraint='maxnorm',
                                                     b_constraint='unitnorm',
                                                     atrous_rate=2,
>                                                    name='conv')

interface_test.py:735: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\legacy\layers.py:294: in AtrousConvolution1D
    return Conv1D(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

args = (<keras.layers.convolutional.Conv1D object at 0x000001C2F6FF8BE0>, 5, 3)
kwargs = {'W_constraint': 'maxnorm', 'W_regularizer': 'l1', 'b_constraint': 'unitnorm', 'b_regularizer': 'l2', ...}
object_name = 'Conv1D', converted = None, old_name = 'subsample_length'
new_name = 'strides', value = 2

    @six.wraps(func)
    def wrapper(*args, **kwargs):
        if object_type == 'class':
            object_name = args[0].__class__.__name__
        else:
            object_name = func.__name__
        if preprocessor:
            args, kwargs, converted = preprocessor(args, kwargs)
        else:
            converted = []
        if check_positional_args:
            if len(args) > len(allowed_positional_args) + 1:
                raise TypeError('`' + object_name +
                                '` can accept only ' +
                                str(len(allowed_positional_args)) +
                                ' positional arguments ' +
                                str(tuple(allowed_positional_args)) +
                                ', but you passed the following '
                                'positional arguments: ' +
                                str(list(args[1:])))
        for key in value_conversions:
            if key in kwargs:
                old_value = kwargs[key]
                if old_value in value_conversions[key]:
                    kwargs[key] = value_conversions[key][old_value]
        for old_name, new_name in conversions:
            if old_name in kwargs:
                value = kwargs.pop(old_name)
                if new_name in kwargs:
                    raise_duplicate_arg_error(old_name, new_name)
                kwargs[new_name] = value
>               converted.append((new_name, old_name))
E               AttributeError: 'NoneType' object has no attribute 'append'

C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\legacy\interfaces.py:58: AttributeError
============================== warnings summary ===============================
interface_test.py::test_embedding_legacy_interface
  C:\Users\mutation\Desktop\testcase\tests\keras\legacy\interface_test.py:55: UserWarning: The `dropout` argument is no longer support in `Embedding`. You can apply a `keras.layers.SpatialDropout1D` layer right after the `Embedding` layer to get the same behavior.
    old_layer = keras.layers.Embedding(1, 1, dropout=0.0, name='d')

interface_test.py::test_lstm_legacy_interface
  C:\Users\mutation\Desktop\testcase\tests\keras\legacy\interface_test.py:111: UserWarning: The `input_dim` and `input_length` arguments in recurrent layers are deprecated. Use `input_shape` instead.
    output_dim=2, name='d', consume_less='mem')

interface_test.py::test_lstm_legacy_interface
  C:\Users\mutation\Desktop\testcase\tests\keras\legacy\interface_test.py:116: UserWarning: The `input_dim` and `input_length` arguments in recurrent layers are deprecated. Use `input_shape` instead.
    output_dim=2, name='d', consume_less='mem')

interface_test.py::test_lstm_legacy_interface
  C:\Users\mutation\Desktop\testcase\tests\keras\legacy\interface_test.py:159: UserWarning: The `forget_bias_init` argument has been ignored. Use `unit_forget_bias=True` instead to initialize with ones.
    name='LSTM')

interface_test.py::test_atrousconv1d_legacy_interface
  C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\legacy\layers.py:290: UserWarning: The `AtrousConvolution1D` layer  has been deprecated. Use instead the `Conv1D` layer with the `dilation_rate` argument.
    warnings.warn('The `AtrousConvolution1D` layer '

interface_test.py::test_atrousconv2d_legacy_interface
  C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\legacy\layers.py:304: UserWarning: The `AtrousConvolution2D` layer  has been deprecated. Use instead the `Conv2D` layer with the `dilation_rate` argument.
    warnings.warn('The `AtrousConvolution2D` layer '

-- Docs: https://docs.pytest.org/en/stable/warnings.html
=========================== short test summary info ===========================
FAILED interface_test.py::test_conv1d_legacy_interface - AttributeError: 'Non...
FAILED interface_test.py::test_atrousconv1d_legacy_interface - AttributeError...
================== 2 failed, 36 passed, 6 warnings in 1.57s ===================
