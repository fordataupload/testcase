2020-10-04 19:11:53.264439: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_100.dll
================================================= test session starts =================================================
platform win32 -- Python 3.6.12, pytest-6.0.2, py-1.9.0, pluggy-0.13.1
rootdir: C:\Users\mutation\Desktop\testcase\tests\keras\legacy
plugins: flaky-3.7.0
collected 38 items

interface_test.py ..F...................................                                                         [100%]

====================================================== FAILURES =======================================================
___________________________________________ test_embedding_legacy_interface ___________________________________________

    def test_embedding_legacy_interface():
        old_layer = keras.layers.Embedding(4, 2, name='d')
        new_layer = keras.layers.Embedding(output_dim=2, input_dim=4, name='d')
        assert json.dumps(old_layer.get_config()) == json.dumps(new_layer.get_config())

        old_layer = keras.layers.Embedding(input_dim=4, output_dim=2, name='d',
                                           init='normal',
                                           W_regularizer='l1',
>                                          W_constraint='maxnorm')

interface_test.py:48:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

args = (<keras.layers.embeddings.Embedding object at 0x000002AD88AD0518>,)
kwargs = {'W_constraint': 'maxnorm', 'W_regularizer': 'l1', 'embeddings_initializer': 'normal', 'input_dim': 4, ...}
object_name = 'Embedding', converted = None, old_name = 'init', new_name = 'embeddings_initializer', value = 'normal'

    @six.wraps(func)
    def wrapper(*args, **kwargs):
        if object_type == 'class':
            object_name = args[0].__class__.__name__
        else:
            object_name = func.__name__
        if preprocessor:
            args, kwargs, converted = preprocessor(args, kwargs)
        else:
            converted = []
        if check_positional_args:
            if len(args) > len(allowed_positional_args) + 1:
                raise TypeError('`' + object_name +
                                '` can accept only ' +
                                str(len(allowed_positional_args)) +
                                ' positional arguments ' +
                                str(tuple(allowed_positional_args)) +
                                ', but you passed the following '
                                'positional arguments: ' +
                                str(list(args[1:])))
        for key in value_conversions:
            if key in kwargs:
                old_value = kwargs[key]
                if old_value in value_conversions[key]:
                    kwargs[key] = value_conversions[key][old_value]
        for old_name, new_name in conversions:
            if old_name in kwargs:
                value = kwargs.pop(old_name)
                if new_name in kwargs:
                    raise_duplicate_arg_error(old_name, new_name)
                kwargs[new_name] = value
>               converted.append((new_name, old_name))
E               AttributeError: 'NoneType' object has no attribute 'append'

C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\legacy\interfaces.py:58: AttributeError
================================================== warnings summary ===================================================
interface_test.py::test_lstm_legacy_interface
  C:\Users\mutation\Desktop\testcase\tests\keras\legacy\interface_test.py:111: UserWarning: The `input_dim` and `input_length` arguments in recurrent layers are deprecated. Use `input_shape` instead.
    output_dim=2, name='d', consume_less='mem')

interface_test.py::test_lstm_legacy_interface
  C:\Users\mutation\Desktop\testcase\tests\keras\legacy\interface_test.py:116: UserWarning: The `input_dim` and `input_length` arguments in recurrent layers are deprecated. Use `input_shape` instead.
    output_dim=2, name='d', consume_less='mem')

interface_test.py::test_lstm_legacy_interface
  C:\Users\mutation\Desktop\testcase\tests\keras\legacy\interface_test.py:159: UserWarning: The `forget_bias_init` argument has been ignored. Use `unit_forget_bias=True` instead to initialize with ones.
    name='LSTM')

interface_test.py::test_atrousconv1d_legacy_interface
  C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\legacy\layers.py:290: UserWarning: The `AtrousConvolution1D` layer  has been deprecated. Use instead the `Conv1D` layer with the `dilation_rate` argument.
    warnings.warn('The `AtrousConvolution1D` layer '

interface_test.py::test_atrousconv2d_legacy_interface
  C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\legacy\layers.py:304: UserWarning: The `AtrousConvolution2D` layer  has been deprecated. Use instead the `Conv2D` layer with the `dilation_rate` argument.
    warnings.warn('The `AtrousConvolution2D` layer '

-- Docs: https://docs.pytest.org/en/stable/warnings.html
=============================================== short test summary info ===============================================
FAILED interface_test.py::test_embedding_legacy_interface - AttributeError: 'NoneType' object has no attribute 'append'
====================================== 1 failed, 37 passed, 5 warnings in 1.59s =======================================
