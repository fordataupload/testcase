2020-10-03 17:15:23.325999: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_100.dll
============================= test session starts =============================
platform win32 -- Python 3.6.12, pytest-6.0.2, py-1.9.0, pluggy-0.13.1
rootdir: C:\Users\mutation\Desktop\testcase\tests\keras\layers
plugins: flaky-3.7.0
collected 110 items

convolutional_test.py ..............FFFFFFFFF........................... [ 45%]
............................................................             [100%]

================================== FAILURES ===================================
_________________ test_conv2d_transpose[valid-None-strides0] __________________

padding = 'valid', out_padding = None, strides = (1, 1)

    @pytest.mark.parametrize(
        'padding,out_padding,strides',
        [(padding, out_padding, strides)
         for padding in _convolution_paddings
         for out_padding in [None, (0, 0), (1, 1)]
         for strides in [(1, 1), (2, 2)]
         if (not (padding == 'same' and strides != (1, 1))
             and not(strides == (1, 1) and out_padding == (1, 1)))]
    )
    def test_conv2d_transpose(padding, out_padding, strides):
        num_samples = 2
        filters = 2
        stack_size = 3
        num_row = 5
        num_col = 6
    
        layer_test(convolutional.Conv2DTranspose,
                   kwargs={'filters': filters,
                           'kernel_size': 3,
                           'padding': padding,
                           'output_padding': out_padding,
                           'strides': strides,
                           'data_format': 'channels_last'},
                   input_shape=(num_samples, num_row, num_col, stack_size),
>                  fixed_batch_size=True)

convolutional_test.py:213: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\utils\test_utils.py:100: in layer_test
    actual_output = model.predict(input_data)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\engine\training.py:1462: in predict
    callbacks=callbacks)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\engine\training_arrays.py:324: in predict_loop
    batch_outs = f(ins_batch)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\keras\backend.py:3476: in __call__
    run_metadata=self.run_metadata)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <tensorflow.python.client.session.BaseSession._Callable object at 0x000001D056BDBB70>
args = (array([[[[2.0712385 , 4.88939   , 6.400895  ],
         [4.4927425 , 7.910379  , 0.1372633 ],
         [7.7619805 , 7...7  ],
         [9.940602  , 5.3325686 , 3.1388705 ],
         [7.1357617 , 2.1540787 , 4.8969913 ]]]], dtype=float32),)
kwargs = {'run_metadata': None}, run_metadata = None, run_metadata_ptr = None

    def __call__(self, *args, **kwargs):
      # TODO(b/74355905): Support argument and return value nested structures,
      # and tensor-like objects such as SparseTensors.
      run_metadata = kwargs.get('run_metadata', None)
      try:
        run_metadata_ptr = tf_session.TF_NewBuffer() if run_metadata else None
        ret = tf_session.TF_SessionRunCallable(self._session._session,
                                               self._handle, args,
>                                              run_metadata_ptr)
E                                              tensorflow.python.framework.errors_impl.InvalidArgumentError: 2 root error(s) found.
E                                                (0) Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
E                                              	 [[{{node conv2d_transpose_1/conv2d_transpose}}]]
E                                                (1) Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
E                                              	 [[{{node conv2d_transpose_1/conv2d_transpose}}]]
E                                              	 [[conv2d_transpose_1/BiasAdd/_7]]
E                                              0 successful operations.
E                                              0 derived errors ignored.

C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\client\session.py:1472: InvalidArgumentError
---------------------------- Captured stderr call -----------------------------
2020-10-03 17:15:34.322705: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
name: GeForce RTX 2080 Ti major: 7 minor: 5 memoryClockRate(GHz): 1.65
pciBusID: 0000:73:00.0
2020-10-03 17:15:34.323286: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_100.dll
2020-10-03 17:15:34.323632: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_100.dll
2020-10-03 17:15:34.323979: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_100.dll
2020-10-03 17:15:34.324317: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_100.dll
2020-10-03 17:15:34.324661: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_100.dll
2020-10-03 17:15:34.325029: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_100.dll
2020-10-03 17:15:34.325384: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-10-03 17:15:34.325964: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0
2020-10-03 17:15:34.326271: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1159] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-10-03 17:15:34.326627: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1165]      0 
2020-10-03 17:15:34.326850: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1178] 0:   N 
2020-10-03 17:15:34.327394: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1304] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 8686 MB memory) -> physical GPU (device: 0, name: GeForce RTX 2080 Ti, pci bus id: 0000:73:00.0, compute capability: 7.5)
2020-10-03 17:15:34.376120: W tensorflow/core/framework/op_kernel.cc:1651] OP_REQUIRES failed at conv_grad_input_ops.cc:811 : Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
_________________ test_conv2d_transpose[valid-None-strides1] __________________

padding = 'valid', out_padding = None, strides = (2, 2)

    @pytest.mark.parametrize(
        'padding,out_padding,strides',
        [(padding, out_padding, strides)
         for padding in _convolution_paddings
         for out_padding in [None, (0, 0), (1, 1)]
         for strides in [(1, 1), (2, 2)]
         if (not (padding == 'same' and strides != (1, 1))
             and not(strides == (1, 1) and out_padding == (1, 1)))]
    )
    def test_conv2d_transpose(padding, out_padding, strides):
        num_samples = 2
        filters = 2
        stack_size = 3
        num_row = 5
        num_col = 6
    
        layer_test(convolutional.Conv2DTranspose,
                   kwargs={'filters': filters,
                           'kernel_size': 3,
                           'padding': padding,
                           'output_padding': out_padding,
                           'strides': strides,
                           'data_format': 'channels_last'},
                   input_shape=(num_samples, num_row, num_col, stack_size),
>                  fixed_batch_size=True)

convolutional_test.py:213: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\utils\test_utils.py:100: in layer_test
    actual_output = model.predict(input_data)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\engine\training.py:1462: in predict
    callbacks=callbacks)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\engine\training_arrays.py:324: in predict_loop
    batch_outs = f(ins_batch)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\keras\backend.py:3476: in __call__
    run_metadata=self.run_metadata)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <tensorflow.python.client.session.BaseSession._Callable object at 0x000001D0649F6400>
args = (array([[[[5.0127406 , 9.364674  , 2.0756903 ],
         [8.427959  , 1.4432143 , 5.443797  ],
         [6.9437275 , 4...1  ],
         [0.27812392, 3.5943606 , 5.408037  ],
         [9.128319  , 5.710364  , 8.932836  ]]]], dtype=float32),)
kwargs = {'run_metadata': None}, run_metadata = None, run_metadata_ptr = None

    def __call__(self, *args, **kwargs):
      # TODO(b/74355905): Support argument and return value nested structures,
      # and tensor-like objects such as SparseTensors.
      run_metadata = kwargs.get('run_metadata', None)
      try:
        run_metadata_ptr = tf_session.TF_NewBuffer() if run_metadata else None
        ret = tf_session.TF_SessionRunCallable(self._session._session,
                                               self._handle, args,
>                                              run_metadata_ptr)
E                                              tensorflow.python.framework.errors_impl.InvalidArgumentError: 2 root error(s) found.
E                                                (0) Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
E                                              	 [[{{node conv2d_transpose_1/conv2d_transpose}}]]
E                                                (1) Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
E                                              	 [[{{node conv2d_transpose_1/conv2d_transpose}}]]
E                                              	 [[conv2d_transpose_1/BiasAdd/_7]]
E                                              0 successful operations.
E                                              0 derived errors ignored.

C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\client\session.py:1472: InvalidArgumentError
---------------------------- Captured stderr call -----------------------------
2020-10-03 17:15:35.644470: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
name: GeForce RTX 2080 Ti major: 7 minor: 5 memoryClockRate(GHz): 1.65
pciBusID: 0000:73:00.0
2020-10-03 17:15:35.645061: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_100.dll
2020-10-03 17:15:35.645409: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_100.dll
2020-10-03 17:15:35.645753: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_100.dll
2020-10-03 17:15:35.646094: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_100.dll
2020-10-03 17:15:35.646441: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_100.dll
2020-10-03 17:15:35.646786: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_100.dll
2020-10-03 17:15:35.647159: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-10-03 17:15:35.647811: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0
2020-10-03 17:15:35.648204: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1159] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-10-03 17:15:35.648657: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1165]      0 
2020-10-03 17:15:35.648921: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1178] 0:   N 
2020-10-03 17:15:35.649509: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1304] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 8686 MB memory) -> physical GPU (device: 0, name: GeForce RTX 2080 Ti, pci bus id: 0000:73:00.0, compute capability: 7.5)
2020-10-03 17:15:35.687825: W tensorflow/core/framework/op_kernel.cc:1651] OP_REQUIRES failed at conv_grad_input_ops.cc:811 : Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
_____________ test_conv2d_transpose[valid-out_padding2-strides2] ______________

padding = 'valid', out_padding = (0, 0), strides = (1, 1)

    @pytest.mark.parametrize(
        'padding,out_padding,strides',
        [(padding, out_padding, strides)
         for padding in _convolution_paddings
         for out_padding in [None, (0, 0), (1, 1)]
         for strides in [(1, 1), (2, 2)]
         if (not (padding == 'same' and strides != (1, 1))
             and not(strides == (1, 1) and out_padding == (1, 1)))]
    )
    def test_conv2d_transpose(padding, out_padding, strides):
        num_samples = 2
        filters = 2
        stack_size = 3
        num_row = 5
        num_col = 6
    
        layer_test(convolutional.Conv2DTranspose,
                   kwargs={'filters': filters,
                           'kernel_size': 3,
                           'padding': padding,
                           'output_padding': out_padding,
                           'strides': strides,
                           'data_format': 'channels_last'},
                   input_shape=(num_samples, num_row, num_col, stack_size),
>                  fixed_batch_size=True)

convolutional_test.py:213: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\utils\test_utils.py:100: in layer_test
    actual_output = model.predict(input_data)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\engine\training.py:1462: in predict
    callbacks=callbacks)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\engine\training_arrays.py:324: in predict_loop
    batch_outs = f(ins_batch)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\keras\backend.py:3476: in __call__
    run_metadata=self.run_metadata)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <tensorflow.python.client.session.BaseSession._Callable object at 0x000001D064A8D780>
args = (array([[[[2.6261866 , 5.948157  , 8.473411  ],
         [4.571256  , 0.5029154 , 4.504739  ],
         [2.53204   , 3...   ],
         [2.8906138 , 9.510245  , 4.497841  ],
         [7.628919  , 4.123901  , 5.044827  ]]]], dtype=float32),)
kwargs = {'run_metadata': None}, run_metadata = None, run_metadata_ptr = None

    def __call__(self, *args, **kwargs):
      # TODO(b/74355905): Support argument and return value nested structures,
      # and tensor-like objects such as SparseTensors.
      run_metadata = kwargs.get('run_metadata', None)
      try:
        run_metadata_ptr = tf_session.TF_NewBuffer() if run_metadata else None
        ret = tf_session.TF_SessionRunCallable(self._session._session,
                                               self._handle, args,
>                                              run_metadata_ptr)
E                                              tensorflow.python.framework.errors_impl.InvalidArgumentError: 2 root error(s) found.
E                                                (0) Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
E                                              	 [[{{node conv2d_transpose_1/conv2d_transpose}}]]
E                                                (1) Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
E                                              	 [[{{node conv2d_transpose_1/conv2d_transpose}}]]
E                                              	 [[conv2d_transpose_1/BiasAdd/_7]]
E                                              0 successful operations.
E                                              0 derived errors ignored.

C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\client\session.py:1472: InvalidArgumentError
---------------------------- Captured stderr call -----------------------------
2020-10-03 17:15:35.851285: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
name: GeForce RTX 2080 Ti major: 7 minor: 5 memoryClockRate(GHz): 1.65
pciBusID: 0000:73:00.0
2020-10-03 17:15:35.852012: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_100.dll
2020-10-03 17:15:35.852422: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_100.dll
2020-10-03 17:15:35.852766: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_100.dll
2020-10-03 17:15:35.853103: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_100.dll
2020-10-03 17:15:35.853446: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_100.dll
2020-10-03 17:15:35.853813: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_100.dll
2020-10-03 17:15:35.854168: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-10-03 17:15:35.854748: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0
2020-10-03 17:15:35.855123: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1159] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-10-03 17:15:35.855506: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1165]      0 
2020-10-03 17:15:35.855742: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1178] 0:   N 
2020-10-03 17:15:35.856323: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1304] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 8686 MB memory) -> physical GPU (device: 0, name: GeForce RTX 2080 Ti, pci bus id: 0000:73:00.0, compute capability: 7.5)
2020-10-03 17:15:35.892957: W tensorflow/core/framework/op_kernel.cc:1651] OP_REQUIRES failed at conv_grad_input_ops.cc:811 : Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
_____________ test_conv2d_transpose[valid-out_padding3-strides3] ______________

padding = 'valid', out_padding = (0, 0), strides = (2, 2)

    @pytest.mark.parametrize(
        'padding,out_padding,strides',
        [(padding, out_padding, strides)
         for padding in _convolution_paddings
         for out_padding in [None, (0, 0), (1, 1)]
         for strides in [(1, 1), (2, 2)]
         if (not (padding == 'same' and strides != (1, 1))
             and not(strides == (1, 1) and out_padding == (1, 1)))]
    )
    def test_conv2d_transpose(padding, out_padding, strides):
        num_samples = 2
        filters = 2
        stack_size = 3
        num_row = 5
        num_col = 6
    
        layer_test(convolutional.Conv2DTranspose,
                   kwargs={'filters': filters,
                           'kernel_size': 3,
                           'padding': padding,
                           'output_padding': out_padding,
                           'strides': strides,
                           'data_format': 'channels_last'},
                   input_shape=(num_samples, num_row, num_col, stack_size),
>                  fixed_batch_size=True)

convolutional_test.py:213: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\utils\test_utils.py:100: in layer_test
    actual_output = model.predict(input_data)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\engine\training.py:1462: in predict
    callbacks=callbacks)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\engine\training_arrays.py:324: in predict_loop
    batch_outs = f(ins_batch)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\keras\backend.py:3476: in __call__
    run_metadata=self.run_metadata)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <tensorflow.python.client.session.BaseSession._Callable object at 0x000001D0650CA278>
args = (array([[[[5.202861  , 2.0374813 , 1.6647761 ],
         [0.8462298 , 2.1453717 , 6.393315  ],
         [2.7586896 , 8...3  ],
         [3.896007  , 7.973253  , 7.93249   ],
         [8.001092  , 6.1782823 , 9.761064  ]]]], dtype=float32),)
kwargs = {'run_metadata': None}, run_metadata = None, run_metadata_ptr = None

    def __call__(self, *args, **kwargs):
      # TODO(b/74355905): Support argument and return value nested structures,
      # and tensor-like objects such as SparseTensors.
      run_metadata = kwargs.get('run_metadata', None)
      try:
        run_metadata_ptr = tf_session.TF_NewBuffer() if run_metadata else None
        ret = tf_session.TF_SessionRunCallable(self._session._session,
                                               self._handle, args,
>                                              run_metadata_ptr)
E                                              tensorflow.python.framework.errors_impl.InvalidArgumentError: 2 root error(s) found.
E                                                (0) Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
E                                              	 [[{{node conv2d_transpose_1/conv2d_transpose}}]]
E                                                (1) Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
E                                              	 [[{{node conv2d_transpose_1/conv2d_transpose}}]]
E                                              	 [[conv2d_transpose_1/BiasAdd/_7]]
E                                              0 successful operations.
E                                              0 derived errors ignored.

C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\client\session.py:1472: InvalidArgumentError
---------------------------- Captured stderr call -----------------------------
2020-10-03 17:15:36.130881: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
name: GeForce RTX 2080 Ti major: 7 minor: 5 memoryClockRate(GHz): 1.65
pciBusID: 0000:73:00.0
2020-10-03 17:15:36.131548: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_100.dll
2020-10-03 17:15:36.131949: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_100.dll
2020-10-03 17:15:36.132391: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_100.dll
2020-10-03 17:15:36.132818: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_100.dll
2020-10-03 17:15:36.133243: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_100.dll
2020-10-03 17:15:36.133676: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_100.dll
2020-10-03 17:15:36.134074: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-10-03 17:15:36.134716: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0
2020-10-03 17:15:36.135098: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1159] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-10-03 17:15:36.135535: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1165]      0 
2020-10-03 17:15:36.135812: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1178] 0:   N 
2020-10-03 17:15:36.136476: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1304] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 8686 MB memory) -> physical GPU (device: 0, name: GeForce RTX 2080 Ti, pci bus id: 0000:73:00.0, compute capability: 7.5)
2020-10-03 17:15:36.183238: W tensorflow/core/framework/op_kernel.cc:1651] OP_REQUIRES failed at conv_grad_input_ops.cc:811 : Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
_____________ test_conv2d_transpose[valid-out_padding4-strides4] ______________

padding = 'valid', out_padding = (1, 1), strides = (2, 2)

    @pytest.mark.parametrize(
        'padding,out_padding,strides',
        [(padding, out_padding, strides)
         for padding in _convolution_paddings
         for out_padding in [None, (0, 0), (1, 1)]
         for strides in [(1, 1), (2, 2)]
         if (not (padding == 'same' and strides != (1, 1))
             and not(strides == (1, 1) and out_padding == (1, 1)))]
    )
    def test_conv2d_transpose(padding, out_padding, strides):
        num_samples = 2
        filters = 2
        stack_size = 3
        num_row = 5
        num_col = 6
    
        layer_test(convolutional.Conv2DTranspose,
                   kwargs={'filters': filters,
                           'kernel_size': 3,
                           'padding': padding,
                           'output_padding': out_padding,
                           'strides': strides,
                           'data_format': 'channels_last'},
                   input_shape=(num_samples, num_row, num_col, stack_size),
>                  fixed_batch_size=True)

convolutional_test.py:213: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\utils\test_utils.py:100: in layer_test
    actual_output = model.predict(input_data)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\engine\training.py:1462: in predict
    callbacks=callbacks)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\engine\training_arrays.py:324: in predict_loop
    batch_outs = f(ins_batch)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\keras\backend.py:3476: in __call__
    run_metadata=self.run_metadata)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <tensorflow.python.client.session.BaseSession._Callable object at 0x000001D064D527F0>
args = (array([[[[5.3219643 , 8.983635  , 0.45711097],
         [4.7058835 , 2.5186317 , 3.9908516 ],
         [5.320866  , 7...898],
         [9.831903  , 7.118688  , 3.4450278 ],
         [3.1624112 , 8.3080225 , 5.831047  ]]]], dtype=float32),)
kwargs = {'run_metadata': None}, run_metadata = None, run_metadata_ptr = None

    def __call__(self, *args, **kwargs):
      # TODO(b/74355905): Support argument and return value nested structures,
      # and tensor-like objects such as SparseTensors.
      run_metadata = kwargs.get('run_metadata', None)
      try:
        run_metadata_ptr = tf_session.TF_NewBuffer() if run_metadata else None
        ret = tf_session.TF_SessionRunCallable(self._session._session,
                                               self._handle, args,
>                                              run_metadata_ptr)
E                                              tensorflow.python.framework.errors_impl.InvalidArgumentError: 2 root error(s) found.
E                                                (0) Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
E                                              	 [[{{node conv2d_transpose_1/conv2d_transpose}}]]
E                                              	 [[conv2d_transpose_1/BiasAdd/_7]]
E                                                (1) Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
E                                              	 [[{{node conv2d_transpose_1/conv2d_transpose}}]]
E                                              0 successful operations.
E                                              0 derived errors ignored.

C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\client\session.py:1472: InvalidArgumentError
---------------------------- Captured stderr call -----------------------------
2020-10-03 17:15:36.459337: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
name: GeForce RTX 2080 Ti major: 7 minor: 5 memoryClockRate(GHz): 1.65
pciBusID: 0000:73:00.0
2020-10-03 17:15:36.459941: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_100.dll
2020-10-03 17:15:36.460414: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_100.dll
2020-10-03 17:15:36.460850: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_100.dll
2020-10-03 17:15:36.461279: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_100.dll
2020-10-03 17:15:36.461651: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_100.dll
2020-10-03 17:15:36.462004: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_100.dll
2020-10-03 17:15:36.462361: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-10-03 17:15:36.462969: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0
2020-10-03 17:15:36.463357: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1159] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-10-03 17:15:36.463746: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1165]      0 
2020-10-03 17:15:36.463988: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1178] 0:   N 
2020-10-03 17:15:36.464576: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1304] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 8686 MB memory) -> physical GPU (device: 0, name: GeForce RTX 2080 Ti, pci bus id: 0000:73:00.0, compute capability: 7.5)
2020-10-03 17:15:36.504003: W tensorflow/core/framework/op_kernel.cc:1651] OP_REQUIRES failed at conv_grad_input_ops.cc:811 : Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
__________________ test_conv2d_transpose[same-None-strides5] __________________

padding = 'same', out_padding = None, strides = (1, 1)

    @pytest.mark.parametrize(
        'padding,out_padding,strides',
        [(padding, out_padding, strides)
         for padding in _convolution_paddings
         for out_padding in [None, (0, 0), (1, 1)]
         for strides in [(1, 1), (2, 2)]
         if (not (padding == 'same' and strides != (1, 1))
             and not(strides == (1, 1) and out_padding == (1, 1)))]
    )
    def test_conv2d_transpose(padding, out_padding, strides):
        num_samples = 2
        filters = 2
        stack_size = 3
        num_row = 5
        num_col = 6
    
        layer_test(convolutional.Conv2DTranspose,
                   kwargs={'filters': filters,
                           'kernel_size': 3,
                           'padding': padding,
                           'output_padding': out_padding,
                           'strides': strides,
                           'data_format': 'channels_last'},
                   input_shape=(num_samples, num_row, num_col, stack_size),
>                  fixed_batch_size=True)

convolutional_test.py:213: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\utils\test_utils.py:100: in layer_test
    actual_output = model.predict(input_data)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\engine\training.py:1462: in predict
    callbacks=callbacks)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\engine\training_arrays.py:324: in predict_loop
    batch_outs = f(ins_batch)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\keras\backend.py:3476: in __call__
    run_metadata=self.run_metadata)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <tensorflow.python.client.session.BaseSession._Callable object at 0x000001D064E50CC0>
args = (array([[[[8.3504314e+00, 9.1426125e+00, 5.7261271e+00],
         [4.2671375e+00, 4.6587701e+00, 6.5072985e+00],
     ...0660477e+00, 1.4221679e+00, 2.4374208e+00],
         [3.1167600e+00, 7.2701125e+00, 7.1489658e+00]]]], dtype=float32),)
kwargs = {'run_metadata': None}, run_metadata = None, run_metadata_ptr = None

    def __call__(self, *args, **kwargs):
      # TODO(b/74355905): Support argument and return value nested structures,
      # and tensor-like objects such as SparseTensors.
      run_metadata = kwargs.get('run_metadata', None)
      try:
        run_metadata_ptr = tf_session.TF_NewBuffer() if run_metadata else None
        ret = tf_session.TF_SessionRunCallable(self._session._session,
                                               self._handle, args,
>                                              run_metadata_ptr)
E                                              tensorflow.python.framework.errors_impl.InvalidArgumentError: 2 root error(s) found.
E                                                (0) Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
E                                              	 [[{{node conv2d_transpose_1/conv2d_transpose}}]]
E                                                (1) Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
E                                              	 [[{{node conv2d_transpose_1/conv2d_transpose}}]]
E                                              	 [[conv2d_transpose_1/BiasAdd/_7]]
E                                              0 successful operations.
E                                              0 derived errors ignored.

C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\client\session.py:1472: InvalidArgumentError
---------------------------- Captured stderr call -----------------------------
2020-10-03 17:15:36.755162: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
name: GeForce RTX 2080 Ti major: 7 minor: 5 memoryClockRate(GHz): 1.65
pciBusID: 0000:73:00.0
2020-10-03 17:15:36.755758: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_100.dll
2020-10-03 17:15:36.756109: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_100.dll
2020-10-03 17:15:36.756458: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_100.dll
2020-10-03 17:15:36.756805: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_100.dll
2020-10-03 17:15:36.757197: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_100.dll
2020-10-03 17:15:36.757683: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_100.dll
2020-10-03 17:15:36.758106: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-10-03 17:15:36.758814: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0
2020-10-03 17:15:36.759327: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1159] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-10-03 17:15:36.759761: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1165]      0 
2020-10-03 17:15:36.760020: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1178] 0:   N 
2020-10-03 17:15:36.760723: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1304] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 8686 MB memory) -> physical GPU (device: 0, name: GeForce RTX 2080 Ti, pci bus id: 0000:73:00.0, compute capability: 7.5)
2020-10-03 17:15:36.803201: W tensorflow/core/framework/op_kernel.cc:1651] OP_REQUIRES failed at conv_grad_input_ops.cc:811 : Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
______________ test_conv2d_transpose[same-out_padding6-strides6] ______________

padding = 'same', out_padding = (0, 0), strides = (1, 1)

    @pytest.mark.parametrize(
        'padding,out_padding,strides',
        [(padding, out_padding, strides)
         for padding in _convolution_paddings
         for out_padding in [None, (0, 0), (1, 1)]
         for strides in [(1, 1), (2, 2)]
         if (not (padding == 'same' and strides != (1, 1))
             and not(strides == (1, 1) and out_padding == (1, 1)))]
    )
    def test_conv2d_transpose(padding, out_padding, strides):
        num_samples = 2
        filters = 2
        stack_size = 3
        num_row = 5
        num_col = 6
    
        layer_test(convolutional.Conv2DTranspose,
                   kwargs={'filters': filters,
                           'kernel_size': 3,
                           'padding': padding,
                           'output_padding': out_padding,
                           'strides': strides,
                           'data_format': 'channels_last'},
                   input_shape=(num_samples, num_row, num_col, stack_size),
>                  fixed_batch_size=True)

convolutional_test.py:213: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\utils\test_utils.py:100: in layer_test
    actual_output = model.predict(input_data)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\engine\training.py:1462: in predict
    callbacks=callbacks)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\engine\training_arrays.py:324: in predict_loop
    batch_outs = f(ins_batch)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\keras\backend.py:3476: in __call__
    run_metadata=self.run_metadata)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <tensorflow.python.client.session.BaseSession._Callable object at 0x000001D064ACC438>
args = (array([[[[3.698098  , 6.6035604 , 9.359651  ],
         [3.9272265 , 1.1682159 , 7.4381213 ],
         [6.327124  , 9...4  ],
         [0.49257982, 4.4973693 , 0.9303704 ],
         [6.863508  , 7.772859  , 6.3153005 ]]]], dtype=float32),)
kwargs = {'run_metadata': None}, run_metadata = None, run_metadata_ptr = None

    def __call__(self, *args, **kwargs):
      # TODO(b/74355905): Support argument and return value nested structures,
      # and tensor-like objects such as SparseTensors.
      run_metadata = kwargs.get('run_metadata', None)
      try:
        run_metadata_ptr = tf_session.TF_NewBuffer() if run_metadata else None
        ret = tf_session.TF_SessionRunCallable(self._session._session,
                                               self._handle, args,
>                                              run_metadata_ptr)
E                                              tensorflow.python.framework.errors_impl.InvalidArgumentError: 2 root error(s) found.
E                                                (0) Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
E                                              	 [[{{node conv2d_transpose_1/conv2d_transpose}}]]
E                                                (1) Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
E                                              	 [[{{node conv2d_transpose_1/conv2d_transpose}}]]
E                                              	 [[conv2d_transpose_1/BiasAdd/_7]]
E                                              0 successful operations.
E                                              0 derived errors ignored.

C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\client\session.py:1472: InvalidArgumentError
---------------------------- Captured stderr call -----------------------------
2020-10-03 17:15:36.983715: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
name: GeForce RTX 2080 Ti major: 7 minor: 5 memoryClockRate(GHz): 1.65
pciBusID: 0000:73:00.0
2020-10-03 17:15:36.984324: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_100.dll
2020-10-03 17:15:36.984671: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_100.dll
2020-10-03 17:15:36.985013: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_100.dll
2020-10-03 17:15:36.985350: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_100.dll
2020-10-03 17:15:36.985695: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_100.dll
2020-10-03 17:15:36.986039: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_100.dll
2020-10-03 17:15:36.986388: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-10-03 17:15:36.986984: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0
2020-10-03 17:15:36.987348: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1159] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-10-03 17:15:36.987737: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1165]      0 
2020-10-03 17:15:36.987975: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1178] 0:   N 
2020-10-03 17:15:36.988609: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1304] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 8686 MB memory) -> physical GPU (device: 0, name: GeForce RTX 2080 Ti, pci bus id: 0000:73:00.0, compute capability: 7.5)
2020-10-03 17:15:37.028971: W tensorflow/core/framework/op_kernel.cc:1651] OP_REQUIRES failed at conv_grad_input_ops.cc:811 : Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
_______________________ test_conv2d_transpose_dilation ________________________

    @pytest.mark.skipif((K.backend() == 'cntk' and load_backend.dev.type() == 0),
                        reason='cntk only supports dilated conv transpose on GPU')
    def test_conv2d_transpose_dilation():
    
        layer_test(convolutional.Conv2DTranspose,
                   kwargs={'filters': 2,
                           'kernel_size': 3,
                           'padding': 'same',
                           'data_format': 'channels_last',
                           'dilation_rate': (2, 2)},
>                  input_shape=(2, 5, 6, 3))

convolutional_test.py:226: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\utils\test_utils.py:94: in layer_test
    y = layer(x)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\engine\base_layer.py:489: in __call__
    output = self.call(inputs, **kwargs)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\layers\convolutional.py:847: in call
    dilation_rate=self.dilation_rate)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\backend\tensorflow_backend.py:3778: in conv2d_transpose
    x, kernel, output_shape, dilation_rate[0], padding)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

value = <tf.Tensor 'input_1:0' shape=(?, 5, 6, 3) dtype=float32>
filters = <tf.Tensor 'conv2d_transpose_1/atrous_conv2d_transpose/ReadVariableOp:0' shape=(3, 3, 2, 5) dtype=float32>
output_shape = <tf.Tensor 'conv2d_transpose_1/stack:0' shape=(4,) dtype=int32>
rate = 2, padding = 'SAME', name = 'conv2d_transpose_1/atrous_conv2d_transpose/'

    @tf_export("nn.atrous_conv2d_transpose")
    def atrous_conv2d_transpose(value,
                                filters,
                                output_shape,
                                rate,
                                padding,
                                name=None):
      """The transpose of `atrous_conv2d`.
    
      This operation is sometimes called "deconvolution" after [Deconvolutional
      Networks](https://www.matthewzeiler.com/mattzeiler/deconvolutionalnetworks.pdf),
      but is really the transpose (gradient) of `atrous_conv2d` rather than an
      actual deconvolution.
    
      Args:
        value: A 4-D `Tensor` of type `float`. It needs to be in the default `NHWC`
          format. Its shape is `[batch, in_height, in_width, in_channels]`.
        filters: A 4-D `Tensor` with the same type as `value` and shape
          `[filter_height, filter_width, out_channels, in_channels]`. `filters`'
          `in_channels` dimension must match that of `value`. Atrous convolution is
          equivalent to standard convolution with upsampled filters with effective
          height `filter_height + (filter_height - 1) * (rate - 1)` and effective
          width `filter_width + (filter_width - 1) * (rate - 1)`, produced by
          inserting `rate - 1` zeros along consecutive elements across the
          `filters`' spatial dimensions.
        output_shape: A 1-D `Tensor` of shape representing the output shape of the
          deconvolution op.
        rate: A positive int32. The stride with which we sample input values across
          the `height` and `width` dimensions. Equivalently, the rate by which we
          upsample the filter values by inserting zeros across the `height` and
          `width` dimensions. In the literature, the same parameter is sometimes
          called `input stride` or `dilation`.
        padding: A string, either `'VALID'` or `'SAME'`. The padding algorithm.
        name: Optional name for the returned tensor.
    
      Returns:
        A `Tensor` with the same type as `value`.
    
      Raises:
        ValueError: If input/output depth does not match `filters`' shape, or if
          padding is other than `'VALID'` or `'SAME'`, or if the `rate` is less
          than one, or if the output_shape is not a tensor with 4 elements.
      """
      with ops.name_scope(name, "atrous_conv2d_transpose",
                          [value, filters, output_shape]) as name:
        value = ops.convert_to_tensor(value, name="value")
        filters = ops.convert_to_tensor(filters, name="filters")
        if not value.get_shape().dims[3].is_compatible_with(filters.get_shape()[3]):
          raise ValueError(
              "value's input channels does not match filters' input channels, "
              "{} != {}".format(value.get_shape()[3],
>                               filters.get_shape()[3]))
E         ValueError: value's input channels does not match filters' input channels, 3 != 5

C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\ops\nn_ops.py:2329: ValueError
____________________ test_conv2d_transpose_channels_first _____________________

    def test_conv2d_transpose_channels_first():
        num_samples = 2
        filters = 2
        stack_size = 3
        num_row = 5
        num_col = 6
        padding = 'valid'
        strides = (2, 2)
    
        layer_test(convolutional.Conv2DTranspose,
                   kwargs={'filters': filters,
                           'kernel_size': 3,
                           'padding': padding,
                           'data_format': 'channels_first',
                           'activation': None,
                           'kernel_regularizer': 'l2',
                           'bias_regularizer': 'l2',
                           'activity_regularizer': 'l2',
                           'kernel_constraint': 'max_norm',
                           'bias_constraint': 'max_norm',
                           'strides': strides},
                   input_shape=(num_samples, stack_size, num_row, num_col),
>                  fixed_batch_size=True)

convolutional_test.py:268: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\utils\test_utils.py:100: in layer_test
    actual_output = model.predict(input_data)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\engine\training.py:1462: in predict
    callbacks=callbacks)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\engine\training_arrays.py:324: in predict_loop
    batch_outs = f(ins_batch)
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\keras\backend.py:3476: in __call__
    run_metadata=self.run_metadata)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <tensorflow.python.client.session.BaseSession._Callable object at 0x000001D0650D29E8>
args = (array([[[[6.49342585e+00, 9.06391430e+00, 6.86878252e+00,
          6.04079179e-02, 1.75947177e+00, 3.90605569e+00],
...0, 5.08485079e-01, 3.29588342e+00,
          5.23305511e+00, 9.39762402e+00, 2.83738780e+00]]]],
      dtype=float32),)
kwargs = {'run_metadata': None}, run_metadata = None, run_metadata_ptr = None

    def __call__(self, *args, **kwargs):
      # TODO(b/74355905): Support argument and return value nested structures,
      # and tensor-like objects such as SparseTensors.
      run_metadata = kwargs.get('run_metadata', None)
      try:
        run_metadata_ptr = tf_session.TF_NewBuffer() if run_metadata else None
        ret = tf_session.TF_SessionRunCallable(self._session._session,
                                               self._handle, args,
>                                              run_metadata_ptr)
E                                              tensorflow.python.framework.errors_impl.InvalidArgumentError: 2 root error(s) found.
E                                                (0) Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
E                                              	 [[{{node conv2d_transpose_1/conv2d_transpose}}]]
E                                                (1) Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
E                                              	 [[{{node conv2d_transpose_1/conv2d_transpose}}]]
E                                              	 [[conv2d_transpose_1/BiasAdd/_7]]
E                                              0 successful operations.
E                                              0 derived errors ignored.

C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\client\session.py:1472: InvalidArgumentError
---------------------------- Captured stderr call -----------------------------
2020-10-03 17:15:37.536832: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
name: GeForce RTX 2080 Ti major: 7 minor: 5 memoryClockRate(GHz): 1.65
pciBusID: 0000:73:00.0
2020-10-03 17:15:37.537429: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_100.dll
2020-10-03 17:15:37.537774: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_100.dll
2020-10-03 17:15:37.538256: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_100.dll
2020-10-03 17:15:37.538680: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_100.dll
2020-10-03 17:15:37.539129: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_100.dll
2020-10-03 17:15:37.539505: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_100.dll
2020-10-03 17:15:37.539874: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-10-03 17:15:37.540478: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0
2020-10-03 17:15:37.540854: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1159] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-10-03 17:15:37.541235: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1165]      0 
2020-10-03 17:15:37.541471: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1178] 0:   N 
2020-10-03 17:15:37.542099: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1304] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 8686 MB memory) -> physical GPU (device: 0, name: GeForce RTX 2080 Ti, pci bus id: 0000:73:00.0, compute capability: 7.5)
2020-10-03 17:15:37.563451: W tensorflow/core/framework/op_kernel.cc:1651] OP_REQUIRES failed at conv_grad_input_ops.cc:811 : Invalid argument: Conv2DSlowBackpropInput: filter and out_backprop must have the same out_depth
=========================== short test summary info ===========================
FAILED convolutional_test.py::test_conv2d_transpose[valid-None-strides0] - te...
FAILED convolutional_test.py::test_conv2d_transpose[valid-None-strides1] - te...
FAILED convolutional_test.py::test_conv2d_transpose[valid-out_padding2-strides2]
FAILED convolutional_test.py::test_conv2d_transpose[valid-out_padding3-strides3]
FAILED convolutional_test.py::test_conv2d_transpose[valid-out_padding4-strides4]
FAILED convolutional_test.py::test_conv2d_transpose[same-None-strides5] - ten...
FAILED convolutional_test.py::test_conv2d_transpose[same-out_padding6-strides6]
FAILED convolutional_test.py::test_conv2d_transpose_dilation - ValueError: va...
FAILED convolutional_test.py::test_conv2d_transpose_channels_first - tensorfl...
======================= 9 failed, 101 passed in 28.67s ========================
