2020-10-03 16:33:57.268494: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_100.dll
============================= test session starts =============================
platform win32 -- Python 3.6.12, pytest-6.0.2, py-1.9.0, pluggy-0.13.1
rootdir: C:\Users\mutation\Desktop\testcase\tests\keras
plugins: flaky-3.7.0
collected 36 items

initializers_test.py ..FF.............................F..                [100%]

================================== FAILURES ===================================
_______________________________ test_normal[FC] _______________________________

tensor_shape = (200, 100)

    @pytest.mark.parametrize('tensor_shape', [FC_SHAPE, CONV_SHAPE], ids=['FC', 'CONV'])
    def test_normal(tensor_shape):
        _runner(initializers.RandomNormal(mean=0, stddev=1), tensor_shape,
>               target_mean=0., target_std=1)

initializers_test.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
initializers_test.py:16: in _runner
    variable = K.variable(init(shape))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <keras.initializers.RandomNormal object at 0x00000284D33C22B0>
shape = (200, 100), dtype = None

    def __call__(self, shape, dtype=None):
        x = K.random_normal(shape, self.mean, self.stddev,
                            dtype=dtype, seed=self.seed)
        if self.seed is  None:
>           self.seed += 1
E           TypeError: unsupported operand type(s) for +=: 'NoneType' and 'int'

C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\initializers.py:86: TypeError
______________________________ test_normal[CONV] ______________________________

tensor_shape = (25, 25, 20, 20)

    @pytest.mark.parametrize('tensor_shape', [FC_SHAPE, CONV_SHAPE], ids=['FC', 'CONV'])
    def test_normal(tensor_shape):
        _runner(initializers.RandomNormal(mean=0, stddev=1), tensor_shape,
>               target_mean=0., target_std=1)

initializers_test.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
initializers_test.py:16: in _runner
    variable = K.variable(init(shape))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <keras.initializers.RandomNormal object at 0x000002872076AEB8>
shape = (25, 25, 20, 20), dtype = None

    def __call__(self, shape, dtype=None):
        x = K.random_normal(shape, self.mean, self.stddev,
                            dtype=dtype, seed=self.seed)
        if self.seed is  None:
>           self.seed += 1
E           TypeError: unsupported operand type(s) for +=: 'NoneType' and 'int'

C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\initializers.py:86: TypeError
__________________________ test_statefulness[normal] __________________________

initializer = <class 'keras.initializers.RandomNormal'>

    @pytest.mark.parametrize('initializer',
                             [initializers.orthogonal,
                              initializers.uniform,
                              initializers.normal,
                              initializers.truncated_normal,
                              initializers.VarianceScaling],
                             ids=['orthogonal',
                                  'uniform',
                                  'normal',
                                  'truncated_normal',
                                  'variance_scaling'])
    def test_statefulness(initializer):
        # Test that calling a same seeded random initializer
        # in succession results in different values.
        init = initializer(seed=1337)
        samples = [init((2, 2)) for _ in range(2)]
        samples = [K.get_value(K.variable(x)) for x in samples]
>       assert np.mean(np.abs(samples[0] - samples[1])) > 0.
E       AssertionError: assert 0.0 > 0.0
E        +  where 0.0 = <function mean at 0x00000284CB19B620>(array([[0., 0.],\n       [0., 0.]], dtype=float32))
E        +    where <function mean at 0x00000284CB19B620> = np.mean
E        +    and   array([[0., 0.],\n       [0., 0.]], dtype=float32) = <ufunc 'absolute'>((array([[-0.04727401,  0.07371666],\n       [ 0.07910242,  0.03498879]], dtype=float32) - array([[-0.04727401,  0.07371666],\n       [ 0.07910242,  0.03498879]], dtype=float32)))
E        +      where <ufunc 'absolute'> = np.abs

initializers_test.py:162: AssertionError
---------------------------- Captured stderr call -----------------------------
2020-10-03 16:34:05.864473: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
name: GeForce RTX 2080 Ti major: 7 minor: 5 memoryClockRate(GHz): 1.65
pciBusID: 0000:73:00.0
2020-10-03 16:34:05.865557: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_100.dll
2020-10-03 16:34:05.866206: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_100.dll
2020-10-03 16:34:05.866854: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_100.dll
2020-10-03 16:34:05.867493: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_100.dll
2020-10-03 16:34:05.868134: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_100.dll
2020-10-03 16:34:05.868781: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_100.dll
2020-10-03 16:34:05.869441: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-10-03 16:34:05.870452: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0
2020-10-03 16:34:05.871018: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1159] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-10-03 16:34:05.871523: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1165]      0 
2020-10-03 16:34:05.871750: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1178] 0:   N 
2020-10-03 16:34:05.872263: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1304] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 8686 MB memory) -> physical GPU (device: 0, name: GeForce RTX 2080 Ti, pci bus id: 0000:73:00.0, compute capability: 7.5)
=========================== short test summary info ===========================
FAILED initializers_test.py::test_normal[FC] - TypeError: unsupported operand...
FAILED initializers_test.py::test_normal[CONV] - TypeError: unsupported opera...
FAILED initializers_test.py::test_statefulness[normal] - AssertionError: asse...
======================== 3 failed, 33 passed in 4.89s =========================
