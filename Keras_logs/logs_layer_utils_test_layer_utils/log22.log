2020-10-04 18:18:10.686697: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_100.dll
============================= test session starts =============================
platform win32 -- Python 3.6.12, pytest-6.0.2, py-1.9.0, pluggy-0.13.1
rootdir: C:\Users\mutation\Desktop\testcase\tests\keras\utils
plugins: flaky-3.7.0
collected 1 item

layer_utils_test.py F                                                    [100%]

================================== FAILURES ===================================
____________________________ test_convert_weights _____________________________

    def test_convert_weights():
        def get_model(shape, data_format):
            model = Sequential()
            model.add(Conv2D(filters=2,
                             kernel_size=(4, 3),
                             input_shape=shape,
                             data_format=data_format))
            model.add(Flatten())
            model.add(Dense(5))
            return model
    
        for data_format in ['channels_first', 'channels_last']:
            if data_format == 'channels_first':
                shape = (3, 5, 5)
                target_shape = (5, 5, 3)
                prev_shape = (2, 3, 2)
                flip = lambda x: np.flip(np.flip(x, axis=2), axis=3)
                transpose = lambda x: np.transpose(x, (0, 2, 3, 1))
                target_data_format = 'channels_last'
            elif data_format == 'channels_last':
                shape = (5, 5, 3)
                target_shape = (3, 5, 5)
                prev_shape = (2, 2, 3)
                flip = lambda x: np.flip(np.flip(x, axis=1), axis=2)
                transpose = lambda x: np.transpose(x, (0, 3, 1, 2))
                target_data_format = 'channels_first'
    
            model1 = get_model(shape, data_format)
            model2 = get_model(target_shape, target_data_format)
            conv = K.function([model1.input], [model1.layers[0].output])
    
            x = np.random.random((1,) + shape)
    
            # Test equivalence of convert_all_kernels_in_model
            convout1 = conv([x])[0]
            layer_utils.convert_all_kernels_in_model(model1)
            convout2 = flip(conv([flip(x)])[0])
    
            assert_allclose(convout1, convout2, atol=1e-5)
    
            # Test equivalence of convert_dense_weights_data_format
            out1 = model1.predict(x)
            layer_utils.convert_dense_weights_data_format(
>               model1.layers[2], prev_shape, target_data_format)

layer_utils_test.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

dense = <keras.layers.core.Dense object at 0x000002BC381C8A20>
previous_feature_map_shape = (2, 2, 3), target_data_format = 'channels_first'

    def convert_dense_weights_data_format(dense,
                                          previous_feature_map_shape,
                                          target_data_format='channels_first'):
        """Utility useful when changing a convnet's `data_format`.
    
        When porting the weights of a convnet from one data format to the other,
        if the convnet includes a `Flatten` layer
        (applied to the last convolutional feature map)
        followed by a `Dense` layer, the weights of that `Dense` layer
        should be updated to reflect the new dimension ordering.
    
        # Arguments
            dense: The target `Dense` layer.
            previous_feature_map_shape: A shape tuple of 3 integers,
                e.g. `(512, 7, 7)`. The shape of the convolutional
                feature map right before the `Flatten` layer that
                came before the target `Dense` layer.
            target_data_format: One of "channels_last", "channels_first".
                Set it "channels_last"
                if converting a "channels_first" model to "channels_last",
                or reciprocally.
        """
        assert target_data_format in {'channels_last', 'channels_first'}
        kernel, bias = dense.get_weights()
        for i in range(kernel.shape[1]):
            if target_data_format == 'channels_first':
>               c, h, w = None
E               TypeError: 'NoneType' object is not iterable

C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\utils\layer_utils.py:245: TypeError
---------------------------- Captured stderr call -----------------------------
Using TensorFlow backend.
WARNING:tensorflow:From C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\ops\resource_variable_ops.py:1630: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-10-04 18:18:14.731512: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library nvcuda.dll
2020-10-04 18:18:14.853911: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
name: GeForce RTX 2080 Ti major: 7 minor: 5 memoryClockRate(GHz): 1.65
pciBusID: 0000:73:00.0
2020-10-04 18:18:14.855335: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_100.dll
2020-10-04 18:18:14.860334: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_100.dll
2020-10-04 18:18:14.864936: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_100.dll
2020-10-04 18:18:14.866717: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_100.dll
2020-10-04 18:18:14.873099: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_100.dll
2020-10-04 18:18:14.877591: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_100.dll
2020-10-04 18:18:14.889794: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-10-04 18:18:14.890737: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0
2020-10-04 18:18:14.891404: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2
2020-10-04 18:18:14.904967: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties: 
name: GeForce RTX 2080 Ti major: 7 minor: 5 memoryClockRate(GHz): 1.65
pciBusID: 0000:73:00.0
2020-10-04 18:18:14.905559: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_100.dll
2020-10-04 18:18:14.905898: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_100.dll
2020-10-04 18:18:14.906238: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cufft64_100.dll
2020-10-04 18:18:14.906574: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library curand64_100.dll
2020-10-04 18:18:14.906920: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusolver64_100.dll
2020-10-04 18:18:14.907262: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cusparse64_100.dll
2020-10-04 18:18:14.907605: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-10-04 18:18:14.908442: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0
2020-10-04 18:18:16.028081: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1159] Device interconnect StreamExecutor with strength 1 edge matrix:
2020-10-04 18:18:16.028500: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1165]      0 
2020-10-04 18:18:16.028824: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1178] 0:   N 
2020-10-04 18:18:16.029696: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1304] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 8686 MB memory) -> physical GPU (device: 0, name: GeForce RTX 2080 Ti, pci bus id: 0000:73:00.0, compute capability: 7.5)
WARNING:tensorflow:From C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\backend\tensorflow_backend.py:422: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.

2020-10-04 18:18:16.644637: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudnn64_7.dll
2020-10-04 18:18:18.892200: W tensorflow/stream_executor/cuda/redzone_allocator.cc:312] Internal: Invoking ptxas not supported on Windows
Relying on driver to perform ptx compilation. This message will be only logged once.
2020-10-04 18:18:18.919076: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cublas64_100.dll
------------------------------ Captured log call ------------------------------
WARNING  tensorflow:deprecation.py:506 From C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\ops\resource_variable_ops.py:1630: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
WARNING  tensorflow:module_wrapper.py:139 From C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\backend\tensorflow_backend.py:422: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.
=========================== short test summary info ===========================
FAILED layer_utils_test.py::test_convert_weights - TypeError: 'NoneType' obje...
============================== 1 failed in 6.40s ==============================
