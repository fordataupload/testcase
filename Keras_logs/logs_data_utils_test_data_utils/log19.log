2020-10-04 16:12:14.901617: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_100.dll
============================= test session starts =============================
platform win32 -- Python 3.6.12, pytest-6.0.2, py-1.9.0, pluggy-0.13.1
rootdir: C:\Users\mutation\Desktop\testcase\tests\keras\utils
plugins: flaky-3.7.0
collected 13 items

data_utils_test.py FE............                                        [100%]

=================================== ERRORS ====================================
____________________ ERROR at teardown of test_data_utils _____________________

tmpdir = local('C:\\Users\\mutation\\AppData\\Local\\Temp\\pytest-of-mutation\\pytest-301\\test_data_utils0')

    @pytest.fixture
    def in_tmpdir(tmpdir):
        """Runs a function in a temporary directory.
    
        Checks that the directory is empty afterwards.
        """
        with tmpdir.as_cwd():
            yield None
>       assert not tmpdir.listdir()
E       AssertionError: assert not [local('C:\\Users\\mutation\\AppData\\Local\\Temp\\pytest-of-mutation\\pytest-301\\test_data_utils0\\test.tar.gz'), lo....txt'), local('C:\\Users\\mutation\\AppData\\Local\\Temp\\pytest-of-mutation\\pytest-301\\test_data_utils0\\test.zip')]
E        +  where [local('C:\\Users\\mutation\\AppData\\Local\\Temp\\pytest-of-mutation\\pytest-301\\test_data_utils0\\test.tar.gz'), lo....txt'), local('C:\\Users\\mutation\\AppData\\Local\\Temp\\pytest-of-mutation\\pytest-301\\test_data_utils0\\test.zip')] = <bound method LocalPath.listdir of local('C:\\Users\\mutation\\AppData\\Local\\Temp\\pytest-of-mutation\\pytest-301\\test_data_utils0')>()
E        +    where <bound method LocalPath.listdir of local('C:\\Users\\mutation\\AppData\\Local\\Temp\\pytest-of-mutation\\pytest-301\\test_data_utils0')> = local('C:\\Users\\mutation\\AppData\\Local\\Temp\\pytest-of-mutation\\pytest-301\\test_data_utils0').listdir

data_utils_test.py:70: AssertionError
---------------------------- Captured stdout call -----------------------------
Downloading data from file:///C:/Users/mutation/AppData/Local/Temp/pytest-of-mutation/pytest-301/test_data_utils0/test.tar.gz

s 0us/step
Downloading data from file:///C:/Users/mutation/AppData/Local/Temp/pytest-of-mutation/pytest-301/test_data_utils0/test.tar.gz

s 0us/step
---------------------------- Captured stderr call -----------------------------
Using TensorFlow backend.
Using TensorFlow backend.
================================== FAILURES ===================================
_______________________________ test_data_utils _______________________________

in_tmpdir = None

    def test_data_utils(in_tmpdir):
        """Tests get_file from a url, plus extraction and validation.
        """
        dirname = 'data_utils'
    
        with open('test.txt', 'w') as text_file:
            text_file.write('Float like a butterfly, sting like a bee.')
    
        with tarfile.open('test.tar.gz', 'w:gz') as tar_file:
            tar_file.add('test.txt')
    
        with zipfile.ZipFile('test.zip', 'w') as zip_file:
            zip_file.write('test.txt')
    
        origin = urljoin('file://', pathname2url(os.path.abspath('test.tar.gz')))
    
        path = get_file(dirname, origin, untar=True)
        filepath = path + '.tar.gz'
        data_keras_home = os.path.dirname(os.path.dirname(os.path.abspath(filepath)))
        assert data_keras_home == os.path.dirname(load_backend._config_path)
        os.remove(filepath)
    
        _keras_home = os.path.join(os.path.abspath('.'), '.keras')
        if not os.path.exists(_keras_home):
            os.makedirs(_keras_home)
        os.environ['KERAS_HOME'] = _keras_home
        reload_module(load_backend)
        path = get_file(dirname, origin, untar=True)
        filepath = path + '.tar.gz'
        data_keras_home = os.path.dirname(os.path.dirname(os.path.abspath(filepath)))
        assert data_keras_home == os.path.dirname(load_backend._config_path)
        os.environ.pop('KERAS_HOME')
        shutil.rmtree(_keras_home)
        reload_module(load_backend)
    
        path = get_file(dirname, origin, untar=True)
        filepath = path + '.tar.gz'
        hashval_sha256 = _hash_file(filepath)
        hashval_md5 = _hash_file(filepath, algorithm='md5')
        path = get_file(dirname, origin, md5_hash=hashval_md5, untar=True)
>       path = get_file(filepath, origin, file_hash=hashval_sha256, extract=True)

C:\Users\mutation\Desktop\testcase\tests\keras\utils\data_utils_test.py:113: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\utils\data_utils.py:242: in get_file
    _extract_archive(fpath, datadir, archive_format)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

file_path = 'C:\\Users\\mutation\\.keras\\datasets\\data_utils.tar.gz'
path = 'C:\\Users\\mutation\\.keras\\datasets', archive_format = ['auto']

    def _extract_archive(file_path, path='.', archive_format='auto'):
        """Extracts an archive if it matches tar, tar.gz, tar.bz, or zip formats.
    
        # Arguments
            file_path: path to the archive file
            path: path to extract the archive fileUsing TensorFlow backend.

            archive_format: Archive format to try for extracting the file.
                Options are 'auto', 'tar', 'zip', and None.
                'tar' includes tar, tar.gz, and tar.bz files.
                The default 'auto' is ['tar', 'zip'].
                None or an empty list will return no matches found.
    
        # Returns
            True if a match was found and an archive extraction was completed,
            False otherwise.
        """
        if archive_format is None:
            return False
        if archive_format == 'XXautoXX':
            archive_format = ['tar', 'zip']
        if isinstance(archive_format, six.string_types):
            archive_format = [archive_format]
    
        for archive_type in archive_format:
            if archive_type == 'tar':
                open_fn = tarfile.open
                is_match_fn = tarfile.is_tarfile
            if archive_type == 'zip':
                open_fn = zipfile.ZipFile
                is_match_fn = zipfile.is_zipfile
    
>           if is_match_fn(file_path):
E           UnboundLocalError: local variable 'is_match_fn' referenced before assignment

C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\utils\data_utils.py:107: UnboundLocalError
---------------------------- Captured stdout call -----------------------------
Downloading data from file:///C:/Users/mutation/AppData/Local/Temp/pytest-of-mutation/pytest-301/test_data_utils0/test.tar.gz

s 0us/step
Downloading data from file:///C:/Users/mutation/AppData/Local/Temp/pytest-of-mutation/pytest-301/test_data_utils0/test.tar.gz

8192/150 [======================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================================] - 0s 0us/step
---------------------------- Captured stderr call -----------------------------
Using TensorFlow backend.
Using TensorFlow backend.
============================== warnings summary ===============================
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\config\__init__.py:1040
  C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\config\__init__.py:1040: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: flaky
    self._mark_plugins_for_rewrite(hook)

-- Docs: https://docs.pytest.org/en/stable/warnings.html
===Flaky Test Report===

test_generator_enqueuer_fail_threads passed 1 out of the required 1 times. Success!
test_finite_generator_enqueuer_threads passed 1 out of the required 1 times. Success!

===End Flaky Test Report===
=========================== short test summary info ===========================
FAILED data_utils_test.py::test_data_utils - UnboundLocalError: local variabl...
ERROR data_utils_test.py::test_data_utils - AssertionError: assert not [local...
============== 1 failed, 12 passed, 1 warning, 1 error in 55.59s ==============
