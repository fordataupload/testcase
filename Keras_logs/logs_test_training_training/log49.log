2020-10-03 19:12:31.933411: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_100.dll
============================= test session starts =============================
platform win32 -- Python 3.6.12, pytest-6.0.2, py-1.9.0, pluggy-0.13.1
rootdir: C:\Users\mutation\Desktop\testcase\tests\keras\engine
plugins: flaky-3.7.0
collected 34 items

test_training.py ...

============================== warnings summary ===============================
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\config\__init__.py:1040
  C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\config\__init__.py:1040: PytestAssertRewriteWarning: Module already imported so cannot be rewritten: flaky
    self._mark_plugins_for_rewrite(hook)

-- Docs: https://docs.pytest.org/en/stable/warnings.html
================== 3 passed, 1 warning in 165.55s (0:02:45) ===================
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\main.py", line 240, in wrap_session
    session.exitstatus = doit(config, session) or 0
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\main.py", line 296, in _main
    config.hook.pytest_runtestloop(session=session)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\hooks.py", line 286, in __call__
    return self._hookexec(self, self.get_hookimpls(), kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\manager.py", line 93, in _hookexec
    return self._inner_hookexec(hook, methods, kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\manager.py", line 87, in <lambda>
    firstresult=hook.spec.opts.get("firstresult") if hook.spec else False,
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\callers.py", line 208, in _multicall
    return outcome.get_result()
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\callers.py", line 80, in get_result
    raise ex[1].with_traceback(ex[2])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\callers.py", line 187, in _multicall
    res = hook_impl.function(*args)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\main.py", line 321, in pytest_runtestloop
    item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\hooks.py", line 286, in __call__
    return self._hookexec(self, self.get_hookimpls(), kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\manager.py", line 93, in _hookexec
    return self._inner_hookexec(hook, methods, kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\manager.py", line 87, in <lambda>
    firstresult=hook.spec.opts.get("firstresult") if hook.spec else False,
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\callers.py", line 208, in _multicall
    return outcome.get_result()
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\callers.py", line 80, in get_result
    raise ex[1].with_traceback(ex[2])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\callers.py", line 187, in _multicall
    res = hook_impl.function(*args)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\flaky\flaky_pytest_plugin.py", line 94, in pytest_runtest_protocol
    self.runner.pytest_runtest_protocol(item, nextitem)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\runner.py", line 100, in pytest_runtest_protocol
    runtestprotocol(item, nextitem=nextitem)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\runner.py", line 117, in runtestprotocol
    reports.append(call_and_report(item, "call", log))
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\flaky\flaky_pytest_plugin.py", line 138, in call_and_report
    call = call_runtest_hook(item, when, **kwds)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\runner.py", line 247, in call_runtest_hook
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\runner.py", line 294, in from_call
    result = func()  # type: Optional[_T]
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\runner.py", line 247, in <lambda>
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\hooks.py", line 286, in __call__
    return self._hookexec(self, self.get_hookimpls(), kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\manager.py", line 93, in _hookexec
    return self._inner_hookexec(hook, methods, kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\manager.py", line 87, in <lambda>
    firstresult=hook.spec.opts.get("firstresult") if hook.spec else False,
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\callers.py", line 208, in _multicall
    return outcome.get_result()
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\callers.py", line 80, in get_result
    raise ex[1].with_traceback(ex[2])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\callers.py", line 187, in _multicall
    res = hook_impl.function(*args)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\runner.py", line 153, in pytest_runtest_call
    item.runtest()
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\python.py", line 1570, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\hooks.py", line 286, in __call__
    return self._hookexec(self, self.get_hookimpls(), kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\manager.py", line 93, in _hookexec
    return self._inner_hookexec(hook, methods, kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\manager.py", line 87, in <lambda>
    firstresult=hook.spec.opts.get("firstresult") if hook.spec else False,
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\callers.py", line 208, in _multicall
    return outcome.get_result()
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\callers.py", line 80, in get_result
    raise ex[1].with_traceback(ex[2])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\callers.py", line 187, in _multicall
    res = hook_impl.function(*args)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\python.py", line 180, in pytest_pyfunc_call
    result = testfunction(**testargs)
  File "C:\Users\mutation\Desktop\testcase\tests\keras\engine\test_training.py", line 272, in test_model_methods
    sample_weight_mode=None)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\engine\training.py", line 214, in compile
    self._set_metric_attributes()
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\engine\training.py", line 806, in _set_metric_attributes
    self._per_output_metrics[i], i))
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\engine\training.py", line 785, in _set_per_output_metric_attributes
    metric_name = self._add_unique_metric_name(metric_name, output_index)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\engine\training.py", line 767, in _add_unique_metric_name
    while metric_name not in self.metrics_names:
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\engine\training.py", line 263, in metrics_names
    for i in range(len(self.outputs))
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\keras\engine\training.py", line 264, in <listcomp>
    if i not in self.skip_target_indices
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "test_training.py", line 1987, in <module>
    pytest.main([__file__])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\config\__init__.py", line 158, in main
    config=config
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\hooks.py", line 286, in __call__
    return self._hookexec(self, self.get_hookimpls(), kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\manager.py", line 93, in _hookexec
    return self._inner_hookexec(hook, methods, kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\manager.py", line 87, in <lambda>
    firstresult=hook.spec.opts.get("firstresult") if hook.spec else False,
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\callers.py", line 208, in _multicall
    return outcome.get_result()
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\callers.py", line 80, in get_result
    raise ex[1].with_traceback(ex[2])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\callers.py", line 187, in _multicall
    res = hook_impl.function(*args)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\main.py", line 289, in pytest_cmdline_main
    return wrap_session(config, _main)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\main.py", line 256, in wrap_session
    config.hook.pytest_keyboard_interrupt(excinfo=excinfo)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\hooks.py", line 286, in __call__
    return self._hookexec(self, self.get_hookimpls(), kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\manager.py", line 93, in _hookexec
    return self._inner_hookexec(hook, methods, kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\manager.py", line 87, in <lambda>
    firstresult=hook.spec.opts.get("firstresult") if hook.spec else False,
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\callers.py", line 208, in _multicall
    return outcome.get_result()
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\callers.py", line 80, in get_result
    raise ex[1].with_traceback(ex[2])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\pluggy\callers.py", line 187, in _multicall
    res = hook_impl.function(*args)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\terminal.py", line 837, in pytest_keyboard_interrupt
    self._keyboardinterrupt_memo = excinfo.getrepr(funcargs=True)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\_code\code.py", line 611, in getrepr
    return fmt.repr_excinfo(self)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\_code\code.py", line 861, in repr_excinfo
    reprtraceback = self.repr_traceback(excinfo_)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\_code\code.py", line 805, in repr_traceback
    reprentry = self.repr_traceback_entry(entry, einfo)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\_code\code.py", line 749, in repr_traceback_entry
    source = self._getentrysource(entry)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\_code\code.py", line 661, in _getentrysource
    source = entry.getsource(self.astcache)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\_code\code.py", line 218, in getsource
    source = self.frame.code.fullsource
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\_code\code.py", line 93, in fullsource
    full, _ = findsource(self.raw)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\_pytest\_code\source.py", line 123, in findsource
    sourcelines, lineno = inspect.findsource(obj)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\inspect.py", line 780, in findsource
    module = getmodule(object, file)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\inspect.py", line 733, in getmodule
    if ismodule(module) and hasattr(module, '__file__'):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow\__init__.py", line 50, in __getattr__
    module = self._load()
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow\__init__.py", line 44, in _load
    module = _importlib.import_module(self.__name__)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 955, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 665, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\contrib\__init__.py", line 47, in <module>
    from tensorflow.contrib import distributions
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\contrib\distributions\__init__.py", line 29, in <module>
    from tensorflow.contrib.distributions.python.ops import bijectors
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\contrib\distributions\__init__.py", line 44, in <module>
    from tensorflow.contrib.distributions.python.ops.estimator import *
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\contrib\distributions\python\ops\estimator.py", line 21, in <module>
    from tensorflow.contrib.learn.python.learn.estimators.head import _compute_weighted_loss
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\contrib\learn\__init__.py", line 93, in <module>
    from tensorflow.contrib.learn.python.learn import *
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\contrib\learn\python\__init__.py", line 28, in <module>
    from tensorflow.contrib.learn.python.learn import *
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\contrib\learn\python\learn\__init__.py", line 29, in <module>
    from tensorflow.contrib.learn.python.learn import datasets
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\contrib\learn\python\learn\datasets\__init__.py", line 31, in <module>
    from tensorflow.contrib.learn.python.learn.datasets import base
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\contrib\learn\python\learn\datasets\base.py", line 41, in <module>
    Dataset = collections.namedtuple('Dataset', ['data', 'target'])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\collections\__init__.py", line 429, in namedtuple
    exec(class_definition, namespace)
  File "<string>", line 1, in <module>
KeyboardInterrupt

hang