2020-10-05 18:59:00.726712: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library cudart64_100.dll
Running tests under Python 3.6.12: C:\ProgramData\Anaconda3\envs\keras\python.exe
[ RUN      ] CallTreesTest.test_class_method
[  FAILED  ] CallTreesTest.test_class_method
[ RUN      ] CallTreesTest.test_debugger_set_trace
WARNING:tensorflow:Detected `pdb.set_trace()` in converted code. The code generated by AutoGraph is not optimized for step-by-step debugging. See https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/autograph/g3doc/reference/debugging.md.
W1005 18:59:05.696037 21064 ag_logging.py:146] Detected `pdb.set_trace()` in converted code. The code generated by AutoGraph is not optimized for step-by-step debugging. See https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/autograph/g3doc/reference/debugging.md.
Offending AST:
FunctionDef:
| name=u"test_method"
| args=None
| body=[
| | With:
| | | items=[
| | | | withitem:
| | | | | context_expr=Call:
| | | | | | func=Attribute:
| | | | | | | value=Name:
| | | | | | | | id=u"ag__"
| | | | | | | | ctx=Load()
| | | | | | | | annotation=None
| | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | attr=u"FunctionScope"
| | | | | | | ctx=Load()
| | | | | | | ___pyct_anno={QN: ag__.FunctionScope}
| | | | | | args=[
| | | | | | | Str:
| | | | | | | | s=u"test_method"
| | | | | | | Str:
| | | | | | | | s=u"test_method_scope"
| | | | | | | Call:
| | | | | | | | func=Attribute:
| | | | | | | | | value=Name:
| | | | | | | | | | id=u"ag__"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | annotation=None
| | | | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | | | attr=u"ConversionOptions"
| | | | | | | | | ctx=Load()
| | | | | | | | | ___pyct_anno={QN: ag__.ConversionOptions}
| | | | | | | | args=[]
| | | | | | | | keywords=[
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"recursive"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=True
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"user_requested"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=False
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"optional_features"
| | | | | | | | | | value=Attribute:
| | | | | | | | | | | value=Attribute:
| | | | | | | | | | | | value=Name:
| | | | | | | | | | | | | id=u"ag__"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | | | | | | attr=u"Feature"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | ___pyct_anno={QN: ag__.Feature}
| | | | | | | | | | | attr=u"ALL"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | ___pyct_anno={QN: ag__.Feature.ALL}
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"internal_convert_user_code"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=True
| | | | | | | | ]
| | | | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(ag__.Feature.ALL, ag__.Feature, ag__), w=()}}
| | | | | | ]
| | | | | | keywords=[]
| | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(ag__.Feature.ALL, ag__.Feature, ag__, ag__.ConversionOptions), w=()}}
| | | | | optional_vars=Name:
| | | | | | id=u"test_method_scope"
| | | | | | ctx=Store()
| | | | | | annotation=None
| | | | | | ___pyct_anno={QN: test_method_scope, DEFINITIONS: (AnnotatedDef[2479730450048],)}
| | | | | ___pyct_anno={SCOPE: Scope{r=(ag__.Feature.ALL, ag__, ag__.FunctionScope, ag__.ConversionOptions, ag__.Feature), w=(test_method_scope,)}}
| | | ]
| | | body=[
| | | | Return:
| | | | | value=Call:
| | | | | | func=Attribute:
| | | | | | | value=Name:
| | | | | | | | id=u"test_method_scope"
| | | | | | | | ctx=Load()
| | | | | | | | annotation=None
| | | | | | | | ___pyct_anno={QN: test_method_scope, DEFINITIONS: (AnnotatedDef[2479730450048],)}
| | | | | | | attr=u"mark_return_value"
| | | | | | | ctx=Load()
| | | | | | | ___pyct_anno={QN: test_method_scope.mark_return_value}
| | | | | | args=[
| | | | | | | BinOp:
| | | | | | | | left=Call:
| | | | | | | | | func=Attribute:
| | | | | | | | | | value=Name:
| | | | | | | | | | | id=u"ag__"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={QN: ag__}
| | | | | | | | | | attr=u"converted_call"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | ___pyct_anno={QN: ag__.converted_call}
| | | | | | | | | args=[
| | | | | | | | | | Attribute:
| | | | | | | | | | | value=Name:
| | | | | | | | | | | | id=u"self"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | annotation=None
| | | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:275:15, ORIG_DEFINITIONS: (AnnotatedDef[2479730657096],), QN: self}
| | | | | | | | | | | attr=u"other_method"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:275:15, QN: self.other_method}
| | | | | | | | | | Attribute:
| | | | | | | | | | | value=Name:
| | | | | | | | | | | | id=u"test_method_scope"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | annotation=None
| | | | | | | | | | | | ___pyct_anno={QN: test_method_scope}
| | | | | | | | | | | attr=u"callopts"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | ___pyct_anno={QN: test_method_scope.callopts}
| | | | | | | | | | Tuple:
| | | | | | | | | | | elts=[
| | | | | | | | | | | | Name:
| | | | | | | | | | | | | id=u"a"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:275:33, ORIG_DEFINITIONS: (AnnotatedDef[2479730657376],), QN: a}
| | | | | | | | | | | ]
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | NameConstant:
| | | | | | | | | | | value=None
| | | | | | | | | | Name:
| | | | | | | | | | | id=u"test_method_scope"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={QN: test_method_scope}
| | | | | | | | | ]
| | | | | | | | | keywords=[]
| | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:275:15}
| | | | | | | | op=Add()
| | | | | | | | right=Num:
| | | | | | | | | n=300
| | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:275:38}
| | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:275:15}
| | | | | | ]
| | | | | | keywords=[]
| | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(a, self.other_method, self), w=()}}
| | | | | ___pyct_anno={ORIGIN: call_trees_test.py:275:8, SCOPE: Scope{r=(a, self, self.other_method, test_method_scope.mark_return_value, test_method_scope), w=()}, LIVE_VARS_IN: frozenset({a, test_method_scope.mark_return_value, self, test_method_scope, self.other_method})}
| | | ]
| | | ___pyct_anno={BODY_SCOPE: Scope{r=(a, ag__.Feature.ALL, ag__, self, ag__.FunctionScope, self.other_method, test_method_scope.mark_return_value, ag__.ConversionOptions, test_method_scope, ag__.Feature), w=(test_method_scope,)}, LIVE_VARS_IN: frozenset({a, ag__.Feature.ALL, ag__, self, ag__.FunctionScope, self.other_method, test_method_scope.mark_return_value, ag__.ConversionOptions, ag__.Feature})}
| ]
| decorator_list=[]
| returns=None
| ___pyct_anno={'lineno': 3, ORIGIN: call_trees_test.py:273:6, SCOPE: Scope{r=(), w=(test_method,)}, BODY_SCOPE: Scope{r=(a, ag__.Feature.ALL, ag__, self, ag__.FunctionScope, self.other_method, test_method_scope.mark_return_value, ag__.ConversionOptions, test_method_scope, ag__.Feature), w=(test_method_scope,)}, 'function_context_name': 'test_method_scope'}

Offending AST:
FunctionDef:
| name=u"test_fn"
| args=None
| body=[
| | With:
| | | items=[
| | | | withitem:
| | | | | context_expr=Call:
| | | | | | func=Attribute:
| | | | | | | value=Name:
| | | | | | | | id=u"ag__"
| | | | | | | | ctx=Load()
| | | | | | | | annotation=None
| | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | attr=u"FunctionScope"
| | | | | | | ctx=Load()
| | | | | | | ___pyct_anno={QN: ag__.FunctionScope}
| | | | | | args=[
| | | | | | | Str:
| | | | | | | | s=u"test_fn"
| | | | | | | Str:
| | | | | | | | s=u"test_fn_scope"
| | | | | | | Call:
| | | | | | | | func=Attribute:
| | | | | | | | | value=Name:
| | | | | | | | | | id=u"ag__"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | annotation=None
| | | | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | | | attr=u"ConversionOptions"
| | | | | | | | | ctx=Load()
| | | | | | | | | ___pyct_anno={QN: ag__.ConversionOptions}
| | | | | | | | args=[]
| | | | | | | | keywords=[
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"recursive"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=True
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"user_requested"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=False
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"optional_features"
| | | | | | | | | | value=Attribute:
| | | | | | | | | | | value=Attribute:
| | | | | | | | | | | | value=Name:
| | | | | | | | | | | | | id=u"ag__"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | | | | | | attr=u"Feature"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | ___pyct_anno={QN: ag__.Feature}
| | | | | | | | | | | attr=u"ALL"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | ___pyct_anno={QN: ag__.Feature.ALL}
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"internal_convert_user_code"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=True
| | | | | | | | ]
| | | | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(ag__.Feature.ALL, ag__.Feature, ag__), w=()}}
| | | | | | ]
| | | | | | keywords=[]
| | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(ag__.Feature.ALL, ag__.Feature, ag__, ag__.ConversionOptions), w=()}}
| | | | | optional_vars=Name:
| | | | | | id=u"test_fn_scope"
| | | | | | ctx=Store()
| | | | | | annotation=None
| | | | | | ___pyct_anno={QN: test_fn_scope, DEFINITIONS: (AnnotatedDef[2479731027080],)}
| | | | | ___pyct_anno={SCOPE: Scope{r=(ag__.Feature.ALL, ag__, ag__.FunctionScope, ag__.ConversionOptions, ag__.Feature), w=(test_fn_scope,)}}
| | | ]
| | | body=[
| | | | Return:
| | | | | value=Call:
| | | | | | func=Attribute:
| | | | | | | value=Name:
| | | | | | | | id=u"test_fn_scope"
| | | | | | | | ctx=Load()
| | | | | | | | annotation=None
| | | | | | | | ___pyct_anno={QN: test_fn_scope, DEFINITIONS: (AnnotatedDef[2479731027080],)}
| | | | | | | attr=u"mark_return_value"
| | | | | | | ctx=Load()
| | | | | | | ___pyct_anno={QN: test_fn_scope.mark_return_value}
| | | | | | args=[
| | | | | | | Call:
| | | | | | | | func=Attribute:
| | | | | | | | | value=Name:
| | | | | | | | | | id=u"pdb"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | annotation=None
| | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:245:13, ORIG_DEFINITIONS: (), QN: pdb, DEFINITIONS: ()}
| | | | | | | | | attr=u"set_trace"
| | | | | | | | | ctx=Load()
| | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:245:13, QN: pdb.set_trace}
| | | | | | | | args=[]
| | | | | | | | keywords=[]
| | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:245:13, ARGS_SCOPE: Scope{r=(), w=()}}
| | | | | | ]
| | | | | | keywords=[]
| | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(pdb, pdb.set_trace), w=()}}
| | | | | ___pyct_anno={ORIGIN: call_trees_test.py:245:6, SCOPE: Scope{r=(pdb, test_fn_scope.mark_return_value, pdb.set_trace, test_fn_scope), w=()}, LIVE_VARS_IN: frozenset({pdb, test_fn_scope.mark_return_value, pdb.set_trace, test_fn_scope})}
| | | ]
| | | ___pyct_anno={BODY_SCOPE: Scope{r=(ag__.Feature.ALL, ag__, ag__.FunctionScope, pdb.set_trace, test_fn_scope, ag__.ConversionOptions, pdb, ag__.Feature, test_fn_scope.mark_return_value), w=(test_fn_scope,)}, LIVE_VARS_IN: frozenset({ag__.Feature.ALL, ag__, ag__.FunctionScope, pdb.set_trace, ag__.ConversionOptions, pdb, ag__.Feature, test_fn_scope.mark_return_value})}
| ]
| decorator_list=[]
| returns=None
| ___pyct_anno={'lineno': 3, ORIGIN: call_trees_test.py:243:4, SCOPE: Scope{r=(), w=(test_fn,)}, BODY_SCOPE: Scope{r=(ag__.Feature.ALL, ag__, ag__.FunctionScope, pdb.set_trace, test_fn_scope, ag__.ConversionOptions, pdb, ag__.Feature, test_fn_scope.mark_return_value), w=(test_fn_scope,)}, 'function_context_name': 'test_fn_scope'}
[  FAILED  ] CallTreesTest.test_debugger_set_trace
[ RUN      ] CallTreesTest.test_function_chaining
[  FAILED  ] CallTreesTest.test_function_chaining
[ RUN      ] CallTreesTest.test_function_with_call_in_argument

Offending AST:
FunctionDef:
| name=u"test_fn"
| args=None
| body=[
| | With:
| | | items=[
| | | | withitem:
| | | | | context_expr=Call:
| | | | | | func=Attribute:
| | | | | | | value=Name:
| | | | | | | | id=u"ag__"
| | | | | | | | ctx=Load()
| | | | | | | | annotation=None
| | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | attr=u"FunctionScope"
| | | | | | | ctx=Load()
| | | | | | | ___pyct_anno={QN: ag__.FunctionScope}
| | | | | | args=[
| | | | | | | Str:
| | | | | | | | s=u"test_fn"
| | | | | | | Str:
| | | | | | | | s=u"test_fn_scope"
| | | | | | | Call:
| | | | | | | | func=Attribute:
| | | | | | | | | value=Name:
| | | | | | | | | | id=u"ag__"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | annotation=None
| | | | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | | | attr=u"ConversionOptions"
| | | | | | | | | ctx=Load()
| | | | | | | | | ___pyct_anno={QN: ag__.ConversionOptions}
| | | | | | | | args=[]
| | | | | | | | keywords=[
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"recursive"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=True
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"user_requested"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=False
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"optional_features"
| | | | | | | | | | value=Attribute:
| | | | | | | | | | | value=Attribute:
| | | | | | | | | | | | value=Name:
| | | | | | | | | | | | | id=u"ag__"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | | | | | | attr=u"Feature"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | ___pyct_anno={QN: ag__.Feature}
| | | | | | | | | | | attr=u"ALL"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | ___pyct_anno={QN: ag__.Feature.ALL}
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"internal_convert_user_code"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=True
| | | | | | | | ]
| | | | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(ag__.Feature.ALL, ag__.Feature, ag__), w=()}}
| | | | | | ]
| | | | | | keywords=[]
| | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(ag__.Feature.ALL, ag__.Feature, ag__, ag__.ConversionOptions), w=()}}
| | | | | optional_vars=Name:
| | | | | | id=u"test_fn_scope"
| | | | | | ctx=Store()
| | | | | | annotation=None
| | | | | | ___pyct_anno={QN: test_fn_scope, DEFINITIONS: (AnnotatedDef[2479730450160],)}
| | | | | ___pyct_anno={SCOPE: Scope{r=(ag__.Feature.ALL, ag__, ag__.FunctionScope, ag__.ConversionOptions, ag__.Feature), w=(test_fn_scope,)}}
| | | ]
| | | body=[
| | | | Return:
| | | | | value=Call:
| | | | | | func=Attribute:
| | | | | | | value=Name:
| | | | | | | | id=u"test_fn_scope"
| | | | | | | | ctx=Load()
| | | | | | | | annotation=None
| | | | | | | | ___pyct_anno={QN: test_fn_scope, DEFINITIONS: (AnnotatedDef[2479730450160],)}
| | | | | | | attr=u"mark_return_value"
| | | | | | | ctx=Load()
| | | | | | | ___pyct_anno={QN: test_fn_scope.mark_return_value}
| | | | | | args=[
| | | | | | | Call:
| | | | | | | | func=Attribute:
| | | | | | | | | value=Name:
| | | | | | | | | | id=u"ag__"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | annotation=None
| | | | | | | | | | ___pyct_anno={QN: ag__}
| | | | | | | | | attr=u"converted_call"
| | | | | | | | | ctx=Load()
| | | | | | | | | ___pyct_anno={QN: ag__.converted_call}
| | | | | | | | args=[
| | | | | | | | | Attribute:
| | | | | | | | | | value=Call:
| | | | | | | | | | | func=Attribute:
| | | | | | | | | | | | value=Name:
| | | | | | | | | | | | | id=u"ag__"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | ___pyct_anno={QN: ag__}
| | | | | | | | | | | | attr=u"converted_call"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | ___pyct_anno={QN: ag__.converted_call}
| | | | | | | | | | | args=[
| | | | | | | | | | | | Name:
| | | | | | | | | | | | | id=u"get_one"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:113:13, ORIG_DEFINITIONS: (), QN: get_one}
| | | | | | | | | | | | Attribute:
| | | | | | | | | | | | | value=Name:
| | | | | | | | | | | | | | id=u"test_fn_scope"
| | | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | | ___pyct_anno={QN: test_fn_scope}
| | | | | | | | | | | | | attr=u"callopts"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | ___pyct_anno={QN: test_fn_scope.callopts}
| | | | | | | | | | | | Tuple:
| | | | | | | | | | | | | elts=[]
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | NameConstant:
| | | | | | | | | | | | | value=None
| | | | | | | | | | | | Name:
| | | | | | | | | | | | | id=u"test_fn_scope"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | ___pyct_anno={QN: test_fn_scope}
| | | | | | | | | | | ]
| | | | | | | | | | | keywords=[]
| | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:113:13}
| | | | | | | | | | attr=u"__add__"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:113:13}
| | | | | | | | | Attribute:
| | | | | | | | | | value=Name:
| | | | | | | | | | | id=u"test_fn_scope"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={QN: test_fn_scope}
| | | | | | | | | | attr=u"callopts"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | ___pyct_anno={QN: test_fn_scope.callopts}
| | | | | | | | | Tuple:
| | | | | | | | | | elts=[
| | | | | | | | | | | Num:
| | | | | | | | | | | | n=20
| | | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:113:31}
| | | | | | | | | | ]
| | | | | | | | | | ctx=Load()
| | | | | | | | | NameConstant:
| | | | | | | | | | value=None
| | | | | | | | | Name:
| | | | | | | | | | id=u"test_fn_scope"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | annotation=None
| | | | | | | | | | ___pyct_anno={QN: test_fn_scope}
| | | | | | | | ]
| | | | | | | | keywords=[]
| | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:113:13}
| | | | | | ]
| | | | | | keywords=[]
| | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(get_one,), w=()}}
| | | | | ___pyct_anno={ORIGIN: call_trees_test.py:113:6, SCOPE: Scope{r=(test_fn_scope.mark_return_value, get_one, test_fn_scope), w=()}, LIVE_VARS_IN: frozenset({test_fn_scope.mark_return_value, get_one, test_fn_scope})}
| | | ]
| | | ___pyct_anno={BODY_SCOPE: Scope{r=(ag__.Feature.ALL, ag__, ag__.FunctionScope, test_fn_scope, ag__.ConversionOptions, get_one, ag__.Feature, test_fn_scope.mark_return_value), w=(test_fn_scope,)}, LIVE_VARS_IN: frozenset({ag__.Feature, ag__.Feature.ALL, ag__, ag__.ConversionOptions, get_one, ag__.FunctionScope, test_fn_scope.mark_return_value})}
| ]
| decorator_list=[]
| returns=None
| ___pyct_anno={'lineno': 3, ORIGIN: call_trees_test.py:111:4, SCOPE: Scope{r=(), w=(test_fn,)}, BODY_SCOPE: Scope{r=(ag__.Feature.ALL, ag__, ag__.FunctionScope, test_fn_scope, ag__.ConversionOptions, get_one, ag__.Feature, test_fn_scope.mark_return_value), w=(test_fn_scope,)}, 'function_context_name': 'test_fn_scope'}

Offending AST:
FunctionDef:
| name=u"test_fn"
| args=None
| body=[
| | With:
| | | items=[
| | | | withitem:
| | | | | context_expr=Call:
| | | | | | func=Attribute:
| | | | | | | value=Name:
| | | | | | | | id=u"ag__"
| | | | | | | | ctx=Load()
| | | | | | | | annotation=None
| | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | attr=u"FunctionScope"
| | | | | | | ctx=Load()
| | | | | | | ___pyct_anno={QN: ag__.FunctionScope}
| | | | | | args=[
| | | | | | | Str:
| | | | | | | | s=u"test_fn"
| | | | | | | Str:
| | | | | | | | s=u"test_fn_scope"
| | | | | | | Call:
| | | | | | | | func=Attribute:
| | | | | | | | | value=Name:
| | | | | | | | | | id=u"ag__"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | annotation=None
| | | | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | | | attr=u"ConversionOptions"
| | | | | | | | | ctx=Load()
| | | | | | | | | ___pyct_anno={QN: ag__.ConversionOptions}
| | | | | | | | args=[]
| | | | | | | | keywords=[
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"recursive"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=True
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"user_requested"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=False
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"optional_features"
| | | | | | | | | | value=Attribute:
| | | | | | | | | | | value=Attribute:
| | | | | | | | | | | | value=Name:
| | | | | | | | | | | | | id=u"ag__"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | | | | | | attr=u"Feature"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | ___pyct_anno={QN: ag__.Feature}
| | | | | | | | | | | attr=u"ALL"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | ___pyct_anno={QN: ag__.Feature.ALL}
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"internal_convert_user_code"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=True
| | | | | | | | ]
| | | | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(ag__.Feature.ALL, ag__.Feature, ag__), w=()}}
| | | | | | ]
| | | | | | keywords=[]
| | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(ag__.Feature.ALL, ag__.Feature, ag__, ag__.ConversionOptions), w=()}}
| | | | | optional_vars=Name:
| | | | | | id=u"test_fn_scope"
| | | | | | ctx=Store()
| | | | | | annotation=None
| | | | | | ___pyct_anno={QN: test_fn_scope, DEFINITIONS: (AnnotatedDef[2479730450048],)}
| | | | | ___pyct_anno={SCOPE: Scope{r=(ag__.Feature.ALL, ag__, ag__.FunctionScope, ag__.ConversionOptions, ag__.Feature), w=(test_fn_scope,)}}
| | | ]
| | | body=[
| | | | Return:
| | | | | value=Call:
| | | | | | func=Attribute:
| | | | | | | value=Name:
| | | | | | | | id=u"test_fn_scope"
| | | | | | | | ctx=Load()
| | | | | | | | annotation=None
| | | | | | | | ___pyct_anno={QN: test_fn_scope, DEFINITIONS: (AnnotatedDef[2479730450048],)}
| | | | | | | attr=u"mark_return_value"
| | | | | | | ctx=Load()
| | | | | | | ___pyct_anno={QN: test_fn_scope.mark_return_value}
| | | | | | args=[
| | | | | | | BinOp:
| | | | | | | | left=Call:
| | | | | | | | | func=Attribute:
| | | | | | | | | | value=Name:
| | | | | | | | | | | id=u"ag__"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={QN: ag__}
| | | | | | | | | | attr=u"converted_call"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | ___pyct_anno={QN: ag__.converted_call}
| | | | | | | | | args=[
| | | | | | | | | | Name:
| | | | | | | | | | | id=u"f"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:83:13, ORIG_DEFINITIONS: (AnnotatedDef[2479731024168],), QN: f}
| | | | | | | | | | Attribute:
| | | | | | | | | | | value=Name:
| | | | | | | | | | | | id=u"test_fn_scope"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | annotation=None
| | | | | | | | | | | | ___pyct_anno={QN: test_fn_scope}
| | | | | | | | | | | attr=u"callopts"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | ___pyct_anno={QN: test_fn_scope.callopts}
| | | | | | | | | | Tuple:
| | | | | | | | | | | elts=[
| | | | | | | | | | | | Call:
| | | | | | | | | | | | | func=Attribute:
| | | | | | | | | | | | | | value=Name:
| | | | | | | | | | | | | | | id=u"ag__"
| | | | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | | | ___pyct_anno={QN: ag__}
| | | | | | | | | | | | | | attr=u"converted_call"
| | | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | | ___pyct_anno={QN: ag__.converted_call}
| | | | | | | | | | | | | args=[
| | | | | | | | | | | | | | Name:
| | | | | | | | | | | | | | | id=u"g"
| | | | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:83:15, ORIG_DEFINITIONS: (AnnotatedDef[2479730449600],), QN: g}
| | | | | | | | | | | | | | Attribute:
| | | | | | | | | | | | | | | value=Name:
| | | | | | | | | | | | | | | | id=u"test_fn_scope"
| | | | | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | | | | ___pyct_anno={QN: test_fn_scope}
| | | | | | | | | | | | | | | attr=u"callopts"
| | | | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | | | ___pyct_anno={QN: test_fn_scope.callopts}
| | | | | | | | | | | | | | Tuple:
| | | | | | | | | | | | | | | elts=[]
| | | | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | | NameConstant:
| | | | | | | | | | | | | | | value=None
| | | | | | | | | | | | | | Name:
| | | | | | | | | | | | | | | id=u"test_fn_scope"
| | | | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | | | ___pyct_anno={QN: test_fn_scope}
| | | | | | | | | | | | | ]
| | | | | | | | | | | | | keywords=[]
| | | | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:83:15}
| | | | | | | | | | | ]
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | NameConstant:
| | | | | | | | | | | value=None
| | | | | | | | | | Name:
| | | | | | | | | | | id=u"test_fn_scope"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={QN: test_fn_scope}
| | | | | | | | | ]
| | | | | | | | | keywords=[]
| | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:83:13}
| | | | | | | | op=Add()
| | | | | | | | right=Num:
| | | | | | | | | n=300
| | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:83:22}
| | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:83:13}
| | | | | | ]
| | | | | | keywords=[]
| | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(g, f), w=()}}
| | | | | ___pyct_anno={ORIGIN: call_trees_test.py:83:6, SCOPE: Scope{r=(g, f, test_fn_scope.mark_return_value, test_fn_scope), w=()}, LIVE_VARS_IN: frozenset({g, f, test_fn_scope.mark_return_value, test_fn_scope})}
| | | ]
| | | ___pyct_anno={BODY_SCOPE: Scope{r=(g, ag__.Feature.ALL, ag__, ag__.FunctionScope, test_fn_scope, ag__.ConversionOptions, f, ag__.Feature, test_fn_scope.mark_return_value), w=(test_fn_scope,)}, LIVE_VARS_IN: frozenset({g, ag__.Feature.ALL, ag__, ag__.FunctionScope, ag__.ConversionOptions, f, ag__.Feature, test_fn_scope.mark_return_value})}
| ]
| decorator_list=[]
| returns=None
| ___pyct_anno={'lineno': 3, ORIGIN: call_trees_test.py:81:4, SCOPE: Scope{r=(), w=(test_fn,)}, BODY_SCOPE: Scope{r=(g, ag__.Feature.ALL, ag__, ag__.FunctionScope, test_fn_scope, ag__.ConversionOptions, f, ag__.Feature, test_fn_scope.mark_return_value), w=(test_fn_scope,)}, 'function_context_name': 'test_fn_scope'}
[  FAILED  ] CallTreesTest.test_function_with_call_in_argument
[ RUN      ] CallTreesTest.test_function_with_expression_in_argument

Offending AST:
FunctionDef:
| name=u"test_fn"
| args=None
| body=[
| | With:
| | | items=[
| | | | withitem:
| | | | | context_expr=Call:
| | | | | | func=Attribute:
| | | | | | | value=Name:
| | | | | | | | id=u"ag__"
| | | | | | | | ctx=Load()
| | | | | | | | annotation=None
| | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | attr=u"FunctionScope"
| | | | | | | ctx=Load()
| | | | | | | ___pyct_anno={QN: ag__.FunctionScope}
| | | | | | args=[
| | | | | | | Str:
| | | | | | | | s=u"test_fn"
| | | | | | | Str:
| | | | | | | | s=u"test_fn_scope"
| | | | | | | Call:
| | | | | | | | func=Attribute:
| | | | | | | | | value=Name:
| | | | | | | | | | id=u"ag__"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | annotation=None
| | | | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | | | attr=u"ConversionOptions"
| | | | | | | | | ctx=Load()
| | | | | | | | | ___pyct_anno={QN: ag__.ConversionOptions}
| | | | | | | | args=[]
| | | | | | | | keywords=[
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"recursive"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=True
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"user_requested"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=False
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"optional_features"
| | | | | | | | | | value=Attribute:
| | | | | | | | | | | value=Attribute:
| | | | | | | | | | | | value=Name:
| | | | | | | | | | | | | id=u"ag__"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | | | | | | attr=u"Feature"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | ___pyct_anno={QN: ag__.Feature}
| | | | | | | | | | | attr=u"ALL"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | ___pyct_anno={QN: ag__.Feature.ALL}
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"internal_convert_user_code"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=True
| | | | | | | | ]
| | | | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(ag__.Feature.ALL, ag__.Feature, ag__), w=()}}
| | | | | | ]
| | | | | | keywords=[]
| | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(ag__.Feature.ALL, ag__.Feature, ag__, ag__.ConversionOptions), w=()}}
| | | | | optional_vars=Name:
| | | | | | id=u"test_fn_scope"
| | | | | | ctx=Store()
| | | | | | annotation=None
| | | | | | ___pyct_anno={QN: test_fn_scope, DEFINITIONS: (AnnotatedDef[2479731025456],)}
| | | | | ___pyct_anno={SCOPE: Scope{r=(ag__.Feature.ALL, ag__, ag__.FunctionScope, ag__.ConversionOptions, ag__.Feature), w=(test_fn_scope,)}}
| | | ]
| | | body=[
| | | | Return:
| | | | | value=Call:
| | | | | | func=Attribute:
| | | | | | | value=Name:
| | | | | | | | id=u"test_fn_scope"
| | | | | | | | ctx=Load()
| | | | | | | | annotation=None
| | | | | | | | ___pyct_anno={QN: test_fn_scope, DEFINITIONS: (AnnotatedDef[2479731025456],)}
| | | | | | | attr=u"mark_return_value"
| | | | | | | ctx=Load()
| | | | | | | ___pyct_anno={QN: test_fn_scope.mark_return_value}
| | | | | | args=[
| | | | | | | BinOp:
| | | | | | | | left=Call:
| | | | | | | | | func=Attribute:
| | | | | | | | | | value=Name:
| | | | | | | | | | | id=u"ag__"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={QN: ag__}
| | | | | | | | | | attr=u"converted_call"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | ___pyct_anno={QN: ag__.converted_call}
| | | | | | | | | args=[
| | | | | | | | | | Name:
| | | | | | | | | | | id=u"f"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:59:13, ORIG_DEFINITIONS: (AnnotatedDef[2479731024168],), QN: f}
| | | | | | | | | | Attribute:
| | | | | | | | | | | value=Name:
| | | | | | | | | | | | id=u"test_fn_scope"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | annotation=None
| | | | | | | | | | | | ___pyct_anno={QN: test_fn_scope}
| | | | | | | | | | | attr=u"callopts"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | ___pyct_anno={QN: test_fn_scope.callopts}
| | | | | | | | | | Tuple:
| | | | | | | | | | | elts=[
| | | | | | | | | | | | BinOp:
| | | | | | | | | | | | | left=Call:
| | | | | | | | | | | | | | func=Attribute:
| | | | | | | | | | | | | | | value=Name:
| | | | | | | | | | | | | | | | id=u"ag__"
| | | | | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | | | | ___pyct_anno={QN: ag__}
| | | | | | | | | | | | | | | attr=u"converted_call"
| | | | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | | | ___pyct_anno={QN: ag__.converted_call}
| | | | | | | | | | | | | | args=[
| | | | | | | | | | | | | | | Name:
| | | | | | | | | | | | | | | | id=u"g"
| | | | | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:59:15, ORIG_DEFINITIONS: (AnnotatedDef[2479731025792],), QN: g}
| | | | | | | | | | | | | | | Attribute:
| | | | | | | | | | | | | | | | value=Name:
| | | | | | | | | | | | | | | | | id=u"test_fn_scope"
| | | | | | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | | | | | ___pyct_anno={QN: test_fn_scope}
| | | | | | | | | | | | | | | | attr=u"callopts"
| | | | | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | | | | ___pyct_anno={QN: test_fn_scope.callopts}
| | | | | | | | | | | | | | | Tuple:
| | | | | | | | | | | | | | | | elts=[]
| | | | | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | | | NameConstant:
| | | | | | | | | | | | | | | | value=None
| | | | | | | | | | | | | | | Name:
| | | | | | | | | | | | | | | | id=u"test_fn_scope"
| | | | | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | | | | ___pyct_anno={QN: test_fn_scope}
| | | | | | | | | | | | | | ]
| | | | | | | | | | | | | | keywords=[]
| | | | | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:59:15}
| | | | | | | | | | | | | op=Add()
| | | | | | | | | | | | | right=Num:
| | | | | | | | | | | | | | n=20
| | | | | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:59:21}
| | | | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:59:15}
| | | | | | | | | | | ]
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | NameConstant:
| | | | | | | | | | | value=None
| | | | | | | | | | Name:
| | | | | | | | | | | id=u"test_fn_scope"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={QN: test_fn_scope}
| | | | | | | | | ]
| | | | | | | | | keywords=[]
| | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:59:13}
| | | | | | | | op=Add()
| | | | | | | | right=Num:
| | | | | | | | | n=4000
| | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:59:27}
| | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:59:13}
| | | | | | ]
| | | | | | keywords=[]
| | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(g, f), w=()}}
| | | | | ___pyct_anno={ORIGIN: call_trees_test.py:59:6, SCOPE: Scope{r=(g, f, test_fn_scope.mark_return_value, test_fn_scope), w=()}, LIVE_VARS_IN: frozenset({g, f, test_fn_scope.mark_return_value, test_fn_scope})}
| | | ]
| | | ___pyct_anno={BODY_SCOPE: Scope{r=(g, ag__.Feature.ALL, ag__, ag__.FunctionScope, test_fn_scope, ag__.ConversionOptions, f, ag__.Feature, test_fn_scope.mark_return_value), w=(test_fn_scope,)}, LIVE_VARS_IN: frozenset({g, ag__.Feature.ALL, ag__, ag__.FunctionScope, ag__.ConversionOptions, f, ag__.Feature, test_fn_scope.mark_return_value})}
| ]
| decorator_list=[]
| returns=None
| ___pyct_anno={'lineno': 3, ORIGIN: call_trees_test.py:57:4, SCOPE: Scope{r=(), w=(test_fn,)}, BODY_SCOPE: Scope{r=(g, ag__.Feature.ALL, ag__, ag__.FunctionScope, test_fn_scope, ag__.ConversionOptions, f, ag__.Feature, test_fn_scope.mark_return_value), w=(test_fn_scope,)}, 'function_context_name': 'test_fn_scope'}
[  FAILED  ] CallTreesTest.test_function_with_expression_in_argument
[ RUN      ] CallTreesTest.test_function_with_kwarg
[  FAILED  ] CallTreesTest.test_function_with_kwarg
[ RUN      ] CallTreesTest.test_function_with_kwargs_keywords

Offending AST:
FunctionDef:
| name=u"test_fn"
| args=None
| body=[
| | With:
| | | items=[
| | | | withitem:
| | | | | context_expr=Call:
| | | | | | func=Attribute:
| | | | | | | value=Name:
| | | | | | | | id=u"ag__"
| | | | | | | | ctx=Load()
| | | | | | | | annotation=None
| | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | attr=u"FunctionScope"
| | | | | | | ctx=Load()
| | | | | | | ___pyct_anno={QN: ag__.FunctionScope}
| | | | | | args=[
| | | | | | | Str:
| | | | | | | | s=u"test_fn"
| | | | | | | Str:
| | | | | | | | s=u"test_fn_scope"
| | | | | | | Call:
| | | | | | | | func=Attribute:
| | | | | | | | | value=Name:
| | | | | | | | | | id=u"ag__"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | annotation=None
| | | | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | | | attr=u"ConversionOptions"
| | | | | | | | | ctx=Load()
| | | | | | | | | ___pyct_anno={QN: ag__.ConversionOptions}
| | | | | | | | args=[]
| | | | | | | | keywords=[
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"recursive"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=True
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"user_requested"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=False
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"optional_features"
| | | | | | | | | | value=Attribute:
| | | | | | | | | | | value=Attribute:
| | | | | | | | | | | | value=Name:
| | | | | | | | | | | | | id=u"ag__"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | | | | | | attr=u"Feature"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | ___pyct_anno={QN: ag__.Feature}
| | | | | | | | | | | attr=u"ALL"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | ___pyct_anno={QN: ag__.Feature.ALL}
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"internal_convert_user_code"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=True
| | | | | | | | ]
| | | | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(ag__.Feature.ALL, ag__.Feature, ag__), w=()}}
| | | | | | ]
| | | | | | keywords=[]
| | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(ag__.Feature.ALL, ag__.Feature, ag__, ag__.ConversionOptions), w=()}}
| | | | | optional_vars=Name:
| | | | | | id=u"test_fn_scope"
| | | | | | ctx=Store()
| | | | | | annotation=None
| | | | | | ___pyct_anno={QN: test_fn_scope, DEFINITIONS: (AnnotatedDef[2479718359840],)}
| | | | | ___pyct_anno={SCOPE: Scope{r=(ag__.Feature.ALL, ag__, ag__.FunctionScope, ag__.ConversionOptions, ag__.Feature), w=(test_fn_scope,)}}
| | | ]
| | | body=[
| | | | Return:
| | | | | value=Call:
| | | | | | func=Attribute:
| | | | | | | value=Name:
| | | | | | | | id=u"test_fn_scope"
| | | | | | | | ctx=Load()
| | | | | | | | annotation=None
| | | | | | | | ___pyct_anno={QN: test_fn_scope, DEFINITIONS: (AnnotatedDef[2479718359840],)}
| | | | | | | attr=u"mark_return_value"
| | | | | | | ctx=Load()
| | | | | | | ___pyct_anno={QN: test_fn_scope.mark_return_value}
| | | | | | args=[
| | | | | | | BinOp:
| | | | | | | | left=Call:
| | | | | | | | | func=Attribute:
| | | | | | | | | | value=Name:
| | | | | | | | | | | id=u"ag__"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={QN: ag__}
| | | | | | | | | | attr=u"converted_call"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | ___pyct_anno={QN: ag__.converted_call}
| | | | | | | | | args=[
| | | | | | | | | | Name:
| | | | | | | | | | | id=u"f"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:143:13, ORIG_DEFINITIONS: (AnnotatedDef[2479731027920],), QN: f}
| | | | | | | | | | Attribute:
| | | | | | | | | | | value=Name:
| | | | | | | | | | | | id=u"test_fn_scope"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | annotation=None
| | | | | | | | | | | | ___pyct_anno={QN: test_fn_scope}
| | | | | | | | | | | attr=u"callopts"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | ___pyct_anno={QN: test_fn_scope.callopts}
| | | | | | | | | | Tuple:
| | | | | | | | | | | elts=[
| | | | | | | | | | | | Name:
| | | | | | | | | | | | | id=u"a"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:143:15, ORIG_DEFINITIONS: (AnnotatedDef[2479731025904],), QN: a}
| | | | | | | | | | | ]
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | Dict:
| | | | | | | | | | | keys=[
| | | | | | | | | | | | Str:
| | | | | | | | | | | | | s=u"c"
| | | | | | | | | | | ]
| | | | | | | | | | | values=[
| | | | | | | | | | | | Name:
| | | | | | | | | | | | | id=u"b"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:143:20, ORIG_DEFINITIONS: (AnnotatedDef[2479731025344],), QN: b}
| | | | | | | | | | | ]
| | | | | | | | | | Name:
| | | | | | | | | | | id=u"test_fn_scope"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={QN: test_fn_scope}
| | | | | | | | | ]
| | | | | | | | | keywords=[]
| | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:143:13}
| | | | | | | | op=Add()
| | | | | | | | right=Num:
| | | | | | | | | n=300
| | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:143:25}
| | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:143:13}
| | | | | | ]
| | | | | | keywords=[]
| | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(a, b, f), w=()}}
| | | | | ___pyct_anno={ORIGIN: call_trees_test.py:143:6, SCOPE: Scope{r=(a, test_fn_scope, b, f, test_fn_scope.mark_return_value), w=()}, LIVE_VARS_IN: frozenset({a, b, f, test_fn_scope.mark_return_value, test_fn_scope})}
| | | ]
| | | ___pyct_anno={BODY_SCOPE: Scope{r=(a, ag__.Feature.ALL, ag__, ag__.FunctionScope, test_fn_scope, b, ag__.ConversionOptions, f, ag__.Feature, test_fn_scope.mark_return_value), w=(test_fn_scope,)}, LIVE_VARS_IN: frozenset({a, ag__.Feature.ALL, ag__, ag__.FunctionScope, b, ag__.ConversionOptions, f, ag__.Feature, test_fn_scope.mark_return_value})}
| ]
| decorator_list=[]
| returns=None
| ___pyct_anno={'lineno': 3, ORIGIN: call_trees_test.py:141:4, SCOPE: Scope{r=(), w=(test_fn,)}, BODY_SCOPE: Scope{r=(a, ag__.Feature.ALL, ag__, ag__.FunctionScope, test_fn_scope, b, ag__.ConversionOptions, f, ag__.Feature, test_fn_scope.mark_return_value), w=(test_fn_scope,)}, 'function_context_name': 'test_fn_scope'}

Offending AST:
FunctionDef:
| name=u"test_fn"
| args=None
| body=[
| | With:
| | | items=[
| | | | withitem:
| | | | | context_expr=Call:
| | | | | | func=Attribute:
| | | | | | | value=Name:
| | | | | | | | id=u"ag__"
| | | | | | | | ctx=Load()
| | | | | | | | annotation=None
| | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | attr=u"FunctionScope"
| | | | | | | ctx=Load()
| | | | | | | ___pyct_anno={QN: ag__.FunctionScope}
| | | | | | args=[
| | | | | | | Str:
| | | | | | | | s=u"test_fn"
| | | | | | | Str:
| | | | | | | | s=u"test_fn_scope"
| | | | | | | Call:
| | | | | | | | func=Attribute:
| | | | | | | | | value=Name:
| | | | | | | | | | id=u"ag__"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | annotation=None
| | | | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | | | attr=u"ConversionOptions"
| | | | | | | | | ctx=Load()
| | | | | | | | | ___pyct_anno={QN: ag__.ConversionOptions}
| | | | | | | | args=[]
| | | | | | | | keywords=[
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"recursive"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=True
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"user_requested"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=False
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"optional_features"
| | | | | | | | | | value=Attribute:
| | | | | | | | | | | value=Attribute:
| | | | | | | | | | | | value=Name:
| | | | | | | | | | | | | id=u"ag__"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | | | | | | attr=u"Feature"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | ___pyct_anno={QN: ag__.Feature}
| | | | | | | | | | | attr=u"ALL"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | ___pyct_anno={QN: ag__.Feature.ALL}
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"internal_convert_user_code"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=True
| | | | | | | | ]
| | | | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(ag__.Feature.ALL, ag__.Feature, ag__), w=()}}
| | | | | | ]
| | | | | | keywords=[]
| | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(ag__.Feature.ALL, ag__.Feature, ag__, ag__.ConversionOptions), w=()}}
| | | | | optional_vars=Name:
| | | | | | id=u"test_fn_scope"
| | | | | | ctx=Store()
| | | | | | annotation=None
| | | | | | ___pyct_anno={QN: test_fn_scope, DEFINITIONS: (AnnotatedDef[2479731026296],)}
| | | | | ___pyct_anno={SCOPE: Scope{r=(ag__.Feature.ALL, ag__, ag__.FunctionScope, ag__.ConversionOptions, ag__.Feature), w=(test_fn_scope,)}}
| | | ]
| | | body=[
| | | | Return:
| | | | | value=Call:
| | | | | | func=Attribute:
| | | | | | | value=Name:
| | | | | | | | id=u"test_fn_scope"
| | | | | | | | ctx=Load()
| | | | | | | | annotation=None
| | | | | | | | ___pyct_anno={QN: test_fn_scope, DEFINITIONS: (AnnotatedDef[2479731026296],)}
| | | | | | | attr=u"mark_return_value"
| | | | | | | ctx=Load()
| | | | | | | ___pyct_anno={QN: test_fn_scope.mark_return_value}
| | | | | | args=[
| | | | | | | BinOp:
| | | | | | | | left=Call:
| | | | | | | | | func=Attribute:
| | | | | | | | | | value=Name:
| | | | | | | | | | | id=u"ag__"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={QN: ag__}
| | | | | | | | | | attr=u"converted_call"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | ___pyct_anno={QN: ag__.converted_call}
| | | | | | | | | args=[
| | | | | | | | | | Name:
| | | | | | | | | | | id=u"f"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:215:13, ORIG_DEFINITIONS: (AnnotatedDef[2479731026464],), QN: f}
| | | | | | | | | | Attribute:
| | | | | | | | | | | value=Name:
| | | | | | | | | | | | id=u"test_fn_scope"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | annotation=None
| | | | | | | | | | | | ___pyct_anno={QN: test_fn_scope}
| | | | | | | | | | | attr=u"callopts"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | ___pyct_anno={QN: test_fn_scope.callopts}
| | | | | | | | | | Tuple:
| | | | | | | | | | | elts=[
| | | | | | | | | | | | Name:
| | | | | | | | | | | | | id=u"a"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:215:15, ORIG_DEFINITIONS: (AnnotatedDef[2479731024728],), QN: a}
| | | | | | | | | | | ]
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | Call:
| | | | | | | | | | | func=Name:
| | | | | | | | | | | | id=u"dict"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | annotation=None
| | | | | | | | | | | | ___pyct_anno={QN: dict}
| | | | | | | | | | | args=[
| | | | | | | | | | | | Name:
| | | | | | | | | | | | | id=u"kwargs"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:215:25, ORIG_DEFINITIONS: (AnnotatedDef[2479731027752],), QN: kwargs}
| | | | | | | | | | | ]
| | | | | | | | | | | keywords=[
| | | | | | | | | | | | keyword:
| | | | | | | | | | | | | arg=None
| | | | | | | | | | | | | value=Dict:
| | | | | | | | | | | | | | keys=[
| | | | | | | | | | | | | | | Str:
| | | | | | | | | | | | | | | | s=u"b"
| | | | | | | | | | | | | | ]
| | | | | | | | | | | | | | values=[
| | | | | | | | | | | | | | | Name:
| | | | | | | | | | | | | | | | id=u"b"
| | | | | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:215:20, ORIG_DEFINITIONS: (AnnotatedDef[2479731025904],), QN: b}
| | | | | | | | | | | | | | ]
| | | | | | | | | | | ]
| | | | | | | | | | Name:
| | | | | | | | | | | id=u"test_fn_scope"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={QN: test_fn_scope}
| | | | | | | | | ]
| | | | | | | | | keywords=[]
| | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:215:13}
| | | | | | | | op=Add()
| | | | | | | | right=Num:
| | | | | | | | | n=5
| | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:215:35}
| | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:215:13}
| | | | | | ]
| | | | | | keywords=[]
| | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(a, kwargs, b, f), w=()}}
| | | | | ___pyct_anno={ORIGIN: call_trees_test.py:215:6, SCOPE: Scope{r=(a, kwargs, test_fn_scope, b, f, test_fn_scope.mark_return_value), w=()}, LIVE_VARS_IN: frozenset({a, kwargs, b, f, test_fn_scope.mark_return_value, test_fn_scope})}
| | | ]
| | | ___pyct_anno={BODY_SCOPE: Scope{r=(a, kwargs, ag__.Feature.ALL, ag__, ag__.FunctionScope, test_fn_scope, b, ag__.ConversionOptions, f, ag__.Feature, test_fn_scope.mark_return_value), w=(test_fn_scope,)}, LIVE_VARS_IN: frozenset({a, kwargs, ag__.Feature.ALL, ag__, ag__.FunctionScope, b, ag__.ConversionOptions, f, ag__.Feature, test_fn_scope.mark_return_value})}
| ]
| decorator_list=[]
| returns=None
| ___pyct_anno={'lineno': 3, ORIGIN: call_trees_test.py:213:4, SCOPE: Scope{r=(), w=(test_fn,)}, BODY_SCOPE: Scope{r=(a, kwargs, ag__.Feature.ALL, ag__, ag__.FunctionScope, test_fn_scope, b, ag__.ConversionOptions, f, ag__.Feature, test_fn_scope.mark_return_value), w=(test_fn_scope,)}, 'function_context_name': 'test_fn_scope'}
[  FAILED  ] CallTreesTest.test_function_with_kwargs_keywords
[ RUN      ] CallTreesTest.test_function_with_kwargs_starargs
[  FAILED  ] CallTreesTest.test_function_with_kwargs_starargs
[ RUN      ] CallTreesTest.test_function_with_kwargs_starargs_only

Offending AST:
FunctionDef:
| name=u"test_fn"
| args=None
| body=[
| | With:
| | | items=[
| | | | withitem:
| | | | | context_expr=Call:
| | | | | | func=Attribute:
| | | | | | | value=Name:
| | | | | | | | id=u"ag__"
| | | | | | | | ctx=Load()
| | | | | | | | annotation=None
| | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | attr=u"FunctionScope"
| | | | | | | ctx=Load()
| | | | | | | ___pyct_anno={QN: ag__.FunctionScope}
| | | | | | args=[
| | | | | | | Str:
| | | | | | | | s=u"test_fn"
| | | | | | | Str:
| | | | | | | | s=u"test_fn_scope"
| | | | | | | Call:
| | | | | | | | func=Attribute:
| | | | | | | | | value=Name:
| | | | | | | | | | id=u"ag__"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | annotation=None
| | | | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | | | attr=u"ConversionOptions"
| | | | | | | | | ctx=Load()
| | | | | | | | | ___pyct_anno={QN: ag__.ConversionOptions}
| | | | | | | | args=[]
| | | | | | | | keywords=[
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"recursive"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=True
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"user_requested"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=False
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"optional_features"
| | | | | | | | | | value=Attribute:
| | | | | | | | | | | value=Attribute:
| | | | | | | | | | | | value=Name:
| | | | | | | | | | | | | id=u"ag__"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | | | | | | attr=u"Feature"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | ___pyct_anno={QN: ag__.Feature}
| | | | | | | | | | | attr=u"ALL"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | ___pyct_anno={QN: ag__.Feature.ALL}
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"internal_convert_user_code"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=True
| | | | | | | | ]
| | | | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(ag__.Feature.ALL, ag__.Feature, ag__), w=()}}
| | | | | | ]
| | | | | | keywords=[]
| | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(ag__.Feature.ALL, ag__.Feature, ag__, ag__.ConversionOptions), w=()}}
| | | | | optional_vars=Name:
| | | | | | id=u"test_fn_scope"
| | | | | | ctx=Store()
| | | | | | annotation=None
| | | | | | ___pyct_anno={QN: test_fn_scope, DEFINITIONS: (AnnotatedDef[2479730450384],)}
| | | | | ___pyct_anno={SCOPE: Scope{r=(ag__.Feature.ALL, ag__, ag__.FunctionScope, ag__.ConversionOptions, ag__.Feature), w=(test_fn_scope,)}}
| | | ]
| | | body=[
| | | | Return:
| | | | | value=Call:
| | | | | | func=Attribute:
| | | | | | | value=Name:
| | | | | | | | id=u"test_fn_scope"
| | | | | | | | ctx=Load()
| | | | | | | | annotation=None
| | | | | | | | ___pyct_anno={QN: test_fn_scope, DEFINITIONS: (AnnotatedDef[2479730450384],)}
| | | | | | | attr=u"mark_return_value"
| | | | | | | ctx=Load()
| | | | | | | ___pyct_anno={QN: test_fn_scope.mark_return_value}
| | | | | | args=[
| | | | | | | BinOp:
| | | | | | | | left=Call:
| | | | | | | | | func=Attribute:
| | | | | | | | | | value=Name:
| | | | | | | | | | | id=u"ag__"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={QN: ag__}
| | | | | | | | | | attr=u"converted_call"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | ___pyct_anno={QN: ag__.converted_call}
| | | | | | | | | args=[
| | | | | | | | | | Name:
| | | | | | | | | | | id=u"f"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:161:13, ORIG_DEFINITIONS: (AnnotatedDef[2479731063440],), QN: f}
| | | | | | | | | | Attribute:
| | | | | | | | | | | value=Name:
| | | | | | | | | | | | id=u"test_fn_scope"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | annotation=None
| | | | | | | | | | | | ___pyct_anno={QN: test_fn_scope}
| | | | | | | | | | | attr=u"callopts"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | ___pyct_anno={QN: test_fn_scope.callopts}
| | | | | | | | | | BinOp:
| | | | | | | | | | | left=Tuple:
| | | | | | | | | | | | elts=[
| | | | | | | | | | | | | Name:
| | | | | | | | | | | | | | id=u"a"
| | | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:161:15, ORIG_DEFINITIONS: (AnnotatedDef[2479731062320],), QN: a}
| | | | | | | | | | | | ]
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | op=Add()
| | | | | | | | | | | right=Call:
| | | | | | | | | | | | func=Name:
| | | | | | | | | | | | | id=u"tuple"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | ___pyct_anno={QN: tuple}
| | | | | | | | | | | | args=[
| | | | | | | | | | | | | Name:
| | | | | | | | | | | | | | id=u"args"
| | | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:161:19, ORIG_DEFINITIONS: (AnnotatedDef[2479731061368],), QN: args}
| | | | | | | | | | | | ]
| | | | | | | | | | | | keywords=[]
| | | | | | | | | | Call:
| | | | | | | | | | | func=Name:
| | | | | | | | | | | | id=u"dict"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | annotation=None
| | | | | | | | | | | | ___pyct_anno={QN: dict}
| | | | | | | | | | | args=[
| | | | | | | | | | | | Name:
| | | | | | | | | | | | | id=u"kwargs"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:161:27, ORIG_DEFINITIONS: (AnnotatedDef[2479731063104],), QN: kwargs}
| | | | | | | | | | | ]
| | | | | | | | | | | keywords=[
| | | | | | | | | | | | keyword:
| | | | | | | | | | | | | arg=None
| | | | | | | | | | | | | value=Dict:
| | | | | | | | | | | | | | keys=[]
| | | | | | | | | | | | | | values=[]
| | | | | | | | | | | ]
| | | | | | | | | | Name:
| | | | | | | | | | | id=u"test_fn_scope"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={QN: test_fn_scope}
| | | | | | | | | ]
| | | | | | | | | keywords=[]
| | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:161:13}
| | | | | | | | op=Add()
| | | | | | | | right=Num:
| | | | | | | | | n=5
| | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:161:37}
| | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:161:13}
| | | | | | ]
| | | | | | keywords=[]
| | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(a, kwargs, f, args), w=()}}
| | | | | ___pyct_anno={ORIGIN: call_trees_test.py:161:6, SCOPE: Scope{r=(a, kwargs, test_fn_scope, args, f, test_fn_scope.mark_return_value), w=()}, LIVE_VARS_IN: frozenset({a, kwargs, args, f, test_fn_scope.mark_return_value, test_fn_scope})}
| | | ]
| | | ___pyct_anno={BODY_SCOPE: Scope{r=(a, kwargs, ag__.Feature.ALL, ag__, ag__.FunctionScope, test_fn_scope, ag__.ConversionOptions, args, f, ag__.Feature, test_fn_scope.mark_return_value), w=(test_fn_scope,)}, LIVE_VARS_IN: frozenset({a, kwargs, ag__.Feature.ALL, ag__, ag__.FunctionScope, ag__.ConversionOptions, args, f, ag__.Feature, test_fn_scope.mark_return_value})}
| ]
| decorator_list=[]
| returns=None
| ___pyct_anno={'lineno': 3, ORIGIN: call_trees_test.py:159:4, SCOPE: Scope{r=(), w=(test_fn,)}, BODY_SCOPE: Scope{r=(a, kwargs, ag__.Feature.ALL, ag__, ag__.FunctionScope, test_fn_scope, ag__.ConversionOptions, args, f, ag__.Feature, test_fn_scope.mark_return_value), w=(test_fn_scope,)}, 'function_context_name': 'test_fn_scope'}

Offending AST:
FunctionDef:
| name=u"test_fn"
| args=None
| body=[
| | With:
| | | items=[
| | | | withitem:
| | | | | context_expr=Call:
| | | | | | func=Attribute:
| | | | | | | value=Name:
| | | | | | | | id=u"ag__"
| | | | | | | | ctx=Load()
| | | | | | | | annotation=None
| | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | attr=u"FunctionScope"
| | | | | | | ctx=Load()
| | | | | | | ___pyct_anno={QN: ag__.FunctionScope}
| | | | | | args=[
| | | | | | | Str:
| | | | | | | | s=u"test_fn"
| | | | | | | Str:
| | | | | | | | s=u"test_fn_scope"
| | | | | | | Call:
| | | | | | | | func=Attribute:
| | | | | | | | | value=Name:
| | | | | | | | | | id=u"ag__"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | annotation=None
| | | | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | | | attr=u"ConversionOptions"
| | | | | | | | | ctx=Load()
| | | | | | | | | ___pyct_anno={QN: ag__.ConversionOptions}
| | | | | | | | args=[]
| | | | | | | | keywords=[
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"recursive"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=True
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"user_requested"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=False
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"optional_features"
| | | | | | | | | | value=Attribute:
| | | | | | | | | | | value=Attribute:
| | | | | | | | | | | | value=Name:
| | | | | | | | | | | | | id=u"ag__"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | | | | | | attr=u"Feature"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | ___pyct_anno={QN: ag__.Feature}
| | | | | | | | | | | attr=u"ALL"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | ___pyct_anno={QN: ag__.Feature.ALL}
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"internal_convert_user_code"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=True
| | | | | | | | ]
| | | | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(ag__.Feature.ALL, ag__.Feature, ag__), w=()}}
| | | | | | ]
| | | | | | keywords=[]
| | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(ag__.Feature.ALL, ag__.Feature, ag__, ag__.ConversionOptions), w=()}}
| | | | | optional_vars=Name:
| | | | | | id=u"test_fn_scope"
| | | | | | ctx=Store()
| | | | | | annotation=None
| | | | | | ___pyct_anno={QN: test_fn_scope, DEFINITIONS: (AnnotatedDef[2479730449936],)}
| | | | | ___pyct_anno={SCOPE: Scope{r=(ag__.Feature.ALL, ag__, ag__.FunctionScope, ag__.ConversionOptions, ag__.Feature), w=(test_fn_scope,)}}
| | | ]
| | | body=[
| | | | Assign:
| | | | | targets=[
| | | | | | Name:
| | | | | | | id=u"args"
| | | | | | | ctx=Store()
| | | | | | | annotation=None
| | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:193:6, ORIG_DEFINITIONS: (AnnotatedDef[2479730449376],), QN: args, DEFINITIONS: (AnnotatedDef[2479731024728],)}
| | | | | ]
| | | | | value=List:
| | | | | | elts=[
| | | | | | | Num:
| | | | | | | | n=1
| | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:193:14}
| | | | | | | Num:
| | | | | | | | n=20
| | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:193:17}
| | | | | | | Num:
| | | | | | | | n=300
| | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:193:21}
| | | | | | ]
| | | | | | ctx=Load()
| | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:193:13}
| | | | | ___pyct_anno={ORIGIN: call_trees_test.py:193:6, SCOPE: Scope{r=(), w=(args,)}, LIVE_VARS_IN: frozenset({f, test_fn_scope.mark_return_value, test_fn_scope})}
| | | | Return:
| | | | | value=Call:
| | | | | | func=Attribute:
| | | | | | | value=Name:
| | | | | | | | id=u"test_fn_scope"
| | | | | | | | ctx=Load()
| | | | | | | | annotation=None
| | | | | | | | ___pyct_anno={QN: test_fn_scope, DEFINITIONS: (AnnotatedDef[2479730449936],)}
| | | | | | | attr=u"mark_return_value"
| | | | | | | ctx=Load()
| | | | | | | ___pyct_anno={QN: test_fn_scope.mark_return_value}
| | | | | | args=[
| | | | | | | BinOp:
| | | | | | | | left=Call:
| | | | | | | | | func=Attribute:
| | | | | | | | | | value=Name:
| | | | | | | | | | | id=u"ag__"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={QN: ag__}
| | | | | | | | | | attr=u"converted_call"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | ___pyct_anno={QN: ag__.converted_call}
| | | | | | | | | args=[
| | | | | | | | | | Name:
| | | | | | | | | | | id=u"f"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:195:13, ORIG_DEFINITIONS: (), QN: f}
| | | | | | | | | | Attribute:
| | | | | | | | | | | value=Name:
| | | | | | | | | | | | id=u"test_fn_scope"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | annotation=None
| | | | | | | | | | | | ___pyct_anno={QN: test_fn_scope}
| | | | | | | | | | | attr=u"callopts"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | ___pyct_anno={QN: test_fn_scope.callopts}
| | | | | | | | | | BinOp:
| | | | | | | | | | | left=Tuple:
| | | | | | | | | | | | elts=[]
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | op=Add()
| | | | | | | | | | | right=Call:
| | | | | | | | | | | | func=Name:
| | | | | | | | | | | | | id=u"tuple"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | ___pyct_anno={QN: tuple}
| | | | | | | | | | | | args=[
| | | | | | | | | | | | | Name:
| | | | | | | | | | | | | | id=u"args"
| | | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:195:16, ORIG_DEFINITIONS: (AnnotatedDef[2479730449376],), QN: args}
| | | | | | | | | | | | ]
| | | | | | | | | | | | keywords=[]
| | | | | | | | | | NameConstant:
| | | | | | | | | | | value=None
| | | | | | | | | | Name:
| | | | | | | | | | | id=u"test_fn_scope"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={QN: test_fn_scope}
| | | | | | | | | ]
| | | | | | | | | keywords=[]
| | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:195:13}
| | | | | | | | op=Add()
| | | | | | | | right=Num:
| | | | | | | | | n=4000
| | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:195:24}
| | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:195:13}
| | | | | | ]
| | | | | | keywords=[]
| | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(f, args), w=()}}
| | | | | ___pyct_anno={ORIGIN: call_trees_test.py:195:6, SCOPE: Scope{r=(f, test_fn_scope.mark_return_value, test_fn_scope, args), w=()}, LIVE_VARS_IN: frozenset({f, test_fn_scope.mark_return_value, test_fn_scope, args})}
| | | ]
| | | ___pyct_anno={BODY_SCOPE: Scope{r=(ag__.Feature.ALL, ag__, ag__.FunctionScope, test_fn_scope, ag__.ConversionOptions, args, f, ag__.Feature, test_fn_scope.mark_return_value), w=(test_fn_scope, args)}, LIVE_VARS_IN: frozenset({ag__.Feature, ag__.Feature.ALL, ag__, ag__.ConversionOptions, f, ag__.FunctionScope, test_fn_scope.mark_return_value})}
| ]
| decorator_list=[]
| returns=None
| ___pyct_anno={'lineno': 3, ORIGIN: call_trees_test.py:191:4, SCOPE: Scope{r=(), w=(test_fn,)}, BODY_SCOPE: Scope{r=(ag__.Feature.ALL, ag__, ag__.FunctionScope, test_fn_scope, ag__.ConversionOptions, args, f, ag__.Feature, test_fn_scope.mark_return_value), w=(test_fn_scope, args)}, 'function_context_name': 'test_fn_scope'}
[  FAILED  ] CallTreesTest.test_function_with_kwargs_starargs_only
[ RUN      ] CallTreesTest.test_normal_function
[  FAILED  ] CallTreesTest.test_normal_function
[ RUN      ] CallTreesTest.test_object_method

Offending AST:
FunctionDef:
| name=u"test_fn"
| args=None
| body=[
| | With:
| | | items=[
| | | | withitem:
| | | | | context_expr=Call:
| | | | | | func=Attribute:
| | | | | | | value=Name:
| | | | | | | | id=u"ag__"
| | | | | | | | ctx=Load()
| | | | | | | | annotation=None
| | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | attr=u"FunctionScope"
| | | | | | | ctx=Load()
| | | | | | | ___pyct_anno={QN: ag__.FunctionScope}
| | | | | | args=[
| | | | | | | Str:
| | | | | | | | s=u"test_fn"
| | | | | | | Str:
| | | | | | | | s=u"test_fn_scope"
| | | | | | | Call:
| | | | | | | | func=Attribute:
| | | | | | | | | value=Name:
| | | | | | | | | | id=u"ag__"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | annotation=None
| | | | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | | | attr=u"ConversionOptions"
| | | | | | | | | ctx=Load()
| | | | | | | | | ___pyct_anno={QN: ag__.ConversionOptions}
| | | | | | | | args=[]
| | | | | | | | keywords=[
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"recursive"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=True
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"user_requested"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=False
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"optional_features"
| | | | | | | | | | value=Attribute:
| | | | | | | | | | | value=Attribute:
| | | | | | | | | | | | value=Name:
| | | | | | | | | | | | | id=u"ag__"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | | | | | | attr=u"Feature"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | ___pyct_anno={QN: ag__.Feature}
| | | | | | | | | | | attr=u"ALL"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | ___pyct_anno={QN: ag__.Feature.ALL}
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"internal_convert_user_code"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=True
| | | | | | | | ]
| | | | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(ag__.Feature.ALL, ag__.Feature, ag__), w=()}}
| | | | | | ]
| | | | | | keywords=[]
| | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(ag__.Feature.ALL, ag__.Feature, ag__, ag__.ConversionOptions), w=()}}
| | | | | optional_vars=Name:
| | | | | | id=u"test_fn_scope"
| | | | | | ctx=Store()
| | | | | | annotation=None
| | | | | | ___pyct_anno={QN: test_fn_scope, DEFINITIONS: (AnnotatedDef[2479731024504],)}
| | | | | ___pyct_anno={SCOPE: Scope{r=(ag__.Feature.ALL, ag__, ag__.FunctionScope, ag__.ConversionOptions, ag__.Feature), w=(test_fn_scope,)}}
| | | ]
| | | body=[
| | | | Return:
| | | | | value=Call:
| | | | | | func=Attribute:
| | | | | | | value=Name:
| | | | | | | | id=u"test_fn_scope"
| | | | | | | | ctx=Load()
| | | | | | | | annotation=None
| | | | | | | | ___pyct_anno={QN: test_fn_scope, DEFINITIONS: (AnnotatedDef[2479731024504],)}
| | | | | | | attr=u"mark_return_value"
| | | | | | | ctx=Load()
| | | | | | | ___pyct_anno={QN: test_fn_scope.mark_return_value}
| | | | | | args=[
| | | | | | | BinOp:
| | | | | | | | left=Call:
| | | | | | | | | func=Attribute:
| | | | | | | | | | value=Name:
| | | | | | | | | | | id=u"ag__"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={QN: ag__}
| | | | | | | | | | attr=u"converted_call"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | ___pyct_anno={QN: ag__.converted_call}
| | | | | | | | | args=[
| | | | | | | | | | Name:
| | | | | | | | | | | id=u"f"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:41:13, ORIG_DEFINITIONS: (AnnotatedDef[2479731027248],), QN: f}
| | | | | | | | | | Attribute:
| | | | | | | | | | | value=Name:
| | | | | | | | | | | | id=u"test_fn_scope"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | annotation=None
| | | | | | | | | | | | ___pyct_anno={QN: test_fn_scope}
| | | | | | | | | | | attr=u"callopts"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | ___pyct_anno={QN: test_fn_scope.callopts}
| | | | | | | | | | Tuple:
| | | | | | | | | | | elts=[]
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | NameConstant:
| | | | | | | | | | | value=None
| | | | | | | | | | Name:
| | | | | | | | | | | id=u"test_fn_scope"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={QN: test_fn_scope}
| | | | | | | | | ]
| | | | | | | | | keywords=[]
| | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:41:13}
| | | | | | | | op=Add()
| | | | | | | | right=Num:
| | | | | | | | | n=20
| | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:41:19}
| | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:41:13}
| | | | | | ]
| | | | | | keywords=[]
| | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(f,), w=()}}
| | | | | ___pyct_anno={ORIGIN: call_trees_test.py:41:6, SCOPE: Scope{r=(f, test_fn_scope.mark_return_value, test_fn_scope), w=()}, LIVE_VARS_IN: frozenset({f, test_fn_scope.mark_return_value, test_fn_scope})}
| | | ]
| | | ___pyct_anno={BODY_SCOPE: Scope{r=(ag__.Feature.ALL, ag__, ag__.FunctionScope, test_fn_scope, ag__.ConversionOptions, f, ag__.Feature, test_fn_scope.mark_return_value), w=(test_fn_scope,)}, LIVE_VARS_IN: frozenset({ag__.Feature, ag__.Feature.ALL, ag__, ag__.ConversionOptions, f, ag__.FunctionScope, test_fn_scope.mark_return_value})}
| ]
| decorator_list=[]
| returns=None
| ___pyct_anno={'lineno': 3, ORIGIN: call_trees_test.py:39:4, SCOPE: Scope{r=(), w=(test_fn,)}, BODY_SCOPE: Scope{r=(ag__.Feature.ALL, ag__, ag__.FunctionScope, test_fn_scope, ag__.ConversionOptions, f, ag__.Feature, test_fn_scope.mark_return_value), w=(test_fn_scope,)}, 'function_context_name': 'test_fn_scope'}

Offending AST:
FunctionDef:
| name=u"test_method"
| args=None
| body=[
| | With:
| | | items=[
| | | | withitem:
| | | | | context_expr=Call:
| | | | | | func=Attribute:
| | | | | | | value=Name:
| | | | | | | | id=u"ag__"
| | | | | | | | ctx=Load()
| | | | | | | | annotation=None
| | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | attr=u"FunctionScope"
| | | | | | | ctx=Load()
| | | | | | | ___pyct_anno={QN: ag__.FunctionScope}
| | | | | | args=[
| | | | | | | Str:
| | | | | | | | s=u"test_method"
| | | | | | | Str:
| | | | | | | | s=u"test_method_scope"
| | | | | | | Call:
| | | | | | | | func=Attribute:
| | | | | | | | | value=Name:
| | | | | | | | | | id=u"ag__"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | annotation=None
| | | | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | | | attr=u"ConversionOptions"
| | | | | | | | | ctx=Load()
| | | | | | | | | ___pyct_anno={QN: ag__.ConversionOptions}
| | | | | | | | args=[]
| | | | | | | | keywords=[
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"recursive"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=True
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"user_requested"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=False
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"optional_features"
| | | | | | | | | | value=Attribute:
| | | | | | | | | | | value=Attribute:
| | | | | | | | | | | | value=Name:
| | | | | | | | | | | | | id=u"ag__"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | ___pyct_anno={QN: ag__, DEFINITIONS: ()}
| | | | | | | | | | | | attr=u"Feature"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | ___pyct_anno={QN: ag__.Feature}
| | | | | | | | | | | attr=u"ALL"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | ___pyct_anno={QN: ag__.Feature.ALL}
| | | | | | | | | keyword:
| | | | | | | | | | arg=u"internal_convert_user_code"
| | | | | | | | | | value=NameConstant:
| | | | | | | | | | | value=True
| | | | | | | | ]
| | | | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(ag__.Feature.ALL, ag__.Feature, ag__), w=()}}
| | | | | | ]
| | | | | | keywords=[]
| | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(ag__.Feature.ALL, ag__.Feature, ag__, ag__.ConversionOptions), w=()}}
| | | | | optional_vars=Name:
| | | | | | id=u"test_method_scope"
| | | | | | ctx=Store()
| | | | | | annotation=None
| | | | | | ___pyct_anno={QN: test_method_scope, DEFINITIONS: (AnnotatedDef[2479730450216],)}
| | | | | ___pyct_anno={SCOPE: Scope{r=(ag__.Feature.ALL, ag__, ag__.FunctionScope, ag__.ConversionOptions, ag__.Feature), w=(test_method_scope,)}}
| | | ]
| | | body=[
| | | | Return:
| | | | | value=Call:
| | | | | | func=Attribute:
| | | | | | | value=Name:
| | | | | | | | id=u"test_method_scope"
| | | | | | | | ctx=Load()
| | | | | | | | annotation=None
| | | | | | | | ___pyct_anno={QN: test_method_scope, DEFINITIONS: (AnnotatedDef[2479730450216],)}
| | | | | | | attr=u"mark_return_value"
| | | | | | | ctx=Load()
| | | | | | | ___pyct_anno={QN: test_method_scope.mark_return_value}
| | | | | | args=[
| | | | | | | BinOp:
| | | | | | | | left=Call:
| | | | | | | | | func=Attribute:
| | | | | | | | | | value=Name:
| | | | | | | | | | | id=u"ag__"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={QN: ag__}
| | | | | | | | | | attr=u"converted_call"
| | | | | | | | | | ctx=Load()
| | | | | | | | | | ___pyct_anno={QN: ag__.converted_call}
| | | | | | | | | args=[
| | | | | | | | | | Attribute:
| | | | | | | | | | | value=Name:
| | | | | | | | | | | | id=u"self"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | annotation=None
| | | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:307:15, ORIG_DEFINITIONS: (AnnotatedDef[2479731024280],), QN: self}
| | | | | | | | | | | attr=u"other_method"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:307:15, QN: self.other_method}
| | | | | | | | | | Attribute:
| | | | | | | | | | | value=Name:
| | | | | | | | | | | | id=u"test_method_scope"
| | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | annotation=None
| | | | | | | | | | | | ___pyct_anno={QN: test_method_scope}
| | | | | | | | | | | attr=u"callopts"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | ___pyct_anno={QN: test_method_scope.callopts}
| | | | | | | | | | Tuple:
| | | | | | | | | | | elts=[
| | | | | | | | | | | | Name:
| | | | | | | | | | | | | id=u"a"
| | | | | | | | | | | | | ctx=Load()
| | | | | | | | | | | | | annotation=None
| | | | | | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:307:33, ORIG_DEFINITIONS: (AnnotatedDef[2479731026016],), QN: a}
| | | | | | | | | | | ]
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | NameConstant:
| | | | | | | | | | | value=None
| | | | | | | | | | Name:
| | | | | | | | | | | id=u"test_method_scope"
| | | | | | | | | | | ctx=Load()
| | | | | | | | | | | annotation=None
| | | | | | | | | | | ___pyct_anno={QN: test_method_scope}
| | | | | | | | | ]
| | | | | | | | | keywords=[]
| | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:307:15}
| | | | | | | | op=Add()
| | | | | | | | right=Num:
| | | | | | | | | n=300
| | | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:307:38}
| | | | | | | | ___pyct_anno={ORIGIN: call_trees_test.py:307:15}
| | | | | | ]
| | | | | | keywords=[]
| | | | | | ___pyct_anno={ARGS_SCOPE: Scope{r=(a, self.other_method, self), w=()}}
| | | | | ___pyct_anno={ORIGIN: call_trees_test.py:307:8, SCOPE: Scope{r=(a, self, self.other_method, test_method_scope.mark_return_value, test_method_scope), w=()}, LIVE_VARS_IN: frozenset({a, test_method_scope.mark_return_value, self, test_method_scope, self.other_method})}
| | | ]
| | | ___pyct_anno={BODY_SCOPE: Scope{r=(a, ag__.Feature.ALL, ag__, self, ag__.FunctionScope, self.other_method, test_method_scope.mark_return_value, ag__.ConversionOptions, test_method_scope, ag__.Feature), w=(test_method_scope,)}, LIVE_VARS_IN: frozenset({a, ag__.Feature.ALL, ag__, self, ag__.FunctionScope, self.other_method, test_method_scope.mark_return_value, ag__.ConversionOptions, ag__.Feature})}
| ]
| decorator_list=[]
| returns=None
| ___pyct_anno={'lineno': 3, ORIGIN: call_trees_test.py:305:6, SCOPE: Scope{r=(), w=(test_method,)}, BODY_SCOPE: Scope{r=(a, ag__.Feature.ALL, ag__, self, ag__.FunctionScope, self.other_method, test_method_scope.mark_return_value, ag__.ConversionOptions, test_method_scope, ag__.Feature), w=(test_method_scope,)}, 'function_context_name': 'test_method_scope'}
[  FAILED  ] CallTreesTest.test_object_method
[ RUN      ] CallTreesTest.test_session
[  SKIPPED ] CallTreesTest.test_session
======================================================================
ERROR: test_class_method (__main__.CallTreesTest)
CallTreesTest.test_class_method
----------------------------------------------------------------------
Traceback (most recent call last):
  File "call_trees_test.py", line 283, in test_class_method
    {}) as result:
  File "C:\ProgramData\Anaconda3\envs\keras\lib\contextlib.py", line 81, in __enter__
    return next(self.gen)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\core\converter_testing.py", line 105, in converted
    with self.compiled(node, namespace, tf_symbols) as result:
  File "C:\ProgramData\Anaconda3\envs\keras\lib\contextlib.py", line 81, in __enter__
    return next(self.gen)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\core\converter_testing.py", line 69, in compiled
    node, include_source_map=True)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\pyct\compiler.py", line 134, in ast_to_object
    source = ast_to_source(nodes, indentation=indentation)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\pyct\compiler.py", line 61, in ast_to_source
    generator.visit(n)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\node_util.py", line 143, in visit
    return visitor(node)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\code_gen.py", line 331, in visit_FunctionDef
    self.visit_arguments(node.args)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\code_gen.py", line 261, in visit_arguments
    loop_args(node.args, node.defaults[offset:])
AttributeError: 'NoneType' object has no attribute 'args'

======================================================================
ERROR: test_debugger_set_trace (__main__.CallTreesTest)
CallTreesTest.test_debugger_set_trace
----------------------------------------------------------------------
Traceback (most recent call last):
  File "call_trees_test.py", line 251, in test_debugger_set_trace
    {'pdb': pdb}) as result:
  File "C:\ProgramData\Anaconda3\envs\keras\lib\contextlib.py", line 81, in __enter__
    return next(self.gen)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\core\converter_testing.py", line 105, in converted
    with self.compiled(node, namespace, tf_symbols) as result:
  File "C:\ProgramData\Anaconda3\envs\keras\lib\contextlib.py", line 81, in __enter__
    return next(self.gen)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\core\converter_testing.py", line 69, in compiled
    node, include_source_map=True)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\pyct\compiler.py", line 134, in ast_to_object
    source = ast_to_source(nodes, indentation=indentation)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\pyct\compiler.py", line 61, in ast_to_source
    generator.visit(n)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\node_util.py", line 143, in visit
    return visitor(node)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\code_gen.py", line 331, in visit_FunctionDef
    self.visit_arguments(node.args)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\code_gen.py", line 261, in visit_arguments
    loop_args(node.args, node.defaults[offset:])
AttributeError: 'NoneType' object has no attribute 'args'

======================================================================
ERROR: test_function_chaining (__main__.CallTreesTest)
CallTreesTest.test_function_chaining
----------------------------------------------------------------------
Traceback (most recent call last):
  File "call_trees_test.py", line 119, in test_function_chaining
    {'get_one': get_one}, ()) as result:
  File "C:\ProgramData\Anaconda3\envs\keras\lib\contextlib.py", line 81, in __enter__
    return next(self.gen)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\core\converter_testing.py", line 105, in converted
    with self.compiled(node, namespace, tf_symbols) as result:
  File "C:\ProgramData\Anaconda3\envs\keras\lib\contextlib.py", line 81, in __enter__
    return next(self.gen)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\core\converter_testing.py", line 69, in compiled
    node, include_source_map=True)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\pyct\compiler.py", line 134, in ast_to_object
    source = ast_to_source(nodes, indentation=indentation)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\pyct\compiler.py", line 61, in ast_to_source
    generator.visit(n)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\node_util.py", line 143, in visit
    return visitor(node)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\code_gen.py", line 331, in visit_FunctionDef
    self.visit_arguments(node.args)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\code_gen.py", line 261, in visit_arguments
    loop_args(node.args, node.defaults[offset:])
AttributeError: 'NoneType' object has no attribute 'args'

======================================================================
ERROR: test_function_with_call_in_argument (__main__.CallTreesTest)
CallTreesTest.test_function_with_call_in_argument
----------------------------------------------------------------------
Traceback (most recent call last):
  File "call_trees_test.py", line 87, in test_function_with_call_in_argument
    with self.converted(test_fn, (function_scopes, call_trees), {}) as result:
  File "C:\ProgramData\Anaconda3\envs\keras\lib\contextlib.py", line 81, in __enter__
    return next(self.gen)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\core\converter_testing.py", line 105, in converted
    with self.compiled(node, namespace, tf_symbols) as result:
  File "C:\ProgramData\Anaconda3\envs\keras\lib\contextlib.py", line 81, in __enter__
    return next(self.gen)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\core\converter_testing.py", line 69, in compiled
    node, include_source_map=True)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\pyct\compiler.py", line 134, in ast_to_object
    source = ast_to_source(nodes, indentation=indentation)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\pyct\compiler.py", line 61, in ast_to_source
    generator.visit(n)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\node_util.py", line 143, in visit
    return visitor(node)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\code_gen.py", line 331, in visit_FunctionDef
    self.visit_arguments(node.args)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\code_gen.py", line 261, in visit_arguments
    loop_args(node.args, node.defaults[offset:])
AttributeError: 'NoneType' object has no attribute 'args'

======================================================================
ERROR: test_function_with_expression_in_argument (__main__.CallTreesTest)
CallTreesTest.test_function_with_expression_in_argument
----------------------------------------------------------------------
Traceback (most recent call last):
  File "call_trees_test.py", line 63, in test_function_with_expression_in_argument
    with self.converted(test_fn, (function_scopes, call_trees), {}) as result:
  File "C:\ProgramData\Anaconda3\envs\keras\lib\contextlib.py", line 81, in __enter__
    return next(self.gen)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\core\converter_testing.py", line 105, in converted
    with self.compiled(node, namespace, tf_symbols) as result:
  File "C:\ProgramData\Anaconda3\envs\keras\lib\contextlib.py", line 81, in __enter__
    return next(self.gen)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\core\converter_testing.py", line 69, in compiled
    node, include_source_map=True)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\pyct\compiler.py", line 134, in ast_to_object
    source = ast_to_source(nodes, indentation=indentation)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\pyct\compiler.py", line 61, in ast_to_source
    generator.visit(n)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\node_util.py", line 143, in visit
    return visitor(node)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\code_gen.py", line 331, in visit_FunctionDef
    self.visit_arguments(node.args)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\code_gen.py", line 261, in visit_arguments
    loop_args(node.args, node.defaults[offset:])
AttributeError: 'NoneType' object has no attribute 'args'

======================================================================
ERROR: test_function_with_kwarg (__main__.CallTreesTest)
CallTreesTest.test_function_with_kwarg
----------------------------------------------------------------------
Traceback (most recent call last):
  File "call_trees_test.py", line 147, in test_function_with_kwarg
    with self.converted(test_fn, (function_scopes, call_trees), {}) as result:
  File "C:\ProgramData\Anaconda3\envs\keras\lib\contextlib.py", line 81, in __enter__
    return next(self.gen)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\core\converter_testing.py", line 105, in converted
    with self.compiled(node, namespace, tf_symbols) as result:
  File "C:\ProgramData\Anaconda3\envs\keras\lib\contextlib.py", line 81, in __enter__
    return next(self.gen)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\core\converter_testing.py", line 69, in compiled
    node, include_source_map=True)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\pyct\compiler.py", line 134, in ast_to_object
    source = ast_to_source(nodes, indentation=indentation)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\pyct\compiler.py", line 61, in ast_to_source
    generator.visit(n)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\node_util.py", line 143, in visit
    return visitor(node)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\code_gen.py", line 331, in visit_FunctionDef
    self.visit_arguments(node.args)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\code_gen.py", line 261, in visit_arguments
    loop_args(node.args, node.defaults[offset:])
AttributeError: 'NoneType' object has no attribute 'args'

======================================================================
ERROR: test_function_with_kwargs_keywords (__main__.CallTreesTest)
CallTreesTest.test_function_with_kwargs_keywords
----------------------------------------------------------------------
Traceback (most recent call last):
  File "call_trees_test.py", line 219, in test_function_with_kwargs_keywords
    with self.converted(test_fn, (function_scopes, call_trees), {}) as result:
  File "C:\ProgramData\Anaconda3\envs\keras\lib\contextlib.py", line 81, in __enter__
    return next(self.gen)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\core\converter_testing.py", line 105, in converted
    with self.compiled(node, namespace, tf_symbols) as result:
  File "C:\ProgramData\Anaconda3\envs\keras\lib\contextlib.py", line 81, in __enter__
    return next(self.gen)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\core\converter_testing.py", line 69, in compiled
    node, include_source_map=True)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\pyct\compiler.py", line 134, in ast_to_object
    source = ast_to_source(nodes, indentation=indentation)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\pyct\compiler.py", line 61, in ast_to_source
    generator.visit(n)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\node_util.py", line 143, in visit
    return visitor(node)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\code_gen.py", line 331, in visit_FunctionDef
    self.visit_arguments(node.args)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\code_gen.py", line 261, in visit_arguments
    loop_args(node.args, node.defaults[offset:])
AttributeError: 'NoneType' object has no attribute 'args'

======================================================================
ERROR: test_function_with_kwargs_starargs (__main__.CallTreesTest)
CallTreesTest.test_function_with_kwargs_starargs
----------------------------------------------------------------------
Traceback (most recent call last):
  File "call_trees_test.py", line 165, in test_function_with_kwargs_starargs
    with self.converted(test_fn, (function_scopes, call_trees), {}) as result:
  File "C:\ProgramData\Anaconda3\envs\keras\lib\contextlib.py", line 81, in __enter__
    return next(self.gen)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\core\converter_testing.py", line 105, in converted
    with self.compiled(node, namespace, tf_symbols) as result:
  File "C:\ProgramData\Anaconda3\envs\keras\lib\contextlib.py", line 81, in __enter__
    return next(self.gen)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\core\converter_testing.py", line 69, in compiled
    node, include_source_map=True)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\pyct\compiler.py", line 134, in ast_to_object
    source = ast_to_source(nodes, indentation=indentation)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\pyct\compiler.py", line 61, in ast_to_source
    generator.visit(n)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\node_util.py", line 143, in visit
    return visitor(node)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\code_gen.py", line 331, in visit_FunctionDef
    self.visit_arguments(node.args)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\code_gen.py", line 261, in visit_arguments
    loop_args(node.args, node.defaults[offset:])
AttributeError: 'NoneType' object has no attribute 'args'

======================================================================
ERROR: test_function_with_kwargs_starargs_only (__main__.CallTreesTest)
CallTreesTest.test_function_with_kwargs_starargs_only
----------------------------------------------------------------------
Traceback (most recent call last):
  File "call_trees_test.py", line 201, in test_function_with_kwargs_starargs_only
    {'f': f}) as result:
  File "C:\ProgramData\Anaconda3\envs\keras\lib\contextlib.py", line 81, in __enter__
    return next(self.gen)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\core\converter_testing.py", line 105, in converted
    with self.compiled(node, namespace, tf_symbols) as result:
  File "C:\ProgramData\Anaconda3\envs\keras\lib\contextlib.py", line 81, in __enter__
    return next(self.gen)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\core\converter_testing.py", line 69, in compiled
    node, include_source_map=True)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\pyct\compiler.py", line 134, in ast_to_object
    source = ast_to_source(nodes, indentation=indentation)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\pyct\compiler.py", line 61, in ast_to_source
    generator.visit(n)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\node_util.py", line 143, in visit
    return visitor(node)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\code_gen.py", line 331, in visit_FunctionDef
    self.visit_arguments(node.args)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\code_gen.py", line 261, in visit_arguments
    loop_args(node.args, node.defaults[offset:])
AttributeError: 'NoneType' object has no attribute 'args'

======================================================================
ERROR: test_normal_function (__main__.CallTreesTest)
CallTreesTest.test_normal_function
----------------------------------------------------------------------
Traceback (most recent call last):
  File "call_trees_test.py", line 45, in test_normal_function
    with self.converted(test_fn, (function_scopes, call_trees), {}) as result:
  File "C:\ProgramData\Anaconda3\envs\keras\lib\contextlib.py", line 81, in __enter__
    return next(self.gen)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\core\converter_testing.py", line 105, in converted
    with self.compiled(node, namespace, tf_symbols) as result:
  File "C:\ProgramData\Anaconda3\envs\keras\lib\contextlib.py", line 81, in __enter__
    return next(self.gen)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\core\converter_testing.py", line 69, in compiled
    node, include_source_map=True)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\pyct\compiler.py", line 134, in ast_to_object
    source = ast_to_source(nodes, indentation=indentation)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\pyct\compiler.py", line 61, in ast_to_source
    generator.visit(n)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\node_util.py", line 143, in visit
    return visitor(node)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\code_gen.py", line 331, in visit_FunctionDef
    self.visit_arguments(node.args)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\code_gen.py", line 261, in visit_arguments
    loop_args(node.args, node.defaults[offset:])
AttributeError: 'NoneType' object has no attribute 'args'

======================================================================
ERROR: test_object_method (__main__.CallTreesTest)
CallTreesTest.test_object_method
----------------------------------------------------------------------
Traceback (most recent call last):
  File "call_trees_test.py", line 315, in test_object_method
    {}) as result:
  File "C:\ProgramData\Anaconda3\envs\keras\lib\contextlib.py", line 81, in __enter__
    return next(self.gen)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\core\converter_testing.py", line 105, in converted
    with self.compiled(node, namespace, tf_symbols) as result:
  File "C:\ProgramData\Anaconda3\envs\keras\lib\contextlib.py", line 81, in __enter__
    return next(self.gen)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\core\converter_testing.py", line 69, in compiled
    node, include_source_map=True)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\pyct\compiler.py", line 134, in ast_to_object
    source = ast_to_source(nodes, indentation=indentation)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\tensorflow_core\python\autograph\pyct\compiler.py", line 61, in ast_to_source
    generator.visit(n)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\node_util.py", line 143, in visit
    return visitor(node)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\code_gen.py", line 331, in visit_FunctionDef
    self.visit_arguments(node.args)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\astor\code_gen.py", line 261, in visit_arguments
    loop_args(node.args, node.defaults[offset:])
AttributeError: 'NoneType' object has no attribute 'args'

----------------------------------------------------------------------
Ran 12 tests in 1.250s

FAILED (errors=11, skipped=1)
