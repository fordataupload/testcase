[{"node type": "expr_stmt", "line number": "(29, 33)", "node content": "<ExprStmt: _XLA_SCOPE_KEY = (\"__xla_scope\",)@29,0>", "related code": "_XLA_SCOPE_KEY = (\"__xla_scope\",)\n"}, {"node type": "decorators", "line number": "(42, 0)", "node content": "PythonNode(decorators, [<Decorator: @contextlib.contextmanager@40,0>, <Decorator: @tf_export(\"xla.experimental.jit_scope\")@41,0>])", "related code": "def experimental_jit_scope(compile_ops=True, separate_compiled_gradients=False):\n"}, {"node type": "decorator", "line number": "(41, 0)", "node content": "<Decorator: @contextlib.contextmanager@40,0>", "related code": "@tf_export(\"xla.experimental.jit_scope\")\n"}, {"node type": "decorator", "line number": "(42, 0)", "node content": "<Decorator: @tf_export(\"xla.experimental.jit_scope\")@41,0>", "related code": "def experimental_jit_scope(compile_ops=True, separate_compiled_gradients=False):\n"}, {"node type": "string", "line number": "(41, 39)", "node content": "<String: \"xla.experimental.jit_scope\">", "related code": "@tf_export(\"xla.experimental.jit_scope\")\n"}, {"node type": "string", "line number": "(29, 31)", "node content": "<String: \"__xla_scope\">", "related code": "_XLA_SCOPE_KEY = (\"__xla_scope\",)\n"}, {"node type": "keyword", "line number": "(42, 43)", "node content": "<Keyword: True>", "related code": "def experimental_jit_scope(compile_ops=True, separate_compiled_gradients=False):\n"}, {"node type": "keyword", "line number": "(42, 78)", "node content": "<Keyword: False>", "related code": "def experimental_jit_scope(compile_ops=True, separate_compiled_gradients=False):\n"}, {"node type": "expr_stmt", "line number": "(103, 56)", "node content": "<ExprStmt: # Find the singleton counter for the current scoped graph.  If it   # doesn't exist, create one.   xla_scope_counter = ops.get_collection(_XLA_SCOPE_KEY)@103,2>", "related code": "  xla_scope_counter = ops.get_collection(_XLA_SCOPE_KEY)\n"}, {"node type": "not_test", "line number": "(104, 26)", "node content": "PythonNode(not_test, [<Keyword: not>, <Name: xla_scope_counter@104,9>])", "related code": "  if not xla_scope_counter:\n"}, {"node type": "expr_stmt", "line number": "(36, 22)", "node content": "<ExprStmt: self.count = count@36,4>", "related code": "    self.count = count\n"}, {"node type": "expr_stmt", "line number": "(37, 22)", "node content": "<ExprStmt: self.depth = depth@37,4>", "related code": "    self.depth = depth\n"}, {"node type": "keyword", "line number": "(104, 8)", "node content": "<Keyword: not>", "related code": "  if not xla_scope_counter:\n"}, {"node type": "operator", "line number": "(110, 31)", "node content": "<Operator: ==>", "related code": "  if xla_scope_counter.depth == 0:\n"}, {"node type": "number", "line number": "(110, 33)", "node content": "<Number: 0>", "related code": "  if xla_scope_counter.depth == 0:\n"}, {"node type": "operator", "line number": "(119, 28)", "node content": "<Operator: +=>", "related code": "  xla_scope_counter.depth += 1\n"}, {"node type": "number", "line number": "(119, 30)", "node content": "<Number: 1>", "related code": "  xla_scope_counter.depth += 1\n"}, {"node type": "operator", "line number": "(126, 28)", "node content": "<Operator: -=>", "related code": "  xla_scope_counter.depth -= 1\n"}, {"node type": "number", "line number": "(126, 30)", "node content": "<Number: 1>", "related code": "  xla_scope_counter.depth -= 1\n"}, {"node type": "expr_stmt", "line number": "(92, 57)", "node content": "<ExprStmt: xla_compile = attr_value_pb2.AttrValue(b=compile_ops)@92,4>", "related code": "    xla_compile = attr_value_pb2.AttrValue(b=compile_ops)\n"}, {"node type": "expr_stmt", "line number": "(105, 39)", "node content": "<ExprStmt: xla_scope_counter = _XlaScope(0, 0)@105,4>", "related code": "    xla_scope_counter = _XlaScope(0, 0)\n"}, {"node type": "expr_stmt", "line number": "(108, 44)", "node content": "<ExprStmt: xla_scope_counter = xla_scope_counter[0]@108,4>", "related code": "    xla_scope_counter = xla_scope_counter[0]\n"}, {"node type": "operator", "line number": "(117, 30)", "node content": "<Operator: +=>", "related code": "    xla_scope_counter.count += 1\n"}, {"node type": "number", "line number": "(117, 32)", "node content": "<Number: 1>", "related code": "    xla_scope_counter.count += 1\n"}, {"node type": "number", "line number": "(108, 43)", "node content": "<Number: 0>", "related code": "    xla_scope_counter = xla_scope_counter[0]\n"}, {"node type": "string", "line number": "(115, 21)", "node content": "<String: \"_XlaScope\">", "related code": "    attrs[\"_XlaScope\"] = attr_value_pb2.AttrValue(\n"}, {"node type": "number", "line number": "(105, 35)", "node content": "<Number: 0>", "related code": "    xla_scope_counter = _XlaScope(0, 0)\n"}, {"node type": "number", "line number": "(105, 38)", "node content": "<Number: 0>", "related code": "    xla_scope_counter = _XlaScope(0, 0)\n"}]
