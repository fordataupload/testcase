[{"node type": "expr_stmt", "line number": "(578, 48)", "node content": "<ExprStmt: node = ControlFlowTransformer(ctx).visit(node)@578,2>", "related code": "  node = ControlFlowTransformer(ctx).visit(node)\n"}, {"node type": "not_test", "line number": "(39, 18)", "node content": "PythonNode(not_test, [<Keyword: not>, <Name: returns@39,11>])", "related code": "    if not returns:\n"}, {"node type": "not_test", "line number": "(115, 21)", "node content": "PythonNode(not_test, [<Keyword: not>, <Name: symbol_set@115,11>])", "related code": "    if not symbol_set:\n"}, {"node type": "expr_stmt", "line number": "(125, 68)", "node content": "<ExprStmt: modified_live = scope.modified & node_defined_in & block_live_in@125,4>", "related code": "    modified_live = scope.modified & node_defined_in & block_live_in\n"}, {"node type": "expr_stmt", "line number": "(161, 20)", "node content": "<ExprStmt: assignments = []@161,4>", "related code": "    assignments = []\n"}, {"node type": "expr_stmt", "line number": "(173, 62)", "node content": "<ExprStmt: body_scope = anno.getanno(node, annos.NodeAnno.BODY_SCOPE)@173,4>", "related code": "    body_scope = anno.getanno(node, annos.NodeAnno.BODY_SCOPE)\n"}, {"node type": "expr_stmt", "line number": "(174, 66)", "node content": "<ExprStmt: orelse_scope = anno.getanno(node, annos.NodeAnno.ORELSE_SCOPE)@174,4>", "related code": "    orelse_scope = anno.getanno(node, annos.NodeAnno.ORELSE_SCOPE)\n"}, {"node type": "expr_stmt", "line number": "(175, 64)", "node content": "<ExprStmt: defined_in = anno.getanno(node, anno.Static.DEFINED_VARS_IN)@175,4>", "related code": "    defined_in = anno.getanno(node, anno.Static.DEFINED_VARS_IN)\n"}, {"node type": "expr_stmt", "line number": "(176, 60)", "node content": "<ExprStmt: live_out = anno.getanno(node, anno.Static.LIVE_VARS_OUT)@176,4>", "related code": "    live_out = anno.getanno(node, anno.Static.LIVE_VARS_OUT)\n"}, {"node type": "expr_stmt", "line number": "(182, 42)", "node content": "<ExprStmt: # Note: this information needs to be extracted before the body conversion     # that happens in the call to generic_visit below, because the conversion     # generates nodes that lack static analysis annotations.     need_alias_in_body = self._determine_aliased_symbols(         body_scope, defined_in, node.body)@181,4>", "related code": "        body_scope, defined_in, node.body)\n"}, {"node type": "expr_stmt", "line number": "(184, 46)", "node content": "<ExprStmt: need_alias_in_orelse = self._determine_aliased_symbols(         orelse_scope, defined_in, node.orelse)@183,4>", "related code": "        orelse_scope, defined_in, node.orelse)\n"}, {"node type": "expr_stmt", "line number": "(186, 35)", "node content": "<ExprStmt: node = self.generic_visit(node)@186,4>", "related code": "    node = self.generic_visit(node)\n"}, {"node type": "expr_stmt", "line number": "(188, 66)", "node content": "<ExprStmt: modified_in_cond = body_scope.modified | orelse_scope.modified@188,4>", "related code": "    modified_in_cond = body_scope.modified | orelse_scope.modified\n"}, {"node type": "expr_stmt", "line number": "(189, 30)", "node content": "<ExprStmt: returned_from_cond = set()@189,4>", "related code": "    returned_from_cond = set()\n"}, {"node type": "expr_stmt", "line number": "(190, 22)", "node content": "<ExprStmt: composites = set()@190,4>", "related code": "    composites = set()\n"}, {"node type": "expr_stmt", "line number": "(201, 75)", "node content": "<ExprStmt: created_in_body = body_scope.modified & returned_from_cond - defined_in@201,4>", "related code": "    created_in_body = body_scope.modified & returned_from_cond - defined_in\n"}, {"node type": "keyword", "line number": "(39, 10)", "node content": "<Keyword: not>", "related code": "    if not returns:\n"}, {"node type": "operator", "line number": "(45, 24)", "node content": "<Operator: ==>", "related code": "    elif len(returns) == 1:\n"}, {"node type": "number", "line number": "(45, 26)", "node content": "<Number: 1>", "related code": "    elif len(returns) == 1:\n"}, {"node type": "keyword", "line number": "(115, 10)", "node content": "<Keyword: not>", "related code": "    if not symbol_set:\n"}, {"node type": "operator", "line number": "(361, 24)", "node content": "<Operator: ==>", "related code": "    if len(loop_vars) == 1:\n"}, {"node type": "number", "line number": "(361, 26)", "node content": "<Number: 1>", "related code": "    if len(loop_vars) == 1:\n"}, {"node type": "keyword", "line number": "(82, 21)", "node content": "<Keyword: not>", "related code": "    if results is not None:\n"}, {"node type": "string", "line number": "(117, 15)", "node content": "<String: ', '>", "related code": "    return ', '.join(map(str, symbol_set))\n"}, {"node type": "operator", "line number": "(125, 36)", "node content": "<Operator: &>", "related code": "    modified_live = scope.modified & node_defined_in & block_live_in\n"}, {"node type": "operator", "line number": "(125, 54)", "node content": "<Operator: &>", "related code": "    modified_live = scope.modified & node_defined_in & block_live_in\n"}, {"node type": "operator", "line number": "(188, 44)", "node content": "<Operator: |>", "related code": "    modified_in_cond = body_scope.modified | orelse_scope.modified\n"}, {"node type": "and_test", "line number": "(192, 47)", "node content": "PythonNode(and_test, [PythonNode(comparison, [<Name: s@192,9>, <Keyword: in>, <Name: live_out@192,14>]), <Keyword: and>, PythonNode(not_test, [<Keyword: not>, PythonNode(atom_expr, [<Name: s@192,31>, PythonNode(trailer, [<Operator: .>, <Name: is_composite@192,33>]), PythonNode(trailer, [<Operator: (>, <Operator: )>])])])])", "related code": "      if s in live_out and not s.is_composite():\n"}, {"node type": "operator", "line number": "(201, 43)", "node content": "<Operator: &>", "related code": "    created_in_body = body_scope.modified & returned_from_cond - defined_in\n"}, {"node type": "operator", "line number": "(202, 47)", "node content": "<Operator: &>", "related code": "    created_in_orelse = orelse_scope.modified & returned_from_cond - defined_in\n"}, {"node type": "operator", "line number": "(238, 44)", "node content": "<Operator: |>", "related code": "    all_referenced = body_scope.referenced | orelse_scope.referenced\n"}, {"node type": "and_test", "line number": "(313, 47)", "node content": "PythonNode(and_test, [PythonNode(comparison, [<Name: s@313,9>, PythonNode(comp_op, [<Keyword: not>, <Keyword: in>]), <Name: live_in@313,18>]), <Keyword: and>, PythonNode(comparison, [<Name: s@313,30>, PythonNode(comp_op, [<Keyword: not>, <Keyword: in>]), <Name: live_out@313,39>])])", "related code": "      if s not in live_in and s not in live_out:\n"}, {"node type": "not_test", "line number": "(322, 29)", "node content": "PythonNode(not_test, [<Keyword: not>, PythonNode(atom_expr, [<Name: s@322,13>, PythonNode(trailer, [<Operator: .>, <Name: is_composite@322,15>]), PythonNode(trailer, [<Operator: (>, <Operator: )>])])])", "related code": "      if not s.is_composite():\n"}, {"node type": "not_test", "line number": "(332, 53)", "node content": "PythonNode(not_test, [<Keyword: not>, PythonNode(atom_expr, [<Name: all@332,13>, PythonNode(trailer, [<Operator: (>, PythonNode(argument, [PythonNode(comparison, [<Name: p@332,17>, <Keyword: in>, <Name: live_in@332,22>]), <SyncCompFor: for p in s.support_set@332,30>]), <Operator: )>])])])", "related code": "      if not all(p in live_in for p in s.support_set):\n"}, {"node type": "operator", "line number": "(352, 39)", "node content": "<Operator: ->", "related code": "    undefined_lives = basic_loop_vars - defined_in\n"}, {"node type": "operator", "line number": "(448, 30)", "node content": "<Operator: +>", "related code": "    return undefined_assigns + node\n"}, {"node type": "operator", "line number": "(166, 20)", "node content": "<Operator: +=>", "related code": "      assignments += templates.replace(\n"}, {"node type": "not_test", "line number": "(192, 47)", "node content": "PythonNode(not_test, [<Keyword: not>, PythonNode(atom_expr, [<Name: s@192,31>, PythonNode(trailer, [<Operator: .>, <Name: is_composite@192,33>]), PythonNode(trailer, [<Operator: (>, <Operator: )>])])])", "related code": "      if s in live_out and not s.is_composite():\n"}, {"node type": "operator", "line number": "(201, 64)", "node content": "<Operator: ->", "related code": "    created_in_body = body_scope.modified & returned_from_cond - defined_in\n"}, {"node type": "operator", "line number": "(202, 68)", "node content": "<Operator: ->", "related code": "    created_in_orelse = orelse_scope.modified & returned_from_cond - defined_in\n"}, {"node type": "operator", "line number": "(212, 54)", "node content": "<Operator: ^>", "related code": "    possibly_undefined = (set(basic_created_in_body) ^\n"}, {"node type": "operator", "line number": "(246, 35)", "node content": "<Operator: ==>", "related code": "      if len(returned_from_cond) == 1:\n"}, {"node type": "number", "line number": "(246, 37)", "node content": "<Number: 1>", "related code": "      if len(returned_from_cond) == 1:\n"}, {"node type": "keyword", "line number": "(322, 12)", "node content": "<Keyword: not>", "related code": "      if not s.is_composite():\n"}, {"node type": "keyword", "line number": "(332, 12)", "node content": "<Keyword: not>", "related code": "      if not all(p in live_in for p in s.support_set):\n"}, {"node type": "string", "line number": "(466, 38)", "node content": "<String: 'extra_test'>", "related code": "    if anno.hasanno(node, 'extra_test'):\n"}, {"node type": "keyword", "line number": "(127, 22)", "node content": "<Keyword: in>", "related code": "    return {s for s in modified_live if not s.is_composite()}\n"}, {"node type": "keyword", "line number": "(192, 13)", "node content": "<Keyword: in>", "related code": "      if s in live_out and not s.is_composite():\n"}, {"node type": "keyword", "line number": "(192, 30)", "node content": "<Keyword: not>", "related code": "      if s in live_out and not s.is_composite():\n"}, {"node type": "string", "line number": "(235, 52)", "node content": "<String: 'cond'>", "related code": "    cond_var_name = self.ctx.namer.new_symbol('cond', body_scope.referenced)\n"}]
