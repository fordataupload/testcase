[{"node type": "expr_stmt", "line number": "(533, 18)", "node content": "<ExprStmt: # Next we combine the dimensions according to the numpy broadcasting rules.   # http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html   return_dims = []@533,2>", "related code": "  return_dims = []\n"}, {"node type": "or_test", "line number": "(573, 51)", "node content": "PythonNode(or_test, [PythonNode(comparison, [PythonNode(atom_expr, [<Name: shape_x@573,5>, PythonNode(trailer, [<Operator: .>, <Name: ndims@573,13>])]), <Keyword: is>, <Keyword: None>]), <Keyword: or>, PythonNode(comparison, [PythonNode(atom_expr, [<Name: shape_y@573,30>, PythonNode(trailer, [<Operator: .>, <Name: ndims@573,38>])]), <Keyword: is>, <Keyword: None>])])", "related code": "  if shape_x.ndims is None or shape_y.ndims is None:\n"}, {"node type": "or_test", "line number": "(591, 51)", "node content": "PythonNode(or_test, [PythonNode(comparison, [PythonNode(atom_expr, [<Name: shape_x@591,5>, PythonNode(trailer, [<Operator: .>, <Name: ndims@591,13>])]), <Keyword: is>, <Keyword: None>]), <Keyword: or>, PythonNode(comparison, [PythonNode(atom_expr, [<Name: shape_y@591,30>, PythonNode(trailer, [<Operator: .>, <Name: ndims@591,38>])]), <Keyword: is>, <Keyword: None>])])", "related code": "  if shape_x.ndims is None or shape_y.ndims is None:\n"}, {"node type": "expr_stmt", "line number": "(593, 57)", "node content": "<ExprStmt: return_dims = _broadcast_shape_helper(shape_x, shape_y)@593,2>", "related code": "  return_dims = _broadcast_shape_helper(shape_x, shape_y)\n"}, {"node type": "keyword", "line number": "(600, 47)", "node content": "<Keyword: True>", "related code": "def call_cpp_shape_fn(op, require_shape_fn=True):\n"}, {"node type": "keyword", "line number": "(594, 19)", "node content": "<Keyword: is>", "related code": "  if return_dims is None:\n"}, {"node type": "or_test", "line number": "(535, 49)", "node content": "PythonNode(or_test, [PythonNode(comparison, [PythonNode(atom_expr, [<Name: dim_x@535,7>, PythonNode(trailer, [<Operator: .>, <Name: value@535,13>])]), <Keyword: is>, <Keyword: None>]), <Keyword: or>, PythonNode(comparison, [PythonNode(atom_expr, [<Name: dim_y@535,30>, PythonNode(trailer, [<Operator: .>, <Name: value@535,36>])]), <Keyword: is>, <Keyword: None>])])", "related code": "    if dim_x.value is None or dim_y.value is None:\n"}, {"node type": "keyword", "line number": "(573, 21)", "node content": "<Keyword: is>", "related code": "  if shape_x.ndims is None or shape_y.ndims is None:\n"}, {"node type": "keyword", "line number": "(573, 46)", "node content": "<Keyword: is>", "related code": "  if shape_x.ndims is None or shape_y.ndims is None:\n"}, {"node type": "keyword", "line number": "(591, 21)", "node content": "<Keyword: is>", "related code": "  if shape_x.ndims is None or shape_y.ndims is None:\n"}, {"node type": "keyword", "line number": "(591, 46)", "node content": "<Keyword: is>", "related code": "  if shape_x.ndims is None or shape_y.ndims is None:\n"}, {"node type": "operator", "line number": "(547, 23)", "node content": "<Operator: ==>", "related code": "    elif dim_x.value == 1:\n"}, {"node type": "number", "line number": "(547, 25)", "node content": "<Number: 1>", "related code": "    elif dim_x.value == 1:\n"}, {"node type": "operator", "line number": "(550, 23)", "node content": "<Operator: ==>", "related code": "    elif dim_y.value == 1:\n"}, {"node type": "number", "line number": "(550, 25)", "node content": "<Number: 1>", "related code": "    elif dim_y.value == 1:\n"}, {"node type": "operator", "line number": "(553, 23)", "node content": "<Operator: ==>", "related code": "    elif dim_x.value == dim_y.value:\n"}, {"node type": "keyword", "line number": "(575, 57)", "node content": "<Keyword: not>", "related code": "  return _broadcast_shape_helper(shape_x, shape_y) is not None\n"}, {"node type": "keyword", "line number": "(535, 21)", "node content": "<Keyword: is>", "related code": "    if dim_x.value is None or dim_y.value is None:\n"}, {"node type": "keyword", "line number": "(535, 44)", "node content": "<Keyword: is>", "related code": "    if dim_x.value is None or dim_y.value is None:\n"}, {"node type": "operator", "line number": "(541, 50)", "node content": "<Operator: >>", "related code": "      if dim_x.value is not None and dim_x.value > 1:\n"}, {"node type": "number", "line number": "(541, 52)", "node content": "<Number: 1>", "related code": "      if dim_x.value is not None and dim_x.value > 1:\n"}, {"node type": "operator", "line number": "(543, 52)", "node content": "<Operator: >>", "related code": "      elif dim_y.value is not None and dim_y.value > 1:\n"}, {"node type": "number", "line number": "(543, 54)", "node content": "<Number: 1>", "related code": "      elif dim_y.value is not None and dim_y.value > 1:\n"}, {"node type": "string", "line number": "(595, 70)", "node content": "<String: \"Incompatible shapes for broadcasting: %s and %s\">", "related code": "    raise ValueError(\"Incompatible shapes for broadcasting: %s and %s\"\n"}, {"node type": "keyword", "line number": "(541, 27)", "node content": "<Keyword: not>", "related code": "      if dim_x.value is not None and dim_x.value > 1:\n"}, {"node type": "keyword", "line number": "(543, 29)", "node content": "<Keyword: not>", "related code": "      elif dim_y.value is not None and dim_y.value > 1:\n"}]
