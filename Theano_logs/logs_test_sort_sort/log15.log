F........C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\sort.py:293: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  zi = np.argpartition(x, -k, axis=axis)[idx]
....................................................................................................................................................................................................................................................................................................................................................................................................................C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\sort.py:285: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  zi = np.argpartition(x, -k, axis=axis)[idx]
...........................................................................................................................................................................................................................................................................................................................................C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\sort.py:282: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  zv = np.partition(x, -k, axis=axis)[idx]
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\sort.py:285: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  zi = np.argpartition(x, -k, axis=axis)[idx]
......C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\sort.py:282: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  zv = np.partition(x, -k, axis=axis)[idx]
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\sort.py:285: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  zi = np.argpartition(x, -k, axis=axis)[idx]
......C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\sort.py:282: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  zv = np.partition(x, -k, axis=axis)[idx]
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\sort.py:285: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  zi = np.argpartition(x, -k, axis=axis)[idx]
......C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\sort.py:282: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  zv = np.partition(x, -k, axis=axis)[idx]
C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\sort.py:285: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  zi = np.argpartition(x, -k, axis=axis)[idx]
..........................................................................................................................FWARNING (theano.tensor.opt): Failed to infer_shape from Op SortOp{quicksort, None}.
Input shapes: [(Shape_i{0}.0, Shape_i{1}.0), ()]
Exception encountered during infer_shape: <class 'AttributeError'>
Exception message: 'TensorVariable' object has no attribute 'data'
Traceback: Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 946, in get_node_infer_shape
    [self.shape_of[r] for r in node.inputs])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\sort.py", line 56, in infer_shape
    if _variable_is_none(node.inputs[1]):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\sort.py", line 10, in _variable_is_none
    return isinstance(var, theano.Constant) or var.data is None
AttributeError: 'TensorVariable' object has no attribute 'data'

..WARNING (theano.tensor.opt): Failed to infer_shape from Op SortOp{mergesort, None}.
Input shapes: [(Shape_i{0}.0, Shape_i{1}.0), ()]
Exception encountered during infer_shape: <class 'AttributeError'>
Exception message: 'TensorVariable' object has no attribute 'data'
Traceback: Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 946, in get_node_infer_shape
    [self.shape_of[r] for r in node.inputs])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\sort.py", line 56, in infer_shape
    if _variable_is_none(node.inputs[1]):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\sort.py", line 10, in _variable_is_none
    return isinstance(var, theano.Constant) or var.data is None
AttributeError: 'TensorVariable' object has no attribute 'data'

...FFF.FFF..C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\sort.py:285: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  zi = np.argpartition(x, -k, axis=axis)[idx]
............C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\sort.py:285: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  zi = np.argpartition(x, -k, axis=axis)[idx]
....C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\sort.py:285: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
  zi = np.argpartition(x, -k, axis=axis)[idx]
...
======================================================================
FAIL: test_sort (test_sort.SortInferShapeTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_sort.py", line 153, in test_sort
    SortOp)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tests\unittest_tools.py", line 260, in _compile_and_check
    outputs_function = theano.function(inputs, outputs, mode=mode)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function.py", line 317, in function
    output_keys=output_keys)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\pfunc.py", line 486, in pfunc
    output_keys=output_keys)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 1839, in orig_function
    name=name)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 1519, in __init__
    optimizer_profile = optimizer(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 108, in __call__
    return self.optimize(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 97, in optimize
    ret = self.apply(fgraph, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 251, in apply
    sub_prof = optimizer.optimize(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 93, in optimize
    self.add_requirements(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1488, in add_requirements
    fgraph.attach_feature(ShapeFeature())
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\fg.py", line 546, in attach_feature
    attach(self)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1305, in on_attach
    self.on_import(fgraph, node, reason='on_attach')
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1368, in on_import
    self.set_shape(r, s)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1149, in set_shape
    len(s), r.ndim, sio.getvalue()))
AssertionError: Something inferred a shape with 1 dimensions for a variable with 2 dimensions for the variable:
SortOp{quicksort, None} [id A] <TensorType(float64, matrix)> ''   
 |<TensorType(float64, matrix)> [id B] <TensorType(float64, matrix)>
 |TensorConstant{-1} [id C] <TensorType(int8, scalar)>


======================================================================
FAIL: test1 (test_sort.Test_sort)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_sort.py", line 35, in test1
    f = theano.function([a], w)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function.py", line 317, in function
    output_keys=output_keys)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\pfunc.py", line 486, in pfunc
    output_keys=output_keys)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 1839, in orig_function
    name=name)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 1519, in __init__
    optimizer_profile = optimizer(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 108, in __call__
    return self.optimize(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 97, in optimize
    ret = self.apply(fgraph, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 251, in apply
    sub_prof = optimizer.optimize(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 93, in optimize
    self.add_requirements(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1488, in add_requirements
    fgraph.attach_feature(ShapeFeature())
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\fg.py", line 546, in attach_feature
    attach(self)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1305, in on_attach
    self.on_import(fgraph, node, reason='on_attach')
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1368, in on_import
    self.set_shape(r, s)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1149, in set_shape
    len(s), r.ndim, sio.getvalue()))
AssertionError: Something inferred a shape with 1 dimensions for a variable with 2 dimensions for the variable:
SortOp{quicksort, None} [id A] <TensorType(float64, matrix)> ''   
 |<TensorType(float64, matrix)> [id B] <TensorType(float64, matrix)>
 |TensorConstant{-1} [id C] <TensorType(int8, scalar)>


======================================================================
FAIL: test_grad_negative_axis_2d (test_sort.Test_sort)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_sort.py", line 99, in test_grad_negative_axis_2d
    utt.verify_grad(lambda x: sort(x, -1), [data])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tests\unittest_tools.py", line 92, in verify_grad
    T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gradient.py", line 1737, in verify_grad
    o_fn = function(tensor_pt, o_output, name='gradient.py fwd')
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gradient.py", line 1718, in function
    on_unused_input='ignore', name=name)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function.py", line 317, in function
    output_keys=output_keys)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\pfunc.py", line 486, in pfunc
    output_keys=output_keys)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 1839, in orig_function
    name=name)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 1519, in __init__
    optimizer_profile = optimizer(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 108, in __call__
    return self.optimize(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 97, in optimize
    ret = self.apply(fgraph, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 251, in apply
    sub_prof = optimizer.optimize(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 93, in optimize
    self.add_requirements(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1488, in add_requirements
    fgraph.attach_feature(ShapeFeature())
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\fg.py", line 546, in attach_feature
    attach(self)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1305, in on_attach
    self.on_import(fgraph, node, reason='on_attach')
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1368, in on_import
    self.set_shape(r, s)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1149, in set_shape
    len(s), r.ndim, sio.getvalue()))
AssertionError: Something inferred a shape with 1 dimensions for a variable with 2 dimensions for the variable:
SortOp{quicksort, None} [id A] <TensorType(float64, matrix)> ''   
 |input 0 [id B] <TensorType(float64, matrix)>
 |TensorConstant{-1} [id C] <TensorType(int8, scalar)>


======================================================================
FAIL: test_grad_negative_axis_3d (test_sort.Test_sort)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_sort.py", line 105, in test_grad_negative_axis_3d
    utt.verify_grad(lambda x: sort(x, -1), [data])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tests\unittest_tools.py", line 92, in verify_grad
    T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gradient.py", line 1737, in verify_grad
    o_fn = function(tensor_pt, o_output, name='gradient.py fwd')
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gradient.py", line 1718, in function
    on_unused_input='ignore', name=name)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function.py", line 317, in function
    output_keys=output_keys)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\pfunc.py", line 486, in pfunc
    output_keys=output_keys)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 1839, in orig_function
    name=name)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 1519, in __init__
    optimizer_profile = optimizer(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 108, in __call__
    return self.optimize(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 97, in optimize
    ret = self.apply(fgraph, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 251, in apply
    sub_prof = optimizer.optimize(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 93, in optimize
    self.add_requirements(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1488, in add_requirements
    fgraph.attach_feature(ShapeFeature())
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\fg.py", line 546, in attach_feature
    attach(self)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1305, in on_attach
    self.on_import(fgraph, node, reason='on_attach')
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1368, in on_import
    self.set_shape(r, s)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1149, in set_shape
    len(s), r.ndim, sio.getvalue()))
AssertionError: Something inferred a shape with 1 dimensions for a variable with 3 dimensions for the variable:
SortOp{quicksort, None} [id A] <TensorType(float64, 3D)> ''   
 |input 0 [id B] <TensorType(float64, 3D)>
 |TensorConstant{-1} [id C] <TensorType(int8, scalar)>


======================================================================
FAIL: test_grad_negative_axis_4d (test_sort.Test_sort)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_sort.py", line 113, in test_grad_negative_axis_4d
    utt.verify_grad(lambda x: sort(x, -1), [data])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tests\unittest_tools.py", line 92, in verify_grad
    T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gradient.py", line 1737, in verify_grad
    o_fn = function(tensor_pt, o_output, name='gradient.py fwd')
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gradient.py", line 1718, in function
    on_unused_input='ignore', name=name)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function.py", line 317, in function
    output_keys=output_keys)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\pfunc.py", line 486, in pfunc
    output_keys=output_keys)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 1839, in orig_function
    name=name)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 1519, in __init__
    optimizer_profile = optimizer(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 108, in __call__
    return self.optimize(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 97, in optimize
    ret = self.apply(fgraph, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 251, in apply
    sub_prof = optimizer.optimize(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 93, in optimize
    self.add_requirements(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1488, in add_requirements
    fgraph.attach_feature(ShapeFeature())
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\fg.py", line 546, in attach_feature
    attach(self)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1305, in on_attach
    self.on_import(fgraph, node, reason='on_attach')
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1368, in on_import
    self.set_shape(r, s)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1149, in set_shape
    len(s), r.ndim, sio.getvalue()))
AssertionError: Something inferred a shape with 1 dimensions for a variable with 4 dimensions for the variable:
SortOp{quicksort, None} [id A] <TensorType(float64, 4D)> ''   
 |input 0 [id B] <TensorType(float64, 4D)>
 |TensorConstant{-1} [id C] <TensorType(int8, scalar)>


======================================================================
FAIL: test_grad_nonnegative_axis_2d (test_sort.Test_sort)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_sort.py", line 123, in test_grad_nonnegative_axis_2d
    utt.verify_grad(lambda x: sort(x, 0), [data])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tests\unittest_tools.py", line 92, in verify_grad
    T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gradient.py", line 1737, in verify_grad
    o_fn = function(tensor_pt, o_output, name='gradient.py fwd')
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gradient.py", line 1718, in function
    on_unused_input='ignore', name=name)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function.py", line 317, in function
    output_keys=output_keys)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\pfunc.py", line 486, in pfunc
    output_keys=output_keys)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 1839, in orig_function
    name=name)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 1519, in __init__
    optimizer_profile = optimizer(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 108, in __call__
    return self.optimize(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 97, in optimize
    ret = self.apply(fgraph, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 251, in apply
    sub_prof = optimizer.optimize(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 93, in optimize
    self.add_requirements(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1488, in add_requirements
    fgraph.attach_feature(ShapeFeature())
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\fg.py", line 546, in attach_feature
    attach(self)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1305, in on_attach
    self.on_import(fgraph, node, reason='on_attach')
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1368, in on_import
    self.set_shape(r, s)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1149, in set_shape
    len(s), r.ndim, sio.getvalue()))
AssertionError: Something inferred a shape with 1 dimensions for a variable with 2 dimensions for the variable:
SortOp{quicksort, None} [id A] <TensorType(float64, matrix)> ''   
 |input 0 [id B] <TensorType(float64, matrix)>
 |TensorConstant{0} [id C] <TensorType(int8, scalar)>


======================================================================
FAIL: test_grad_nonnegative_axis_3d (test_sort.Test_sort)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_sort.py", line 129, in test_grad_nonnegative_axis_3d
    utt.verify_grad(lambda x: sort(x, 0), [data])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tests\unittest_tools.py", line 92, in verify_grad
    T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gradient.py", line 1737, in verify_grad
    o_fn = function(tensor_pt, o_output, name='gradient.py fwd')
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gradient.py", line 1718, in function
    on_unused_input='ignore', name=name)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function.py", line 317, in function
    output_keys=output_keys)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\pfunc.py", line 486, in pfunc
    output_keys=output_keys)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 1839, in orig_function
    name=name)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 1519, in __init__
    optimizer_profile = optimizer(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 108, in __call__
    return self.optimize(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 97, in optimize
    ret = self.apply(fgraph, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 251, in apply
    sub_prof = optimizer.optimize(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 93, in optimize
    self.add_requirements(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1488, in add_requirements
    fgraph.attach_feature(ShapeFeature())
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\fg.py", line 546, in attach_feature
    attach(self)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1305, in on_attach
    self.on_import(fgraph, node, reason='on_attach')
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1368, in on_import
    self.set_shape(r, s)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1149, in set_shape
    len(s), r.ndim, sio.getvalue()))
AssertionError: Something inferred a shape with 1 dimensions for a variable with 3 dimensions for the variable:
SortOp{quicksort, None} [id A] <TensorType(float64, 3D)> ''   
 |input 0 [id B] <TensorType(float64, 3D)>
 |TensorConstant{0} [id C] <TensorType(int8, scalar)>


======================================================================
FAIL: test_grad_nonnegative_axis_4d (test_sort.Test_sort)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_sort.py", line 137, in test_grad_nonnegative_axis_4d
    utt.verify_grad(lambda x: sort(x, 0), [data])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tests\unittest_tools.py", line 92, in verify_grad
    T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gradient.py", line 1737, in verify_grad
    o_fn = function(tensor_pt, o_output, name='gradient.py fwd')
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gradient.py", line 1718, in function
    on_unused_input='ignore', name=name)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function.py", line 317, in function
    output_keys=output_keys)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\pfunc.py", line 486, in pfunc
    output_keys=output_keys)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 1839, in orig_function
    name=name)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 1519, in __init__
    optimizer_profile = optimizer(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 108, in __call__
    return self.optimize(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 97, in optimize
    ret = self.apply(fgraph, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 251, in apply
    sub_prof = optimizer.optimize(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\opt.py", line 93, in optimize
    self.add_requirements(fgraph)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1488, in add_requirements
    fgraph.attach_feature(ShapeFeature())
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\fg.py", line 546, in attach_feature
    attach(self)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1305, in on_attach
    self.on_import(fgraph, node, reason='on_attach')
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1368, in on_import
    self.set_shape(r, s)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\opt.py", line 1149, in set_shape
    len(s), r.ndim, sio.getvalue()))
AssertionError: Something inferred a shape with 1 dimensions for a variable with 4 dimensions for the variable:
SortOp{quicksort, None} [id A] <TensorType(float64, 4D)> ''   
 |input 0 [id B] <TensorType(float64, 4D)>
 |TensorConstant{0} [id C] <TensorType(int8, scalar)>


----------------------------------------------------------------------
Ran 918 tests in 48.978s

FAILED (failures=8)
