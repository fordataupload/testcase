EEEEEE..........EEE.......EEE..F..FFEEE
======================================================================
ERROR: test_fwd (test_abstract_conv.Grouped_conv3d_noOptim)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 3009, in perform
    num_groups=self.num_groups)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2267, in conv
    im0, ...], mode)
ValueError: operands could not be broadcast together with shapes (3,3,3) (5,5,5) (3,3,3) 

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 1546, in test_fwd
    eps=1)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tests\unittest_tools.py", line 92, in verify_grad
    T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gradient.py", line 1780, in verify_grad
    analytic_grad = grad_fn(*[p.copy() for p in pt])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 917, in __call__
    storage_map=getattr(self.fn, 'storage_map', None))
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\link.py", line 325, in raise_with_op
    reraise(exc_type, exc_value, exc_trace)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\six.py", line 702, in reraise
    raise value.with_traceback(tb)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 3009, in perform
    num_groups=self.num_groups)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2267, in conv
    im0, ...], mode)
ValueError: ('operands could not be broadcast together with shapes (3,3,3) (5,5,5) (3,3,3) \nApply node that caused the error: AbstractConv3d_gradInputs{convdim=3, border_mode=\'valid\', subsample=(1, 1, 1), filter_flip=True, imshp=(None, None, None, None, None), kshp=(None, None, None, None, None), filter_dilation=(1, 1, 1), num_groups=3, unshared=False}(input 1, Elemwise{mul}.0, Subtensor{int64::}.0)\nToposort index: 9\nInputs types: [TensorType(float64, 5D), TensorType(float64, 5D), TensorType(int64, vector)]\nInputs shapes: [(3, 2, 3, 3, 3), (2, 3, 3, 3, 3), (3,)]\nInputs strides: [(432, 216, 72, 24, 8), (648, 216, 72, 24, 8), (8,)]\nInputs values: [\'not shown\', \'not shown\', array([5, 5, 5], dtype=int64)]\nOutputs clients: [[\'output\']]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "C:\\Users\\mutation\\Desktop\\theano-testcase\\tests\\test_abstract_conv.py", line 1546, in test_fwd\n    eps=1)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\tests\\unittest_tools.py", line 92, in verify_grad\n    T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1770, in verify_grad\n    disconnected_inputs=\'ignore\')\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 605, in grad\n    grad_dict, wrt, cost_name)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1371, in _populate_grad_dict\n    rval = [access_grad_cache(elem) for elem in wrt]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1371, in <listcomp>\n    rval = [access_grad_cache(elem) for elem in wrt]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1326, in access_grad_cache\n    term = access_term_cache(node)[idx]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1162, in access_term_cache\n    new_output_grads)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.', '\nThe error happened with the following inputs:', [array([[[[[6.28458822e-01, 4.76862660e-01, 4.82318108e-01,
           6.70877892e-01, 6.62281097e-01],
          [1.17547279e-01, 6.87864256e-01, 8.66149750e-01,
           2.40881939e-01, 9.56913690e-01],
          [8.15139694e-01, 5.93147863e-02, 6.77581988e-01,
           2.65423071e-01, 8.66253588e-01],
          [5.74416418e-01, 9.43640435e-01, 2.53493112e-01,
           7.24476894e-01, 1.66948472e-01],
          [3.01261468e-01, 9.13516480e-01, 2.89836055e-01,
           8.86356308e-01, 7.33700383e-01]],

         [[5.54653552e-01, 3.00853956e-01, 4.66776091e-01,
           9.85884803e-01, 7.65982716e-01],
          [8.19942340e-01, 8.94755227e-01, 9.48221953e-01,
           1.66399507e-01, 4.72794422e-01],
          [5.76576509e-01, 1.52187045e-01, 5.91547950e-01,
           7.56654693e-01, 1.45718102e-01],
          [4.11767789e-01, 9.74585673e-01, 9.17887072e-01,
           5.14609677e-01, 7.61982771e-01],
          [5.15369642e-01, 7.68299658e-01, 3.77234302e-01,
           6.35680611e-01, 4.21280195e-01]],

         [[4.91413455e-01, 5.26826390e-01, 7.65412861e-01,
           9.01399330e-01, 1.03568797e-01],
          [9.96534068e-01, 1.40507424e-01, 2.99885983e-02,
           9.30900307e-01, 5.80550415e-01],
          [9.37113287e-01, 3.05556675e-01, 4.91851570e-01,
           2.50889789e-01, 8.30260081e-01],
          [5.05891387e-01, 2.53232390e-01, 8.11124532e-02,
           2.32468209e-01, 4.19993246e-01],
          [1.63940843e-01, 2.59867211e-01, 8.07140985e-01,
           7.31634058e-01, 6.74898625e-01]],

         [[1.46344678e-01, 5.46329487e-01, 9.92278053e-01,
           7.42313466e-01, 1.48363947e-01],
          [5.80229647e-01, 2.44885913e-01, 2.70960839e-01,
           3.52639200e-01, 1.17475855e-01],
          [3.74817467e-01, 5.59880378e-01, 7.73828371e-01,
           5.41478164e-01, 2.93918109e-01],
          [6.07385876e-02, 1.46643342e-01, 7.85509101e-01,
           4.42784700e-01, 7.91399814e-01],
          [4.04121521e-01, 8.00291530e-01, 3.07678307e-01,
           6.40836494e-01, 4.94362706e-01]],

         [[4.47798124e-01, 5.70086701e-01, 9.42267791e-02,
           3.41696603e-01, 7.67780864e-01],
          [7.96828354e-01, 9.24213342e-02, 8.63099423e-01,
           7.93612914e-01, 2.66441661e-01],
          [6.23833096e-01, 2.75489144e-01, 3.38796209e-01,
           5.99688424e-01, 1.00499170e-01],
          [1.75748097e-01, 5.96052552e-01, 3.94555528e-01,
           8.14589694e-01, 2.51182643e-01],
          [7.84691866e-01, 6.40493525e-01, 7.17997572e-01,
           7.05617085e-01, 8.90886768e-01]]],


        [[[5.74313690e-01, 3.80248982e-01, 1.16036093e-01,
           2.44718736e-01, 7.59207976e-01],
          [5.82361077e-01, 9.17190447e-01, 9.05885029e-01,
           7.99414586e-01, 7.86357858e-01],
          [8.89205613e-01, 6.53452481e-01, 1.77029051e-01,
           4.17990023e-01, 8.26641477e-01],
          [8.80973772e-01, 1.92667356e-03, 3.66534602e-01,
           3.00341019e-01, 7.85614103e-01],
          [9.87454634e-01, 4.51267794e-01, 6.78307466e-01,
           9.12436199e-01, 4.92471083e-01]],

         [[8.86609204e-02, 7.49927543e-01, 1.59171779e-01,
           1.02476187e-01, 6.05338476e-01],
          [7.53774057e-01, 7.94129393e-01, 8.79090766e-01,
           5.80189765e-01, 7.34356432e-01],
          [8.67700385e-01, 9.63938276e-01, 8.20476321e-01,
           7.88653584e-01, 7.97452151e-01],
          [9.97814571e-01, 3.96964476e-01, 5.93095612e-01,
           8.35821249e-01, 5.85561577e-01],
          [4.27433827e-01, 5.58543973e-01, 3.93498721e-01,
           9.04981586e-02, 2.75049686e-01]],

         [[1.00745465e-01, 8.89530031e-01, 1.73484422e-01,
           9.92357464e-01, 5.82898266e-01],
          [4.39658566e-01, 6.74529861e-02, 4.07848442e-01,
           7.77502166e-01, 7.95106091e-01],
          [4.88862265e-01, 7.19387197e-01, 4.97521176e-01,
           9.87467375e-01, 2.67758091e-01],
          [3.93523906e-01, 5.13925771e-01, 7.19101016e-02,
           7.76455304e-02, 1.31157858e-01],
          [2.79009647e-02, 8.13782371e-01, 1.98808425e-01,
           1.57479554e-01, 7.88923854e-01]],

         [[1.84433603e-01, 3.73054792e-01, 2.67589129e-01,
           1.94941079e-02, 4.91878809e-01],
          [1.41262701e-01, 7.64846114e-01, 8.40196311e-01,
           3.94831529e-01, 8.35951843e-01],
          [9.50230163e-02, 7.00898884e-01, 4.43976331e-01,
           5.95720060e-01, 5.37196650e-01],
          [4.95509168e-01, 9.33727408e-01, 6.66684133e-01,
           3.23290459e-01, 3.46640903e-01],
          [3.19319230e-01, 3.19786223e-01, 1.10952660e-01,
           2.37767444e-01, 5.25800387e-01]],

         [[4.92926552e-01, 4.17398905e-01, 1.51948003e-01,
           1.09702684e-03, 5.61344330e-01],
          [2.80140255e-01, 1.94182050e-01, 9.75404321e-01,
           9.84239985e-01, 7.14503965e-01],
          [8.37948519e-01, 9.40164398e-01, 7.59168085e-02,
           8.12069694e-01, 1.58612074e-01],
          [8.49088447e-01, 1.18584686e-01, 6.42325209e-01,
           8.25108858e-01, 9.29404593e-01],
          [4.34229975e-01, 9.71574491e-01, 9.52703292e-01,
           4.78295105e-01, 6.53044261e-01]]],


        [[[8.62790819e-01, 9.60851919e-01, 4.66568714e-01,
           5.84975782e-01, 7.21493468e-01],
          [3.32068550e-01, 7.99018106e-01, 5.79026924e-01,
           7.95516648e-01, 5.83295380e-01],
          [3.06418054e-01, 7.65956157e-01, 7.96671881e-01,
           5.99160021e-02, 5.81987629e-01],
          [1.30769829e-02, 1.15796077e-01, 5.68046274e-01,
           3.78944214e-01, 7.45710321e-01],
          [1.47991279e-01, 7.01097862e-01, 3.89749302e-01,
           9.47129554e-01, 5.15326651e-01]],

         [[3.87244622e-01, 5.55632679e-01, 9.13549783e-01,
           7.26738927e-02, 1.38014271e-01],
          [7.09287263e-02, 1.30304387e-01, 2.18706775e-02,
           4.78711668e-02, 1.95097451e-01],
          [7.69054056e-01, 5.38570333e-01, 8.61365099e-01,
           3.49290021e-01, 6.92437151e-01],
          [9.18137648e-01, 6.43164213e-01, 8.87722761e-01,
           5.09054351e-01, 5.14702658e-02],
          [8.52746954e-01, 1.49392749e-01, 3.60080067e-01,
           8.84436660e-01, 4.34995292e-01]],

         [[7.41737220e-01, 7.37909527e-01, 6.76439893e-04,
           5.38505601e-02, 1.83238249e-01],
          [7.07486882e-01, 3.55912496e-01, 9.25390643e-01,
           9.36297668e-01, 4.01088740e-01],
          [2.03901359e-01, 5.83458858e-01, 7.01212342e-01,
           5.42954500e-01, 4.30353014e-01],
          [5.46172536e-01, 1.16822324e-01, 9.11576665e-01,
           2.63468084e-01, 2.75768903e-01],
          [8.18922707e-01, 1.87065374e-01, 8.22213880e-02,
           3.18613216e-01, 2.84119930e-01]],

         [[4.80092607e-01, 2.22843872e-01, 9.57942713e-01,
           6.75876505e-01, 8.87916724e-01],
          [3.27926084e-01, 6.61318870e-01, 1.48220786e-01,
           6.47696696e-01, 5.80217255e-01],
          [7.24296655e-01, 3.95289186e-01, 8.37692584e-01,
           9.56776383e-01, 3.27170296e-01],
          [6.67786281e-01, 6.46753838e-01, 9.61378270e-01,
           8.86768455e-01, 4.07871522e-01],
          [2.23746926e-01, 6.37134429e-01, 5.90107594e-01,
           5.79904204e-03, 8.32221748e-01]],

         [[8.85510870e-01, 2.12994959e-01, 4.63717966e-02,
           5.25230811e-01, 7.91978366e-01],
          [6.66190495e-01, 7.74534027e-02, 3.60610024e-01,
           6.82471786e-01, 1.58630691e-01],
          [9.96476305e-01, 9.69897643e-01, 7.26519907e-01,
           8.47336533e-01, 1.76225407e-01],
          [1.05616261e-01, 4.35371169e-01, 8.36662871e-01,
           9.93773432e-01, 9.30264853e-01],
          [2.29680669e-01, 9.72534268e-01, 9.36646960e-01,
           5.17628369e-01, 3.76762111e-01]]],


        [[[7.35731350e-02, 2.29032252e-01, 1.44058964e-01,
           1.66800026e-02, 4.91897703e-02],
          [5.01025918e-01, 8.40005295e-01, 6.61610432e-01,
           4.61075785e-01, 5.70216114e-01],
          [8.08595220e-01, 2.64478410e-01, 5.61956480e-01,
           9.77939647e-01, 2.13128536e-01],
          [2.55852237e-03, 8.73893417e-01, 2.25196029e-01,
           9.15972343e-02, 1.68784319e-01],
          [4.79611420e-01, 2.54142675e-03, 9.82367372e-01,
           7.09974666e-01, 1.40603809e-01]],

         [[2.26396593e-01, 5.36794925e-01, 3.97875997e-01,
           8.92086255e-01, 1.08570753e-02],
          [4.18932586e-01, 6.15844320e-01, 8.83913124e-01,
           1.17245043e-01, 4.79819570e-01],
          [2.87268314e-01, 7.71667877e-01, 5.05582817e-01,
           8.72532002e-01, 9.93488985e-01],
          [7.59353902e-01, 5.64404073e-01, 8.68614747e-01,
           6.87938908e-01, 9.99522332e-01],
          [7.12587353e-01, 3.95282657e-02, 9.90282268e-01,
           8.59768418e-01, 3.19075127e-01]],

         [[8.71479592e-02, 2.24688549e-01, 2.13544778e-01,
           2.83206647e-01, 9.17528163e-01],
          [2.86672987e-01, 2.35542114e-01, 5.13588685e-01,
           8.41174479e-01, 7.65671462e-01],
          [5.65424100e-01, 5.14819863e-01, 1.05933195e-01,
           6.16327392e-01, 5.71957378e-01],
          [6.63164022e-01, 4.81261034e-01, 8.04352285e-01,
           3.04131615e-01, 2.36240374e-02],
          [3.70717453e-01, 5.63277336e-01, 5.85154947e-01,
           9.93301988e-01, 7.88933551e-01]],

         [[4.92530666e-01, 2.82626752e-01, 6.16895289e-01,
           7.80615912e-01, 4.50329187e-02],
          [9.62131868e-01, 2.74280790e-01, 8.79629423e-01,
           3.55550841e-01, 7.03076457e-01],
          [9.21953228e-03, 6.16120732e-01, 5.15893563e-02,
           5.26188293e-01, 3.96301343e-01],
          [8.76027334e-02, 8.96052857e-01, 8.37364978e-01,
           9.85218393e-02, 7.12895252e-01],
          [8.89495150e-01, 7.01356412e-01, 5.04885853e-01,
           8.87401012e-01, 5.97486237e-01]],

         [[3.86282915e-01, 9.78629315e-01, 6.26852976e-01,
           1.35751025e-01, 3.53321031e-01],
          [8.93377877e-01, 6.88524217e-01, 5.12607363e-01,
           8.96069192e-01, 3.30351951e-01],
          [3.72572498e-01, 9.73267743e-01, 5.62542134e-01,
           4.73818385e-01, 3.15176783e-01],
          [5.64165476e-01, 5.55946594e-01, 7.45501334e-01,
           2.81421746e-01, 1.23852928e-01],
          [8.35318010e-01, 5.64231594e-01, 2.79400402e-01,
           1.67206480e-01, 3.70812547e-01]]],


        [[[7.51325414e-01, 9.74630283e-01, 9.18600609e-01,
           9.00768103e-01, 2.86075250e-01],
          [4.79051181e-01, 7.14445190e-02, 7.11033877e-01,
           6.56389276e-01, 5.50769245e-01],
          [8.97499031e-02, 7.99121634e-01, 4.02288965e-01,
           8.75407326e-01, 6.40727167e-01],
          [1.94319199e-01, 2.49179821e-01, 7.52889920e-01,
           5.16772568e-01, 1.54220503e-01],
          [8.76423817e-01, 9.04698150e-01, 6.79183253e-01,
           5.91274189e-01, 2.89580943e-01]],

         [[1.61510098e-01, 9.39160233e-01, 4.59635070e-01,
           7.62393941e-01, 8.21658488e-01],
          [7.01143282e-01, 1.25295871e-02, 2.64477723e-01,
           5.58356725e-01, 2.45825134e-01],
          [9.52788707e-01, 1.36362929e-01, 9.14495965e-01,
           7.49431505e-01, 7.84286180e-01],
          [7.89812054e-02, 6.00405280e-01, 6.36766173e-02,
           3.89448411e-01, 8.52244067e-01],
          [9.23512277e-01, 5.54896147e-02, 2.98373645e-01,
           6.39380430e-01, 3.04169668e-01]],

         [[8.68402565e-01, 3.42969211e-01, 3.01101464e-01,
           9.26353566e-01, 7.84441310e-01],
          [7.58755566e-01, 3.14152429e-01, 9.41457680e-02,
           9.70153742e-01, 5.75145827e-01],
          [9.97895515e-01, 4.57169995e-01, 3.46845438e-01,
           3.09969875e-01, 9.20493435e-01],
          [8.98386362e-01, 6.96888524e-01, 2.63386880e-01,
           4.49394407e-01, 5.33042775e-02],
          [7.18608734e-01, 8.60909239e-01, 7.36750519e-01,
           8.79422326e-01, 6.49627973e-01]],

         [[5.36913458e-01, 5.35749123e-01, 4.19489428e-03,
           8.50342614e-01, 3.37878884e-02],
          [9.66800201e-01, 4.93824480e-01, 5.61604700e-01,
           4.23290079e-01, 2.37001198e-01],
          [6.54188654e-01, 5.95666180e-01, 5.10833797e-01,
           5.77610127e-01, 6.38926471e-01],
          [8.65777265e-01, 8.01061702e-01, 5.87853901e-01,
           8.70586732e-01, 1.40473092e-01],
          [6.54347024e-01, 7.05632467e-01, 5.42297463e-01,
           2.90019363e-01, 5.15265887e-01]],

         [[1.46358894e-03, 3.00472772e-01, 2.29700630e-02,
           8.45176227e-01, 4.98406855e-01],
          [2.25013453e-01, 2.70584208e-01, 2.71586641e-02,
           3.67494391e-01, 1.05500604e-01],
          [8.18630266e-02, 3.36652856e-01, 4.70173091e-01,
           1.13215128e-01, 4.35041567e-01],
          [9.12078137e-01, 9.69559066e-01, 9.25020122e-01,
           1.11678915e-01, 4.57304591e-01],
          [7.86606356e-01, 8.15959624e-01, 4.23075172e-01,
           9.43253521e-01, 4.05069822e-01]]],


        [[[1.13457156e-01, 2.84662918e-01, 3.43088267e-01,
           8.53206702e-01, 2.03236365e-01],
          [6.95999323e-02, 5.37774147e-02, 1.46856752e-01,
           8.73704349e-01, 1.65471369e-01],
          [5.20200982e-01, 4.47766721e-01, 1.70370567e-02,
           1.53984523e-01, 5.21796726e-01],
          [4.44577806e-01, 1.69923954e-01, 1.23714162e-01,
           2.40446108e-01, 2.04894864e-01],
          [3.43956991e-01, 3.44647187e-01, 7.34461891e-01,
           1.58458299e-01, 5.47535386e-01]],

         [[8.43046490e-01, 2.22691921e-01, 2.49324967e-01,
           1.21812900e-02, 1.76791292e-01],
          [4.50768703e-01, 9.78892594e-01, 8.21468732e-01,
           6.28303428e-01, 6.64409619e-01],
          [8.18723283e-01, 5.88902818e-01, 9.35047228e-01,
           3.05215842e-01, 5.45618056e-01],
          [5.93998276e-01, 5.79335792e-01, 4.14252494e-01,
           2.85548059e-01, 8.40108753e-01],
          [4.09779210e-01, 2.17248202e-01, 1.03898560e-01,
           8.57406006e-01, 7.34534543e-02]],

         [[1.79809129e-01, 1.46766439e-01, 2.33211344e-01,
           7.20269103e-02, 3.41407526e-01],
          [9.96787139e-01, 3.51432840e-01, 6.37229126e-01,
           1.78630472e-01, 9.85446721e-02],
          [7.23144228e-01, 3.72180355e-01, 6.93064795e-02,
           3.82845498e-01, 8.68410795e-01],
          [5.60191563e-01, 1.52516452e-01, 7.94546855e-01,
           7.61194583e-01, 8.28532171e-01],
          [6.29988002e-01, 9.17584063e-01, 7.42453538e-01,
           2.05986838e-01, 5.93269136e-01]],

         [[9.98124309e-01, 8.96259975e-01, 9.84529237e-01,
           7.94609838e-01, 6.61037651e-01],
          [1.69749431e-01, 1.10226536e-01, 8.16400469e-01,
           7.25948551e-01, 4.48564315e-01],
          [4.76033223e-01, 9.28853632e-01, 6.02666037e-01,
           5.14582354e-01, 5.33344661e-01],
          [6.64681989e-01, 3.33281610e-01, 6.30576576e-01,
           9.18688704e-01, 3.11504143e-01],
          [8.14707546e-01, 4.09362690e-01, 1.66866120e-01,
           9.95962851e-02, 8.82030329e-01]],

         [[7.72932580e-01, 1.29315602e-01, 6.06510190e-01,
           3.65291965e-01, 6.43811034e-01],
          [9.21103431e-01, 3.45641247e-01, 2.34973391e-01,
           7.77971995e-01, 1.00581156e-01],
          [6.36606871e-01, 3.69493127e-01, 2.19425866e-01,
           7.55627751e-01, 6.35161033e-01],
          [1.61123290e-01, 1.92176823e-02, 1.58867306e-01,
           4.64154427e-01, 4.92576608e-01],
          [8.48762865e-01, 3.06983598e-01, 6.97445302e-01,
           7.59185797e-01, 5.04155381e-01]]]],



       [[[[7.06861126e-01, 8.04004259e-01, 7.46845986e-01,
           4.18928095e-01, 3.18295561e-01],
          [5.75660363e-01, 4.33654792e-01, 9.83964779e-01,
           5.04927089e-01, 7.66156817e-01],
          [4.73158633e-01, 8.54802533e-01, 3.13130926e-03,
           2.45657045e-01, 5.03490156e-01],
          [7.26560688e-01, 9.64273667e-01, 5.27788334e-01,
           2.92467287e-02, 8.74029918e-01],
          [6.85816292e-01, 3.02855349e-02, 6.65084719e-04,
           6.54494362e-02, 1.67349460e-02]],

         [[5.46537400e-01, 1.61876851e-02, 7.08304930e-01,
           2.77935361e-01, 1.07717593e-01],
          [9.13403160e-01, 3.59800246e-01, 3.18044541e-01,
           6.55411117e-01, 6.15946903e-01],
          [3.16912433e-01, 3.81685602e-01, 2.66197331e-01,
           4.99185849e-01, 6.85477961e-01],
          [7.38231936e-01, 4.10225133e-01, 9.83812950e-02,
           4.26333142e-01, 3.82475592e-01],
          [9.48345180e-02, 4.12319686e-02, 1.19646240e-01,
           2.41420735e-01, 7.10878552e-01]],

         [[9.59781960e-01, 2.58085930e-02, 8.31817161e-02,
           5.52612389e-01, 7.98940914e-01],
          [6.69107841e-01, 2.37026735e-01, 3.19371139e-01,
           3.24918498e-01, 6.87361968e-01],
          [1.92784291e-01, 1.88075321e-01, 7.26039029e-02,
           9.33657207e-01, 9.57704905e-01],
          [3.04226813e-01, 6.06023636e-01, 4.14920973e-01,
           3.25647572e-02, 6.05645462e-01],
          [7.47739442e-01, 5.71290634e-01, 3.64106043e-01,
           7.49097488e-01, 7.87558838e-01]],

         [[9.04918044e-01, 5.63508422e-01, 9.12467202e-01,
           4.51289780e-01, 7.91313650e-01],
          [9.93423071e-01, 4.72255453e-01, 9.51323867e-01,
           6.95695455e-02, 5.53057114e-01],
          [5.05294328e-01, 8.77583054e-02, 4.68023063e-01,
           2.65901193e-01, 2.92006164e-01],
          [9.89763504e-01, 9.10530094e-01, 4.84772470e-01,
           9.48932333e-01, 2.42681006e-01],
          [6.71223188e-01, 1.74300209e-01, 6.26611744e-01,
           7.67901962e-01, 4.65522803e-01]],

         [[5.24911808e-01, 9.36693510e-01, 6.05200441e-01,
           1.65775131e-01, 8.89886926e-01],
          [2.43147396e-01, 5.84314350e-01, 2.58936410e-01,
           1.66540248e-01, 9.07171638e-01],
          [5.23336357e-02, 9.77398420e-01, 5.13637550e-01,
           4.98415779e-01, 7.85325873e-01],
          [3.96877811e-01, 2.73812000e-01, 7.42837985e-01,
           7.25356512e-01, 1.35944316e-01],
          [9.88530251e-01, 9.01599476e-01, 1.68849033e-01,
           3.03976707e-01, 4.31012216e-01]]],


        [[[7.21368308e-01, 8.93820361e-01, 2.76575318e-01,
           9.97660726e-01, 8.98584852e-01],
          [2.01577970e-01, 6.28390280e-01, 3.33686767e-01,
           4.73995659e-01, 1.53962123e-01],
          [9.53492287e-01, 8.21514816e-01, 7.66468589e-01,
           6.47079661e-01, 7.44975229e-01],
          [9.16425956e-02, 2.33202634e-01, 3.12588072e-02,
           6.39914205e-01, 6.46569799e-01],
          [9.20996278e-01, 6.37432445e-01, 9.32787545e-01,
           4.39690186e-01, 4.75974580e-01]],

         [[1.79635557e-02, 2.17907940e-05, 7.53938816e-01,
           6.30199707e-01, 1.18366787e-01],
          [7.45654313e-01, 8.54284240e-01, 2.58349484e-01,
           8.13684038e-01, 8.48531690e-01],
          [8.78018507e-01, 6.35399600e-01, 6.91326779e-01,
           4.20852451e-01, 9.42882224e-01],
          [9.66344396e-03, 3.16581894e-01, 8.69144379e-01,
           1.11804474e-01, 6.60638057e-01],
          [9.33619694e-01, 2.25616679e-04, 4.80174472e-01,
           3.30214688e-01, 4.34295029e-01]],

         [[2.83090502e-02, 8.86419642e-01, 7.63759408e-01,
           6.66496055e-01, 9.67667553e-01],
          [4.57751646e-01, 6.34755063e-01, 8.04881493e-02,
           6.36525745e-01, 5.67729035e-01],
          [3.11730391e-01, 5.44467298e-01, 9.92394061e-01,
           6.22672917e-01, 7.71282205e-01],
          [7.32745067e-01, 3.90537960e-01, 8.53040988e-01,
           6.82345754e-01, 3.58442789e-01],
          [4.70256942e-01, 6.67913860e-01, 8.93846554e-01,
           7.14860466e-02, 4.86818430e-01]],

         [[2.46144205e-01, 4.79185034e-01, 7.70508199e-01,
           6.26392703e-01, 7.72171978e-01],
          [3.33532461e-01, 5.55650616e-01, 8.32414681e-01,
           4.77090035e-01, 3.44071186e-01],
          [4.17774614e-01, 3.13371890e-02, 8.10622571e-01,
           8.33895057e-01, 3.06402992e-01],
          [9.97339879e-01, 8.32046275e-01, 9.36542188e-02,
           6.83765884e-01, 3.38878930e-01],
          [8.67911177e-01, 9.08607453e-01, 7.41902216e-01,
           4.27331145e-01, 7.25813332e-01]],

         [[9.44116316e-01, 1.88877303e-01, 2.39097039e-02,
           9.87371387e-02, 8.99100512e-01],
          [7.77760834e-02, 4.00459647e-01, 7.69281553e-01,
           5.84674496e-01, 4.64094801e-01],
          [8.94427925e-01, 4.19792010e-01, 5.97920567e-01,
           3.40931975e-01, 5.51365622e-01],
          [7.26618609e-01, 7.65484285e-01, 7.04545267e-01,
           6.75094186e-01, 4.64474412e-01],
          [5.10346143e-01, 3.42278455e-01, 3.25966080e-01,
           1.22458797e-01, 9.97562770e-01]]],


        [[[5.78932286e-01, 3.48594322e-01, 8.28946038e-01,
           9.23633845e-01, 5.92736182e-01],
          [5.93153986e-01, 3.68662507e-01, 5.80608439e-02,
           2.72133274e-01, 1.41218484e-01],
          [4.47774954e-01, 7.87366894e-01, 6.84695959e-01,
           3.26066441e-01, 1.92109400e-01],
          [6.06248350e-01, 2.56049736e-01, 7.92660450e-01,
           7.84497145e-01, 4.74138635e-01],
          [2.12047476e-01, 2.10389597e-01, 6.97479576e-01,
           5.51594337e-01, 1.83226762e-01]],

         [[1.60417983e-01, 7.51988681e-01, 2.30526168e-01,
           2.11074695e-01, 5.52573903e-01],
          [9.78249812e-01, 6.97079271e-01, 6.39817761e-02,
           3.22465300e-02, 1.79466701e-01],
          [2.04138066e-01, 1.63368618e-01, 9.47863949e-01,
           3.78966220e-01, 1.00494339e-02],
          [8.29007902e-01, 5.33840900e-01, 9.70967077e-01,
           1.27531737e-01, 4.25677666e-01],
          [8.33943610e-01, 6.92202464e-01, 5.58680121e-01,
           7.77870395e-01, 8.48147831e-01]],

         [[2.76425471e-01, 4.79744916e-01, 6.62763683e-01,
           9.02005614e-01, 7.34944786e-02],
          [6.44655507e-01, 4.14805791e-01, 5.25049911e-01,
           8.70742061e-01, 5.09966752e-01],
          [5.07913618e-01, 6.89113912e-01, 5.57187542e-01,
           6.02492238e-01, 6.61022394e-01],
          [9.83523939e-01, 6.28860464e-01, 3.63933632e-01,
           1.97931680e-01, 3.84699601e-02],
          [5.27015761e-01, 2.03660684e-01, 1.05278998e-01,
           8.85655749e-01, 2.73937659e-01]],

         [[4.01751863e-01, 2.74475674e-01, 3.37107585e-01,
           5.15230389e-01, 9.60330774e-01],
          [1.94614609e-02, 5.51528847e-01, 2.84371574e-01,
           9.63317304e-01, 1.89204650e-01],
          [4.25876697e-01, 9.40936043e-01, 8.98019303e-01,
           4.72781370e-02, 2.82648028e-01],
          [8.51374249e-01, 9.87055140e-01, 2.75971253e-01,
           4.20757103e-01, 9.44964423e-01],
          [1.08830386e-01, 2.68032920e-02, 3.37945191e-01,
           4.26350623e-01, 1.34657806e-01]],

         [[7.02503473e-01, 4.70729722e-01, 2.61622815e-01,
           2.20180807e-01, 2.46279851e-01],
          [8.05239518e-01, 5.52339214e-01, 7.04423773e-01,
           1.44062613e-02, 1.18774209e-01],
          [2.47923720e-03, 2.70898504e-01, 4.03208225e-01,
           2.44937006e-01, 1.80255642e-02],
          [3.97436686e-01, 3.84862664e-01, 6.22610943e-01,
           3.25282303e-01, 2.02458020e-01],
          [1.10923695e-01, 4.21935050e-02, 4.23056612e-01,
           5.40675930e-03, 6.99351431e-01]]],


        [[[6.87204920e-01, 1.93664895e-01, 4.66272900e-02,
           2.02449530e-01, 3.74847726e-01],
          [4.73010492e-01, 5.09996425e-01, 7.55853976e-01,
           3.07386070e-01, 9.13083350e-01],
          [7.78617882e-01, 8.14817915e-01, 9.51113075e-01,
           8.89097778e-01, 2.44203309e-02],
          [1.08855780e-01, 1.07846018e-01, 2.56094021e-01,
           6.44377522e-01, 2.84443213e-01],
          [9.47184873e-01, 9.00564566e-01, 6.46797306e-01,
           4.46719457e-01, 8.92694497e-01]],

         [[5.44435874e-01, 5.59113904e-01, 4.48597447e-01,
           7.96912471e-01, 3.29754497e-01],
          [9.27232286e-01, 9.85009539e-01, 5.55768219e-01,
           4.74927675e-01, 3.49371420e-01],
          [7.13067097e-01, 4.08613843e-01, 1.38582973e-01,
           2.92157544e-01, 6.22704141e-01],
          [4.50006172e-01, 5.91913919e-01, 7.59960200e-01,
           9.62093336e-01, 5.29153237e-01],
          [4.21575201e-01, 9.46007281e-01, 1.47412591e-01,
           3.20693111e-02, 6.75933999e-01]],

         [[7.60309463e-01, 2.69669799e-01, 2.34615612e-01,
           1.70509080e-01, 7.82654358e-01],
          [2.02511574e-01, 4.10278922e-01, 2.17979658e-01,
           5.61589288e-02, 5.18576558e-01],
          [7.01450653e-01, 7.44513301e-01, 3.02544145e-02,
           2.05727621e-01, 4.22688244e-01],
          [9.13721271e-01, 6.30800620e-01, 5.92814525e-01,
           5.51910439e-01, 9.13298266e-01],
          [6.47616125e-01, 3.53723849e-01, 7.93830607e-01,
           7.06717700e-01, 3.84594406e-01]],

         [[6.71906922e-01, 3.58574225e-01, 4.18211513e-01,
           3.45996859e-01, 4.21321076e-01],
          [3.07729694e-01, 1.34688005e-01, 6.35503703e-01,
           9.48173987e-01, 3.48135595e-01],
          [7.42573451e-02, 3.03149694e-02, 3.27678052e-01,
           7.32440217e-02, 6.59913227e-01],
          [9.04156275e-02, 9.33245062e-01, 4.33533968e-01,
           7.29052101e-02, 2.21598836e-01],
          [8.70851518e-01, 4.14312051e-02, 1.34467524e-01,
           8.98240661e-01, 4.15148711e-01]],

         [[3.33717331e-01, 3.46918770e-01, 8.81410081e-01,
           5.62889989e-01, 2.29999525e-01],
          [4.47823473e-01, 9.07831095e-01, 2.37839019e-01,
           6.38130100e-01, 6.81459291e-01],
          [3.74675937e-01, 9.60086532e-01, 7.05938357e-01,
           4.59780030e-01, 1.66470972e-01],
          [7.42926680e-01, 5.65247561e-02, 6.40608441e-01,
           4.60119483e-01, 7.54724767e-01],
          [5.11210537e-01, 4.20340119e-01, 9.51060647e-01,
           9.00640171e-01, 1.26209439e-01]]],


        [[[4.24744697e-01, 4.90941570e-01, 4.36694239e-01,
           9.41410316e-01, 2.50839926e-01],
          [4.10387520e-01, 3.77191352e-01, 7.32883946e-01,
           9.67082116e-01, 9.65168009e-01],
          [5.14897710e-01, 9.48205848e-02, 7.77875876e-02,
           3.81739016e-01, 1.59409256e-01],
          [8.30698126e-01, 9.73440023e-01, 7.75920807e-01,
           9.73289460e-01, 2.19498768e-01],
          [2.98562612e-01, 3.30834681e-01, 4.11280892e-01,
           3.50600230e-01, 8.51943746e-01]],

         [[5.89258465e-01, 4.83780668e-02, 7.13229485e-01,
           1.81308700e-01, 3.48478689e-01],
          [8.44664188e-01, 3.68974414e-01, 5.29357239e-02,
           1.60889038e-01, 8.68079855e-01],
          [2.26377035e-01, 3.50558597e-01, 2.06279482e-01,
           7.30225683e-01, 2.91681438e-01],
          [8.11568685e-01, 1.10803249e-01, 5.84323638e-01,
           6.33860797e-01, 5.68921799e-01],
          [1.15556982e-01, 1.92604890e-01, 2.78332326e-02,
           4.96233793e-01, 4.56895154e-01]],

         [[2.14096844e-01, 9.56107865e-01, 6.44475000e-01,
           9.14640805e-01, 6.40204236e-01],
          [9.57971872e-01, 9.63932283e-01, 8.47204518e-02,
           9.00197911e-01, 4.16146323e-01],
          [4.02610781e-01, 4.02663804e-01, 9.91357827e-01,
           6.47134036e-01, 4.79994454e-01],
          [1.22821557e-01, 9.40191092e-02, 2.28480752e-01,
           5.01568343e-01, 1.00778919e-01],
          [2.96531559e-01, 5.52967110e-01, 5.07418674e-01,
           2.30401882e-01, 7.67901458e-01]],

         [[7.70170518e-01, 3.20561040e-01, 7.34171224e-01,
           4.10965896e-01, 2.38900104e-01],
          [5.51598856e-01, 2.60853567e-01, 3.94249428e-01,
           1.79594097e-01, 4.02544543e-01],
          [3.95448952e-01, 8.72617759e-01, 8.56400864e-01,
           4.00625547e-01, 8.55604592e-01],
          [8.14419284e-01, 3.96682802e-01, 1.56292456e-01,
           5.58522551e-01, 2.84006210e-01],
          [6.30328608e-01, 7.49540464e-01, 2.77028821e-01,
           4.11846637e-01, 9.21203493e-01]],

         [[6.33394488e-01, 1.70833066e-01, 5.66080083e-01,
           4.33567314e-01, 1.34572896e-03],
          [4.73547279e-01, 7.14549629e-01, 1.31020763e-01,
           1.25262379e-01, 2.31603073e-01],
          [6.43961617e-02, 8.95663891e-01, 8.50088971e-01,
           9.03906356e-01, 3.33870297e-01],
          [8.49954447e-01, 4.70731665e-01, 5.45492280e-01,
           2.98140057e-01, 5.26859737e-01],
          [1.05819113e-01, 1.96693042e-02, 7.97041321e-01,
           8.42237159e-01, 6.98021463e-01]]],


        [[[2.22078858e-01, 2.04073255e-01, 7.09400187e-01,
           1.99203017e-01, 2.09110716e-01],
          [8.79062271e-01, 3.52977147e-01, 9.89240929e-01,
           7.33774330e-01, 2.37994414e-01],
          [9.13470603e-01, 3.51194987e-01, 8.29782624e-01,
           6.90902156e-01, 1.87279187e-01],
          [3.48320715e-01, 5.62803672e-01, 6.76318678e-01,
           1.41327790e-02, 6.20895351e-01],
          [2.54286984e-02, 9.60786211e-01, 3.75890884e-01,
           1.85308028e-01, 1.27226701e-01]],

         [[3.25682382e-01, 5.43062853e-02, 8.16138616e-01,
           2.96015226e-01, 9.22372430e-01],
          [3.15917535e-01, 4.69797922e-01, 6.41537911e-01,
           6.11045562e-01, 8.69218866e-01],
          [2.45792721e-01, 2.37058683e-01, 1.61905402e-01,
           1.36667871e-01, 9.40442648e-01],
          [9.05483663e-01, 4.65100822e-01, 7.17132165e-04,
           2.47274247e-01, 8.33140017e-01],
          [4.43201163e-01, 1.50923519e-01, 9.63783077e-01,
           5.66407290e-01, 3.73299696e-01]],

         [[3.29754430e-01, 3.07365893e-01, 1.04628874e-01,
           3.90230668e-02, 6.33396097e-01],
          [8.65073498e-01, 6.20399416e-01, 2.99144722e-01,
           2.57998793e-01, 3.96439095e-03],
          [8.64366298e-01, 1.74999130e-01, 1.01598441e-01,
           2.72693924e-01, 9.49772730e-01],
          [2.93210782e-01, 1.15073195e-01, 9.94617118e-01,
           1.24880881e-01, 5.44208063e-01],
          [8.04966041e-01, 4.68808253e-01, 5.33533665e-01,
           1.40935617e-01, 1.54811409e-01]],

         [[7.37668974e-01, 6.03300265e-01, 3.35939909e-02,
           1.80020418e-01, 5.40756107e-01],
          [2.31351378e-01, 8.22652308e-01, 2.57066189e-01,
           8.24964800e-01, 1.67164786e-01],
          [9.71468077e-01, 3.16106989e-01, 1.58851279e-01,
           9.64294266e-01, 1.33829582e-01],
          [2.80859184e-01, 8.07726787e-01, 8.17762633e-01,
           4.51151663e-01, 2.11629774e-03],
          [5.34839436e-01, 9.88101817e-02, 8.52424789e-01,
           1.37360996e-01, 4.73030699e-01]],

         [[9.55419645e-03, 4.72337292e-01, 2.34034331e-01,
           6.16464259e-01, 2.24296953e-01],
          [5.84986379e-01, 2.06058609e-01, 8.99521510e-01,
           1.11812253e-01, 6.27359644e-01],
          [6.20758339e-01, 2.83560685e-01, 1.59876644e-01,
           1.05713142e-01, 6.37697585e-01],
          [6.75201029e-01, 7.11144835e-01, 2.62044890e-01,
           9.52568653e-01, 1.68180251e-01],
          [2.52147537e-01, 9.52234969e-01, 1.46639366e-01,
           9.85154879e-01, 6.91980001e-01]]]]]), array([[[[[0.87224129, 0.29542102, 0.48667795],
          [0.2326767 , 0.04037563, 0.7060517 ],
          [0.97861803, 0.77565956, 0.18890816]],

         [[0.06107855, 0.01766623, 0.36573817],
          [0.15629785, 0.72162581, 0.59221351],
          [0.0807879 , 0.77361849, 0.47499662]],

         [[0.50957022, 0.02608413, 0.88769072],
          [0.52380634, 0.71891544, 0.83944165],
          [0.10579023, 0.44040516, 0.08256343]]],


        [[[0.8124536 , 0.80478999, 0.40085543],
          [0.74129799, 0.77698167, 0.41653156],
          [0.76299196, 0.55855404, 0.46584448]],

         [[0.14132588, 0.29285717, 0.22469696],
          [0.04453927, 0.3258275 , 0.99075051],
          [0.09173344, 0.12123643, 0.47943571]],

         [[0.28327585, 0.46823551, 0.49457727],
          [0.09814664, 0.31493434, 0.94102256],
          [0.94251504, 0.93972261, 0.98046039]]]],



       [[[[0.5252302 , 0.41932652, 0.50604878],
          [0.35232591, 0.35639563, 0.91340197],
          [0.88649979, 0.43851055, 0.10353893]],

         [[0.92024161, 0.44721983, 0.90903346],
          [0.4877058 , 0.00972533, 0.61530473],
          [0.22688358, 0.16862814, 0.96016211]],

         [[0.75840189, 0.17914273, 0.23995118],
          [0.10807944, 0.43526143, 0.67708945],
          [0.5971271 , 0.53367689, 0.72834989]]],


        [[[0.91983334, 0.25489309, 0.17748063],
          [0.5195672 , 0.44755263, 0.37268474],
          [0.4815453 , 0.18041812, 0.83700295]],

         [[0.1462243 , 0.62390067, 0.8424605 ],
          [0.38457184, 0.38052555, 0.5706752 ],
          [0.38572375, 0.28438686, 0.93414113]],

         [[0.5177371 , 0.03015168, 0.16029744],
          [0.78176143, 0.37642487, 0.33702198],
          [0.96478213, 0.08218114, 0.99574745]]]],



       [[[[0.80296374, 0.43363698, 0.29977542],
          [0.20144582, 0.64179143, 0.35249758],
          [0.58807128, 0.63981224, 0.33867538]],

         [[0.67369093, 0.59482093, 0.25292116],
          [0.66461453, 0.05363915, 0.78476429],
          [0.46566181, 0.68778692, 0.81086829]],

         [[0.42911347, 0.77342456, 0.96768264],
          [0.05802047, 0.0029257 , 0.3958859 ],
          [0.6615408 , 0.42857678, 0.93223564]]],


        [[[0.23227832, 0.15422926, 0.00608086],
          [0.95045951, 0.94399337, 0.32791179],
          [0.03855157, 0.06877021, 0.01726899]],

         [[0.14575797, 0.39262531, 0.190507  ],
          [0.40012758, 0.36884642, 0.27289005],
          [0.46516195, 0.85064098, 0.43014953]],

         [[0.86812384, 0.56406732, 0.12957374],
          [0.50595712, 0.33098153, 0.54562187],
          [0.62377918, 0.48842903, 0.4219543 ]]]]])], '\nThe value of eps is:', 1, '\nThe out_type is:', None)

======================================================================
ERROR: test_gradinputs (test_abstract_conv.Grouped_conv3d_noOptim)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 3009, in perform
    num_groups=self.num_groups)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2267, in conv
    im0, ...], mode)
ValueError: operands could not be broadcast together with shapes (3,3,3) (5,5,5) (3,3,3) 

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 1621, in test_gradinputs
    grouped_output = grouped_func(kern, top)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 917, in __call__
    storage_map=getattr(self.fn, 'storage_map', None))
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\link.py", line 325, in raise_with_op
    reraise(exc_type, exc_value, exc_trace)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\six.py", line 702, in reraise
    raise value.with_traceback(tb)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 3009, in perform
    num_groups=self.num_groups)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2267, in conv
    im0, ...], mode)
ValueError: operands could not be broadcast together with shapes (3,3,3) (5,5,5) (3,3,3) 
Apply node that caused the error: AbstractConv3d_gradInputs{convdim=3, border_mode='valid', subsample=(1, 1, 1), filter_flip=True, imshp=(None, None, None, None, None), kshp=(None, None, None, None, None), filter_dilation=(1, 1, 1), num_groups=3, unshared=False}(kern, top, TensorConstant{(3,) of 5})
Toposort index: 0
Inputs types: [TensorType(float64, 5D), TensorType(float64, 5D), TensorType(int32, vector)]
Inputs shapes: [(3, 2, 3, 3, 3), (2, 3, 3, 3, 3), (3,)]
Inputs strides: [(432, 216, 72, 24, 8), (648, 216, 72, 24, 8), (4,)]
Inputs values: ['not shown', 'not shown', array([5, 5, 5])]
Outputs clients: [['output']]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 122, in run
    test(result)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 84, in __call__
    return self.run(*args, **kwds)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 122, in run
    test(result)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 84, in __call__
    return self.run(*args, **kwds)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 122, in run
    test(result)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\case.py", line 653, in __call__
    return self.run(*args, **kwds)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\case.py", line 605, in run
    testMethod()
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 1617, in test_gradinputs
    imshp[-self.convdim:]))

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.

======================================================================
ERROR: test_gradweights (test_abstract_conv.Grouped_conv3d_noOptim)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 3009, in perform
    num_groups=self.num_groups)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2267, in conv
    im0, ...], mode)
ValueError: operands could not be broadcast together with shapes (3,3,3) (5,5,5) (3,3,3) 

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 1595, in test_gradweights
    mode=self.mode, eps=1)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tests\unittest_tools.py", line 92, in verify_grad
    T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gradient.py", line 1780, in verify_grad
    analytic_grad = grad_fn(*[p.copy() for p in pt])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 917, in __call__
    storage_map=getattr(self.fn, 'storage_map', None))
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\link.py", line 325, in raise_with_op
    reraise(exc_type, exc_value, exc_trace)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\six.py", line 702, in reraise
    raise value.with_traceback(tb)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 3009, in perform
    num_groups=self.num_groups)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2267, in conv
    im0, ...], mode)
ValueError: ('operands could not be broadcast together with shapes (3,3,3) (5,5,5) (3,3,3) \nApply node that caused the error: AbstractConv3d_gradInputs{convdim=3, border_mode=\'valid\', subsample=(1, 1, 1), filter_flip=True, imshp=(None, None, None, None, None), kshp=(None, None, None, None, None), filter_dilation=(1, 1, 1), num_groups=3, unshared=False}(Elemwise{mul}.0, input 1, Subtensor{int64::}.0)\nToposort index: 9\nInputs types: [TensorType(float64, 5D), TensorType(float64, 5D), TensorType(int64, vector)]\nInputs shapes: [(3, 2, 3, 3, 3), (2, 3, 3, 3, 3), (3,)]\nInputs strides: [(432, 216, 72, 24, 8), (648, 216, 72, 24, 8), (8,)]\nInputs values: [\'not shown\', \'not shown\', array([5, 5, 5], dtype=int64)]\nOutputs clients: [[\'output\']]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "C:\\Users\\mutation\\Desktop\\theano-testcase\\tests\\test_abstract_conv.py", line 1595, in test_gradweights\n    mode=self.mode, eps=1)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\tests\\unittest_tools.py", line 92, in verify_grad\n    T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1770, in verify_grad\n    disconnected_inputs=\'ignore\')\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 605, in grad\n    grad_dict, wrt, cost_name)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1371, in _populate_grad_dict\n    rval = [access_grad_cache(elem) for elem in wrt]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1371, in <listcomp>\n    rval = [access_grad_cache(elem) for elem in wrt]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1326, in access_grad_cache\n    term = access_term_cache(node)[idx]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1162, in access_term_cache\n    new_output_grads)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.', '\nThe error happened with the following inputs:', [array([[[[[3.05030999e-01, 9.49672510e-01, 4.85825885e-01,
           1.69205256e-01, 7.92851807e-01],
          [3.03852168e-01, 4.11011163e-01, 9.20087956e-01,
           5.13478744e-01, 5.70718371e-01],
          [9.65270698e-01, 5.77906211e-01, 7.19190261e-01,
           8.02277993e-01, 6.34025881e-03],
          [9.10555383e-01, 2.36982353e-01, 9.64651870e-02,
           3.46436610e-01, 6.38146040e-01],
          [6.20457273e-01, 2.67893977e-01, 3.91009903e-01,
           8.06131811e-02, 4.12078487e-01]],

         [[7.41445411e-01, 1.35349399e-01, 2.73413933e-01,
           3.54259922e-02, 4.24132262e-01],
          [1.32899480e-01, 8.24788082e-01, 1.78578377e-01,
           4.39397350e-01, 6.64564450e-02],
          [2.46635634e-01, 7.94938225e-01, 5.24909785e-01,
           3.40453010e-01, 5.37976456e-01],
          [7.59755205e-01, 3.07659690e-01, 4.36991489e-01,
           7.08075413e-01, 9.00235543e-01],
          [8.63067018e-01, 8.40528890e-02, 5.72917033e-01,
           4.05358219e-01, 5.42256410e-01]],

         [[2.07626418e-02, 9.26985578e-01, 4.25610288e-01,
           1.62158457e-02, 2.94049999e-01],
          [6.73854567e-01, 3.92127002e-01, 8.63583346e-01,
           8.41780909e-01, 6.25727328e-01],
          [3.93924743e-01, 9.52269464e-01, 9.22484824e-01,
           9.59017723e-02, 4.05449156e-01],
          [9.75467341e-02, 5.79607925e-01, 4.43840251e-01,
           1.56017759e-01, 5.53535051e-01],
          [3.46060060e-01, 7.44744870e-01, 2.36856934e-01,
           4.34299402e-01, 7.34925325e-01]],

         [[3.12040713e-01, 4.81466415e-01, 7.90374187e-01,
           3.13273218e-01, 6.69915595e-01],
          [1.13747847e-01, 2.67863178e-01, 6.76016507e-01,
           8.98966881e-01, 9.31105949e-01],
          [3.59166090e-01, 9.53735398e-01, 5.63915954e-01,
           8.77737904e-01, 1.92024160e-01],
          [5.22997544e-01, 6.21505892e-01, 6.07950861e-02,
           1.86992635e-02, 2.98045002e-01],
          [5.04734189e-01, 2.99615572e-01, 4.42834008e-01,
           3.84186476e-01, 6.54925443e-02]],

         [[3.29604242e-01, 7.29427942e-01, 5.55099671e-01,
           5.28839601e-01, 2.03075345e-01],
          [9.76571596e-01, 1.54169250e-01, 3.70889503e-01,
           2.22720723e-01, 3.60399816e-01],
          [4.84981879e-01, 2.49488771e-01, 9.81400801e-01,
           9.43396402e-01, 7.90678066e-01],
          [6.79315348e-01, 9.68263870e-02, 2.62803005e-01,
           9.93670365e-01, 7.10324533e-01],
          [3.90108101e-01, 5.67175976e-01, 8.95101339e-02,
           4.40739190e-01, 1.04957355e-01]]],


        [[[6.81837823e-01, 3.11502835e-01, 6.69197072e-01,
           9.88413888e-01, 3.93020801e-01],
          [2.92263312e-01, 4.67562767e-01, 2.90316517e-01,
           8.49188045e-01, 7.12163002e-01],
          [3.49299419e-01, 4.52080278e-01, 4.28775689e-01,
           6.08500744e-01, 7.36092984e-01],
          [3.52536240e-01, 3.56013952e-01, 5.91367037e-01,
           8.23124248e-01, 6.50877424e-01],
          [5.76078292e-01, 5.03105537e-01, 9.92471940e-02,
           2.72640322e-01, 3.34456884e-02]],

         [[7.06048978e-01, 6.48701685e-01, 4.10375866e-01,
           7.73816299e-03, 5.82665085e-01],
          [7.45018668e-01, 9.24191147e-01, 9.81522455e-02,
           3.23654798e-02, 1.06821996e-01],
          [1.79138586e-01, 1.75181675e-01, 2.05787839e-01,
           3.27136404e-01, 4.91332200e-01],
          [4.86875743e-01, 5.03257399e-01, 2.88159344e-01,
           4.74585078e-01, 6.43128463e-02],
          [3.30847597e-01, 4.86232877e-01, 2.95289884e-01,
           3.78182033e-01, 5.41753200e-01]],

         [[4.00105456e-01, 7.62409550e-01, 4.79552642e-01,
           1.58616227e-01, 1.30800034e-01],
          [4.81727275e-01, 2.46423107e-01, 9.22493913e-01,
           5.74614423e-01, 7.46139945e-02],
          [3.72696707e-01, 1.97485174e-01, 6.32258659e-01,
           9.41144283e-01, 8.20231081e-01],
          [2.63071489e-01, 8.69910223e-01, 3.97421333e-01,
           8.88117110e-01, 7.18555621e-01],
          [6.60022356e-01, 9.72491779e-01, 9.44110717e-02,
           3.04650389e-01, 7.62230976e-02]],

         [[7.87616575e-01, 6.46705051e-01, 9.62673408e-01,
           9.55926979e-01, 8.60986280e-01],
          [9.52629154e-01, 4.40732120e-02, 7.77599744e-01,
           5.73765832e-01, 7.15696451e-01],
          [1.56183350e-01, 5.30530707e-01, 3.47948320e-01,
           1.42467306e-01, 8.36837257e-01],
          [3.93179487e-01, 8.10612292e-01, 6.16303380e-01,
           6.39072158e-01, 1.22530738e-01],
          [3.55388331e-01, 4.42998481e-02, 1.53624784e-01,
           1.91220784e-01, 8.29036549e-01]],

         [[9.68545681e-01, 4.34818214e-01, 3.17673921e-01,
           7.70210776e-01, 2.82447319e-01],
          [3.84679362e-01, 2.25771544e-01, 5.98393375e-01,
           9.30391339e-01, 1.31584453e-01],
          [3.13026274e-01, 3.69363286e-01, 8.61754960e-01,
           2.75510355e-01, 8.82273401e-01],
          [5.11281980e-01, 7.76034776e-01, 5.06532405e-02,
           1.07884117e-02, 3.69657924e-01],
          [5.61170750e-01, 2.95150168e-01, 4.08545086e-01,
           2.27082896e-01, 7.46574394e-02]]],


        [[[8.96730153e-01, 6.58233590e-01, 5.83000576e-01,
           3.48356234e-01, 6.59861397e-01],
          [3.26605146e-01, 6.91662436e-01, 2.17057256e-01,
           7.10855736e-01, 4.94951866e-01],
          [8.57748038e-01, 5.98846572e-01, 7.06941063e-01,
           2.44210884e-01, 5.12804126e-01],
          [1.25884902e-01, 4.70381068e-01, 3.94994971e-01,
           1.66286388e-01, 4.88895684e-01],
          [6.64796742e-01, 3.39693038e-01, 3.17999337e-01,
           2.29702904e-01, 5.33838657e-02]],

         [[6.61953482e-01, 1.13473618e-01, 1.68485116e-01,
           9.10718598e-01, 3.41935887e-01],
          [4.68529364e-01, 6.54978910e-02, 9.48818441e-01,
           4.52981712e-01, 5.29238872e-01],
          [4.96525621e-01, 4.55002115e-01, 5.99285769e-01,
           2.61763641e-01, 8.63419682e-01],
          [4.08871408e-01, 5.22533178e-01, 5.28629633e-01,
           2.52605146e-02, 6.99342080e-01],
          [4.36722674e-01, 6.46572283e-02, 3.04890587e-01,
           1.19212884e-01, 4.09823871e-01]],

         [[8.78448118e-01, 3.65214981e-01, 7.79061002e-01,
           7.21911773e-01, 7.40378029e-01],
          [3.89262911e-01, 3.85785226e-01, 5.17695656e-01,
           7.42731740e-01, 4.61733748e-01],
          [6.36985930e-01, 9.20627801e-01, 5.87963420e-01,
           7.14763357e-01, 1.69072869e-01],
          [6.13117179e-01, 3.13183195e-01, 1.23163853e-01,
           6.10238260e-01, 7.32984277e-01],
          [6.45123130e-01, 4.82854315e-01, 5.86136441e-01,
           8.85706866e-02, 7.12963655e-01]],

         [[6.90243533e-01, 1.03643176e-01, 8.18368111e-01,
           1.87476217e-01, 7.98675371e-01],
          [8.45091767e-01, 4.84380547e-02, 4.59248537e-01,
           6.64913860e-01, 7.35417865e-02],
          [5.08941958e-01, 2.30388402e-02, 6.28305878e-01,
           7.34967147e-01, 9.71809815e-01],
          [9.61784391e-01, 2.37496902e-01, 9.53443291e-01,
           7.92152384e-01, 3.41877334e-01],
          [8.35119006e-01, 4.16483719e-02, 5.91601075e-01,
           3.79561150e-01, 8.32659463e-01]],

         [[2.91935227e-01, 8.14903314e-01, 2.96663069e-01,
           3.81339839e-01, 4.28992675e-02],
          [9.02721357e-01, 3.74601660e-01, 9.88997180e-01,
           6.45086473e-01, 8.29346568e-01],
          [1.86999182e-01, 6.68541527e-01, 9.02161601e-01,
           2.38507500e-01, 8.85992407e-01],
          [3.37829559e-01, 6.70340038e-01, 7.36468542e-01,
           9.17523893e-02, 2.69821243e-01],
          [2.81745492e-01, 9.98589599e-01, 6.72000587e-01,
           6.79098353e-01, 5.73307780e-02]]],


        [[[3.55993925e-01, 9.59026843e-01, 9.54642410e-01,
           3.13432186e-01, 8.61792220e-02],
          [1.92358280e-01, 2.46890509e-03, 9.81105020e-01,
           8.41643807e-01, 2.37013135e-01],
          [9.65393149e-01, 3.02314459e-01, 1.92686572e-01,
           1.81934009e-01, 1.62259551e-01],
          [4.50566573e-02, 2.03691991e-01, 1.15719669e-01,
           6.48835061e-01, 7.79134602e-01],
          [1.94150128e-01, 2.66724515e-01, 8.51184674e-01,
           6.95241140e-01, 4.64349019e-01]],

         [[7.45779835e-01, 4.86847072e-01, 5.57325051e-01,
           7.79932363e-01, 1.57889892e-01],
          [7.01616652e-01, 2.49798305e-01, 6.72327963e-01,
           1.34148674e-01, 8.64369285e-01],
          [4.76984695e-01, 9.37739761e-01, 4.68466541e-01,
           2.91642792e-01, 8.19775241e-01],
          [4.22444858e-01, 6.20986958e-01, 2.56672980e-02,
           9.60640183e-01, 4.61382224e-01],
          [7.75887561e-01, 9.42585014e-01, 2.66440570e-01,
           6.98747100e-01, 9.22084321e-01]],

         [[7.19083339e-01, 9.94057725e-01, 6.72004315e-01,
           8.91125564e-01, 9.52584736e-01],
          [7.29222718e-02, 5.20599228e-01, 1.98632225e-01,
           1.90965110e-01, 3.01955140e-01],
          [2.94259986e-01, 6.76502146e-01, 5.32703045e-01,
           3.86506952e-01, 1.53174586e-01],
          [5.37132806e-01, 1.42888741e-01, 6.16723197e-01,
           6.57230122e-01, 1.76043057e-01],
          [5.97416015e-01, 4.78027212e-01, 1.93358073e-01,
           1.74618126e-02, 4.99310661e-01]],

         [[6.86064676e-01, 3.36473500e-01, 4.08138490e-01,
           3.62850330e-01, 2.15542946e-01],
          [7.83103893e-01, 9.16993575e-01, 6.70808926e-02,
           7.38877443e-01, 6.66514974e-01],
          [9.31947725e-01, 1.95469755e-01, 3.12543887e-01,
           8.49688133e-01, 7.39153161e-01],
          [8.23830941e-01, 9.06509283e-01, 6.50342836e-01,
           6.18345368e-02, 4.69307830e-01],
          [3.97842975e-01, 3.77541741e-01, 2.33074575e-01,
           1.37001168e-01, 8.96336244e-01]],

         [[5.75853128e-01, 9.14045999e-01, 2.43608647e-01,
           9.49491305e-01, 3.86455187e-01],
          [6.23693188e-01, 6.99073919e-01, 6.37688997e-01,
           7.48809986e-01, 3.65391770e-01],
          [7.23467439e-01, 5.67494118e-01, 8.41657848e-01,
           8.44969380e-01, 2.50030592e-01],
          [7.23781768e-01, 2.65614912e-01, 1.57053296e-01,
           6.18875585e-01, 7.91332920e-01],
          [1.42028120e-01, 7.27539005e-01, 1.31610482e-02,
           1.27496494e-01, 6.81119655e-01]]],


        [[[3.01135279e-01, 2.75672084e-01, 5.53611832e-01,
           1.91798076e-01, 8.95463579e-01],
          [9.76487690e-01, 9.45046577e-01, 1.35347595e-01,
           2.23152343e-02, 7.29949978e-01],
          [3.72853188e-01, 8.77498831e-01, 7.56851456e-01,
           2.77472867e-01, 6.45436701e-01],
          [5.64610688e-01, 7.53532150e-01, 9.85136278e-03,
           6.62630133e-01, 2.27464521e-01],
          [2.59311534e-01, 9.68816023e-01, 4.86735995e-01,
           6.49121645e-01, 7.36166850e-01]],

         [[8.01118548e-01, 1.55276149e-01, 7.87751640e-01,
           5.99705633e-01, 9.80814115e-01],
          [3.43745610e-01, 3.03624736e-01, 7.28388353e-01,
           4.92788709e-01, 9.43837567e-02],
          [8.20526800e-01, 8.22199535e-01, 9.91070424e-01,
           8.08132302e-01, 7.32927491e-01],
          [8.46980383e-01, 7.65018622e-01, 6.84647523e-01,
           8.25862701e-01, 8.21888709e-01],
          [2.86487935e-02, 6.51405421e-01, 6.78007619e-01,
           4.26152110e-01, 2.99122388e-03]],

         [[6.69883583e-01, 7.73797116e-01, 9.74091836e-03,
           8.39078042e-01, 2.89512282e-01],
          [1.64799543e-01, 4.97916517e-01, 7.01725518e-01,
           7.61153505e-01, 4.93240424e-02],
          [9.95318855e-01, 9.90733501e-01, 7.31547408e-02,
           7.51159197e-01, 2.01034023e-01],
          [4.47066823e-01, 8.77123135e-01, 5.50155647e-01,
           4.32496093e-01, 5.32532562e-01],
          [6.41490772e-01, 1.24568334e-02, 1.99156688e-01,
           8.47559980e-01, 4.94771164e-01]],

         [[5.78545834e-01, 6.74808060e-01, 9.94017857e-01,
           7.46375990e-01, 6.03306818e-02],
          [9.94375563e-01, 6.07305065e-01, 1.81706839e-01,
           1.27471052e-01, 9.39047411e-01],
          [7.62565358e-01, 4.16251837e-01, 6.51394503e-01,
           2.53657232e-01, 6.10239013e-01],
          [7.24692398e-01, 6.73522777e-01, 6.46888742e-01,
           8.49017857e-01, 7.46184519e-01],
          [5.03427844e-01, 2.95003279e-01, 7.00059227e-01,
           2.81170082e-01, 6.22114417e-01]],

         [[9.54776820e-01, 6.04065981e-01, 4.22305017e-02,
           2.99374394e-01, 2.10963369e-01],
          [5.17948082e-02, 9.17869031e-02, 5.63344965e-01,
           2.21107852e-01, 9.87620534e-01],
          [8.75935623e-01, 8.15384966e-01, 6.77545328e-01,
           6.44490062e-01, 9.93459373e-01],
          [3.13292559e-01, 8.16941509e-02, 2.72618443e-03,
           2.11901945e-01, 7.28593673e-01],
          [2.41328865e-01, 2.09552561e-01, 2.99096656e-02,
           4.68700609e-02, 4.13442876e-01]]],


        [[[5.91378652e-01, 1.66267706e-01, 7.31467677e-01,
           8.43539957e-01, 5.09965818e-01],
          [8.14713794e-01, 4.10719045e-01, 4.88807372e-01,
           3.44793344e-01, 7.47025250e-01],
          [2.56591447e-01, 8.64396175e-01, 1.26650264e-04,
           9.65326641e-01, 8.37793979e-01],
          [2.18182977e-02, 3.26979073e-01, 8.34534227e-01,
           7.35683748e-01, 9.55985537e-01],
          [3.99283879e-01, 8.92411393e-01, 3.52765450e-01,
           4.31192562e-01, 8.28828604e-01]],

         [[2.32413847e-01, 6.05538828e-01, 6.15736799e-01,
           1.25362686e-01, 4.21990782e-01],
          [5.79025329e-01, 2.30304421e-01, 1.95336475e-01,
           3.02923394e-01, 9.04109791e-01],
          [4.66045623e-01, 4.48525598e-01, 8.96535748e-01,
           5.79458600e-01, 5.01584638e-01],
          [9.98936433e-02, 4.08602077e-01, 3.40961899e-01,
           7.90150110e-01, 6.96602989e-01],
          [5.87669637e-01, 3.53054350e-01, 5.06069282e-01,
           1.73199856e-02, 4.50806446e-01]],

         [[5.25146227e-01, 5.01736348e-02, 2.12786493e-01,
           2.92023489e-01, 1.00747738e-01],
          [9.25808436e-01, 9.93458148e-01, 3.65869523e-01,
           6.65129997e-02, 3.03399392e-01],
          [5.38516715e-01, 2.93553710e-01, 1.36115002e-01,
           9.12957838e-01, 7.36222970e-01],
          [2.67314823e-01, 3.58618501e-01, 2.61961365e-01,
           4.27173721e-01, 8.38527312e-01],
          [9.11332323e-02, 5.86093849e-01, 9.06588167e-01,
           6.12085325e-01, 8.51893863e-01]],

         [[1.56207214e-01, 8.60407182e-01, 6.11479221e-01,
           4.48486178e-01, 7.36601751e-01],
          [2.29426505e-01, 6.53507620e-02, 9.96062370e-01,
           9.73040896e-02, 8.65529157e-01],
          [1.27451054e-02, 5.50234267e-01, 5.28250590e-01,
           2.06080915e-01, 3.88173884e-01],
          [9.32825323e-01, 1.64391728e-01, 7.06676462e-02,
           7.84316496e-01, 4.00575286e-01],
          [3.58730194e-01, 2.50777072e-01, 6.93322518e-01,
           3.76646456e-01, 6.50548444e-01]],

         [[1.61519430e-01, 9.79738184e-01, 5.42486962e-01,
           5.72295890e-01, 6.69063208e-01],
          [1.19755804e-01, 5.77229054e-01, 4.53298645e-01,
           3.20725310e-01, 8.68396927e-01],
          [3.82436839e-01, 8.44478613e-01, 2.07223969e-01,
           3.41733675e-01, 1.03440729e-01],
          [3.74426741e-01, 4.19782759e-01, 7.40912567e-01,
           5.88366929e-01, 2.73507506e-01],
          [9.79575242e-01, 2.95648257e-01, 3.01627056e-01,
           5.75754685e-02, 8.32662826e-01]]]],



       [[[[6.77296588e-01, 5.35286739e-01, 2.70460625e-01,
           1.24806288e-01, 9.89030772e-01],
          [7.50443791e-01, 3.16513324e-01, 8.94254508e-01,
           4.78910537e-01, 5.53428785e-01],
          [9.26644040e-01, 3.93325731e-01, 7.73257593e-01,
           8.37761126e-01, 1.30111863e-01],
          [2.67385559e-02, 3.57011016e-01, 2.70380827e-01,
           8.22737693e-01, 1.50856469e-01],
          [5.22529194e-01, 1.07855033e-02, 4.87544716e-01,
           7.34485533e-01, 9.92904367e-01]],

         [[6.42039676e-01, 5.29912283e-02, 4.46849416e-01,
           4.86618084e-01, 1.37326043e-01],
          [3.18932742e-01, 8.02503571e-01, 1.35763525e-01,
           9.30628364e-02, 1.65200823e-01],
          [4.43686131e-02, 4.75713451e-01, 1.49421009e-01,
           4.17315888e-01, 3.25547014e-01],
          [1.49043024e-01, 8.64151317e-01, 8.72168481e-01,
           9.37682197e-01, 7.58593226e-01],
          [9.73070194e-01, 7.40344259e-01, 9.57421704e-02,
           3.22002875e-01, 7.17098718e-01]],

         [[4.84996303e-01, 9.38647968e-01, 4.13352574e-01,
           4.71573619e-01, 2.38790505e-02],
          [1.35619748e-01, 1.91465906e-01, 8.18703984e-01,
           8.65622213e-02, 9.37345956e-01],
          [2.43396066e-02, 2.01941331e-01, 2.58185042e-01,
           6.13459659e-01, 4.71553603e-01],
          [2.47532684e-02, 9.79578083e-01, 7.38253459e-03,
           3.91144881e-01, 5.02535024e-02],
          [8.26335226e-01, 2.23369388e-01, 2.17412061e-01,
           8.84546960e-01, 9.96033748e-01]],

         [[2.68600313e-01, 1.17320240e-03, 6.48527408e-01,
           7.93920860e-01, 9.38262492e-01],
          [3.80362402e-01, 5.51087795e-01, 7.49413442e-02,
           4.39081815e-01, 4.05130537e-01],
          [1.59646476e-01, 9.07795672e-01, 2.06989458e-01,
           3.86264290e-01, 3.09035865e-01],
          [5.29683574e-01, 4.57765975e-01, 7.12189968e-01,
           2.97124223e-01, 3.71715436e-01],
          [5.97114296e-01, 6.52450111e-01, 7.46635198e-01,
           2.65884698e-01, 4.95624457e-01]],

         [[5.92393850e-01, 1.70830534e-01, 7.82955156e-02,
           8.61357307e-01, 9.42912434e-01],
          [2.28565611e-01, 2.30678300e-01, 8.13662966e-01,
           4.28748635e-01, 4.39875292e-02],
          [4.64245747e-01, 4.77299695e-01, 6.52170482e-01,
           8.39745288e-01, 9.48367978e-01],
          [3.11110462e-01, 5.16368119e-01, 7.62084269e-01,
           6.08031482e-01, 5.41854678e-01],
          [2.19300145e-02, 7.69076081e-01, 4.79115705e-01,
           9.16356713e-01, 7.72053218e-01]]],


        [[[5.00792719e-01, 8.32526739e-01, 4.45682853e-01,
           8.53752958e-01, 7.65266615e-01],
          [6.50018760e-01, 4.78011353e-01, 9.96003712e-01,
           7.11003565e-01, 4.03352263e-01],
          [9.90624883e-01, 3.50935723e-01, 8.35657413e-02,
           2.11058794e-01, 4.19492249e-01],
          [1.37284082e-01, 6.99477589e-01, 1.78794222e-01,
           3.92901085e-01, 6.64523491e-01],
          [9.41705385e-01, 1.73196666e-01, 9.68607759e-01,
           1.16968325e-01, 2.14047151e-01]],

         [[4.87921246e-01, 6.93761671e-01, 7.49335745e-01,
           6.37453316e-01, 8.28477812e-01],
          [1.84912699e-01, 3.65173331e-01, 8.03711613e-01,
           9.12365011e-03, 1.57714348e-01],
          [7.62407818e-01, 4.32322213e-01, 9.71992163e-01,
           9.68460202e-01, 3.48714484e-01],
          [2.76911328e-01, 8.52302946e-01, 5.85924105e-01,
           7.87964754e-01, 5.86006656e-01],
          [4.23196444e-01, 5.32039796e-01, 7.13572286e-01,
           9.99142638e-01, 4.86602614e-01]],

         [[9.94623643e-02, 6.21769265e-02, 5.33649961e-01,
           6.61339168e-02, 2.50532351e-01],
          [8.53483738e-01, 5.54421373e-01, 1.89758257e-01,
           1.81635799e-01, 9.12215289e-01],
          [8.12944625e-01, 8.00482104e-01, 1.78891986e-01,
           1.84433301e-01, 8.65257295e-01],
          [5.23527386e-01, 7.12816032e-01, 6.65685708e-02,
           8.58135922e-03, 8.48948582e-01],
          [8.93100166e-02, 6.09734424e-01, 7.57281121e-01,
           1.54843328e-01, 5.18055715e-02]],

         [[3.67036513e-01, 3.49813673e-01, 7.31930665e-01,
           7.40694937e-01, 8.01021508e-01],
          [5.85265076e-01, 4.43042501e-01, 5.15095744e-01,
           1.00436577e-01, 3.16644640e-01],
          [7.54548139e-01, 2.40594544e-01, 7.62989000e-01,
           8.15112776e-01, 4.17263262e-02],
          [3.69367399e-02, 3.72464889e-01, 1.41321734e-01,
           7.05171300e-01, 9.96219627e-01],
          [3.17238181e-01, 9.92219777e-01, 3.84545564e-01,
           2.78748279e-01, 5.45810586e-02]],

         [[5.58368639e-01, 9.63194797e-01, 7.75339040e-01,
           7.89447630e-01, 9.44148426e-01],
          [1.90341048e-01, 1.71519201e-01, 3.45763444e-01,
           2.70863281e-01, 4.01053255e-02],
          [2.72319606e-01, 1.17981947e-01, 1.07543470e-01,
           6.33604900e-01, 2.88949794e-01],
          [7.70202672e-01, 3.33207452e-01, 5.78570184e-01,
           1.23615992e-01, 7.88069925e-01],
          [8.44145434e-01, 9.77827175e-01, 6.39791733e-01,
           2.04698443e-01, 2.10652221e-01]]],


        [[[2.57042576e-01, 3.60523852e-01, 2.21889390e-01,
           6.35046401e-01, 2.79358159e-01],
          [4.63164913e-01, 4.22320295e-01, 2.57209220e-02,
           4.73745777e-01, 6.04905972e-01],
          [3.91651650e-01, 8.49928749e-02, 9.88845298e-01,
           1.55080902e-01, 3.01321657e-01],
          [7.75958337e-01, 9.88147239e-01, 2.59826386e-01,
           4.92806921e-01, 2.28196168e-01],
          [4.54792458e-01, 8.51000419e-01, 2.93955613e-01,
           8.88426742e-01, 9.76185757e-02]],

         [[5.03582899e-01, 4.74289966e-01, 8.22839286e-01,
           2.73378789e-02, 7.06953469e-01],
          [7.28104788e-01, 5.36585160e-02, 7.01051157e-01,
           7.51714889e-01, 8.16134774e-01],
          [5.45640222e-01, 5.05443457e-01, 7.80092224e-01,
           7.10079659e-01, 4.69447738e-01],
          [3.17634859e-01, 7.49255576e-01, 2.90797265e-01,
           5.25788115e-01, 3.10597101e-01],
          [3.14953839e-01, 1.05471456e-01, 4.16537146e-01,
           1.27144130e-01, 2.56602303e-01]],

         [[9.94456671e-01, 7.65414836e-01, 2.39941016e-01,
           8.10970639e-01, 4.13363219e-01],
          [7.22737833e-01, 4.64936301e-01, 3.21590688e-01,
           1.51989525e-01, 3.74111408e-01],
          [1.38834940e-01, 1.31376886e-01, 9.55031478e-01,
           8.69677758e-01, 1.86951668e-01],
          [2.20116597e-01, 9.59866683e-01, 6.05392572e-01,
           8.09151028e-01, 3.45502559e-01],
          [8.56075955e-01, 7.03122377e-01, 9.85985411e-01,
           4.96119031e-01, 9.95752743e-01]],

         [[2.23487364e-01, 8.11270364e-01, 8.56109222e-01,
           3.86292448e-01, 3.97563498e-02],
          [6.67605700e-01, 5.55216147e-01, 2.49453809e-01,
           1.66894967e-01, 9.58945531e-01],
          [4.10791195e-01, 3.66322445e-01, 3.16620911e-01,
           7.83992802e-01, 2.94371947e-01],
          [9.04387055e-01, 4.72596378e-01, 4.08593739e-01,
           4.59129795e-01, 5.78816222e-01],
          [8.90305708e-01, 6.11515226e-01, 7.91298055e-01,
           6.01957707e-01, 6.47684069e-01]],

         [[2.33943782e-01, 8.11557532e-01, 2.23987010e-01,
           9.37400023e-01, 1.28972613e-02],
          [9.51273364e-01, 4.60799390e-01, 6.36951219e-01,
           2.59664872e-01, 7.75513973e-01],
          [9.69679390e-01, 9.19811326e-01, 8.88378208e-01,
           8.94378184e-01, 3.72986930e-01],
          [2.68947753e-03, 1.48737338e-01, 7.95792161e-01,
           9.14815071e-01, 4.51707485e-01],
          [9.14743932e-01, 8.46910166e-01, 6.20985579e-01,
           5.66496099e-01, 8.40102369e-01]]],


        [[[8.90161729e-01, 6.42119920e-02, 6.95065961e-02,
           5.08938756e-01, 1.55158651e-01],
          [4.54213278e-01, 4.59433040e-01, 9.35128895e-02,
           7.59891745e-01, 4.84154487e-01],
          [9.36559215e-01, 9.82804719e-01, 8.16847326e-01,
           6.68510707e-01, 4.09612029e-01],
          [8.79111199e-01, 3.12371980e-01, 9.22543706e-01,
           5.37491762e-01, 1.73171821e-01],
          [4.49520564e-01, 8.02954473e-01, 9.86391871e-01,
           6.27656467e-01, 5.46538529e-01]],

         [[2.99856684e-01, 1.34410002e-01, 1.51258653e-01,
           9.51935457e-01, 2.44388107e-01],
          [9.79532807e-01, 5.57171619e-01, 1.19566845e-01,
           5.06153275e-01, 3.46421123e-01],
          [6.90791815e-01, 9.33820184e-01, 8.41412258e-02,
           2.41702786e-01, 6.52105338e-01],
          [1.47351568e-01, 8.57172944e-02, 7.86075508e-01,
           1.40111298e-01, 3.83184019e-01],
          [8.71021176e-01, 7.75719767e-02, 7.96011686e-01,
           4.63206600e-01, 4.33245553e-01]],

         [[9.39090356e-01, 1.70442482e-01, 6.03964236e-01,
           6.04862931e-01, 1.04093893e-01],
          [6.25975758e-01, 4.50960247e-01, 9.72337278e-01,
           2.54275990e-01, 8.10504333e-01],
          [2.05595250e-01, 5.12799536e-01, 8.32355470e-01,
           2.72749470e-01, 7.92837191e-01],
          [9.85277300e-01, 3.59222662e-01, 5.07824951e-01,
           7.48695870e-01, 1.55313832e-01],
          [7.81874727e-01, 3.12159214e-01, 9.34488495e-01,
           8.49252809e-01, 7.15872755e-01]],

         [[3.93161517e-01, 3.42236171e-01, 9.02020675e-01,
           4.69110020e-01, 4.88409117e-01],
          [8.72195841e-01, 1.75266101e-01, 4.54146162e-01,
           4.84652352e-02, 3.39888221e-01],
          [3.50878707e-01, 9.22398340e-01, 5.93826134e-01,
           4.70978277e-02, 5.50158600e-01],
          [3.65989379e-01, 7.12478096e-01, 9.33622820e-01,
           6.46557404e-01, 2.67372353e-02],
          [9.59699651e-01, 7.71542771e-01, 1.38290253e-01,
           7.98976769e-01, 3.89306280e-02]],

         [[9.63436738e-01, 2.27019834e-01, 1.41948482e-01,
           2.93091616e-01, 4.75161891e-01],
          [3.72131722e-01, 6.71441856e-01, 6.11624705e-01,
           7.75295733e-01, 2.81050336e-01],
          [8.66187645e-01, 8.28973292e-01, 9.49560263e-01,
           5.06016151e-01, 4.83562148e-01],
          [6.38956500e-01, 8.70501332e-02, 1.89176726e-02,
           2.06424627e-01, 5.25230709e-01],
          [8.80743073e-01, 6.92631616e-01, 7.91517389e-01,
           6.72821151e-01, 5.20601869e-01]]],


        [[[1.37594002e-01, 1.88575750e-01, 4.33758419e-02,
           6.52473905e-02, 9.73242741e-01],
          [9.79361812e-01, 4.16157919e-02, 4.11430109e-01,
           5.09447013e-01, 3.42223253e-01],
          [4.50680939e-01, 1.03593995e-01, 6.90851332e-01,
           2.82062114e-01, 6.90711851e-01],
          [4.63927040e-01, 1.59612162e-01, 9.27573598e-01,
           2.43032048e-01, 8.79750286e-01],
          [8.97281582e-01, 2.74768622e-02, 1.52970052e-01,
           6.01377353e-01, 7.66301684e-02]],

         [[8.45552403e-01, 5.53015004e-01, 5.20802187e-01,
           5.19294448e-01, 7.92804316e-01],
          [4.95137493e-01, 3.15512888e-01, 8.37408262e-01,
           1.94311205e-01, 7.45037588e-01],
          [1.33232830e-01, 6.62418446e-03, 1.01361427e-01,
           3.07942864e-01, 5.93417242e-01],
          [1.94310218e-01, 6.98287844e-01, 8.06190814e-01,
           6.60697678e-01, 8.42410153e-01],
          [1.79264660e-01, 4.56928211e-02, 7.57239806e-02,
           7.95503719e-01, 6.73348335e-01]],

         [[1.60506658e-01, 4.23561432e-01, 8.80427083e-01,
           6.94084846e-01, 1.94836794e-01],
          [1.09198681e-01, 7.11211245e-01, 8.78393108e-03,
           3.84683158e-01, 1.28152945e-01],
          [6.50727219e-01, 9.81392596e-01, 3.53912837e-01,
           6.97556694e-01, 8.94486929e-02],
          [5.05045736e-01, 7.80862594e-02, 6.74305694e-01,
           1.39192904e-01, 5.20696920e-01],
          [5.39233329e-01, 2.59820567e-01, 7.56552621e-01,
           9.62128440e-01, 2.14479030e-03]],

         [[7.42970073e-01, 8.25610630e-01, 5.41490631e-01,
           8.20799925e-02, 2.37561556e-01],
          [5.17388314e-01, 9.14522856e-01, 2.44103700e-01,
           4.94280713e-01, 7.45940890e-01],
          [6.54579323e-01, 7.16277880e-01, 2.12197465e-01,
           2.78222746e-01, 5.45631249e-01],
          [4.15601553e-01, 6.71319161e-01, 9.31895504e-01,
           8.38980216e-02, 6.10681616e-01],
          [1.31787160e-01, 2.31036152e-01, 4.26090463e-01,
           8.46653806e-01, 4.76212492e-01]],

         [[7.06736557e-01, 7.26315194e-01, 3.79161720e-01,
           9.52947573e-01, 6.63025074e-01],
          [1.26772792e-01, 1.06073807e-01, 5.15859871e-01,
           9.82308382e-01, 6.82646778e-01],
          [8.52682947e-01, 4.44876172e-01, 4.82118648e-01,
           4.19300674e-02, 4.03949201e-01],
          [7.27440112e-01, 5.37012340e-01, 1.65396803e-01,
           9.57995923e-01, 1.03222709e-01],
          [9.08177420e-01, 8.71868454e-01, 4.51904847e-01,
           4.37550098e-02, 2.70271281e-01]]],


        [[[5.37908654e-01, 1.67714129e-01, 4.63403768e-01,
           5.26419361e-02, 2.98006588e-01],
          [7.64677296e-01, 3.43025652e-01, 7.51370198e-02,
           2.40326963e-02, 1.33759899e-01],
          [8.66920634e-01, 6.28407173e-01, 7.41689771e-01,
           2.43774163e-01, 8.25664306e-02],
          [9.27901670e-01, 1.26284515e-01, 1.84066181e-01,
           8.67927022e-02, 3.77631817e-01],
          [7.89856570e-01, 7.65292746e-01, 5.99636459e-01,
           6.84063415e-01, 8.33287677e-01]],

         [[6.65747048e-02, 8.71452609e-01, 2.11256771e-01,
           3.86527422e-01, 1.43686576e-01],
          [1.03587125e-01, 1.51193175e-01, 3.08134724e-02,
           2.31729720e-03, 2.94261921e-01],
          [8.17862190e-02, 9.21130041e-01, 6.36172600e-02,
           7.01433835e-01, 8.57612498e-01],
          [7.88649719e-02, 6.84140226e-01, 7.65334161e-01,
           8.13819303e-01, 2.10779365e-01],
          [4.49002214e-01, 4.78944591e-01, 5.22583921e-01,
           3.37575170e-01, 1.55148597e-01]],

         [[2.18319780e-01, 8.92577174e-01, 1.96301366e-01,
           7.00864494e-01, 3.40237012e-01],
          [5.93438229e-01, 6.27871690e-01, 1.91492186e-01,
           4.83862761e-01, 2.86773074e-01],
          [4.06744321e-01, 7.68210078e-01, 2.82914755e-01,
           7.13746047e-01, 9.49395806e-01],
          [8.56507143e-01, 3.53238205e-01, 9.49352588e-01,
           7.21164763e-01, 5.78801045e-01],
          [2.94962591e-01, 2.39538686e-01, 5.28726651e-01,
           1.52978531e-02, 7.10120528e-01]],

         [[9.09485146e-01, 6.77042452e-01, 8.64779204e-01,
           5.73205596e-01, 7.24652210e-01],
          [7.87631487e-01, 7.22101826e-01, 8.33550509e-01,
           4.99444402e-01, 7.92129410e-01],
          [5.74399304e-01, 1.45713136e-01, 9.34480273e-01,
           4.86873035e-01, 3.32546519e-01],
          [2.12705968e-01, 8.30457007e-01, 4.89347529e-01,
           9.03991581e-02, 1.26593980e-01],
          [8.52883098e-01, 6.88435928e-01, 2.86618586e-01,
           1.22211234e-01, 3.46972206e-01]],

         [[5.58892184e-01, 1.22034255e-01, 2.30910783e-01,
           4.55468610e-01, 5.20332087e-01],
          [8.64759736e-01, 5.66005256e-01, 6.73817679e-01,
           8.06570005e-01, 4.74715013e-01],
          [4.24972782e-01, 1.87940539e-01, 2.42585797e-01,
           8.80663104e-01, 1.15747472e-01],
          [2.65141556e-01, 7.40762514e-01, 9.04999904e-02,
           2.24064950e-01, 4.23706622e-01],
          [3.71808798e-01, 3.22175036e-02, 4.50508616e-01,
           7.00693906e-01, 1.89156571e-01]]]]]), array([[[[[0.26600521, 0.83042985, 0.97393615],
          [0.08249258, 0.9391508 , 0.05412781],
          [0.22862007, 0.58703168, 0.8522905 ]],

         [[0.66888579, 0.64985208, 0.53675358],
          [0.46388841, 0.41060665, 0.26072227],
          [0.84427208, 0.6990009 , 0.68968855]],

         [[0.80867037, 0.57198655, 0.7288644 ],
          [0.76429407, 0.89621022, 0.40276039],
          [0.72515598, 0.64668628, 0.41301646]]],


        [[[0.24599412, 0.68649519, 0.62610251],
          [0.02249897, 0.57634127, 0.96563272],
          [0.34484872, 0.82960765, 0.64909563]],

         [[0.75374296, 0.90220024, 0.30933449],
          [0.12401483, 0.32652961, 0.14812186],
          [0.82430816, 0.2618676 , 0.8113362 ]],

         [[0.42335525, 0.29837264, 0.57681777],
          [0.70072463, 0.43914387, 0.19337753],
          [0.71398536, 0.58515024, 0.76212723]]],


        [[[0.73074405, 0.20409507, 0.77129762],
          [0.82248936, 0.64814231, 0.29034486],
          [0.01340914, 0.47855442, 0.218664  ]],

         [[0.98392898, 0.255491  , 0.26401442],
          [0.30778906, 0.60804524, 0.02832316],
          [0.43244776, 0.05281988, 0.20938078]],

         [[0.55781071, 0.33426243, 0.53452546],
          [0.16282388, 0.48915563, 0.54429791],
          [0.17983418, 0.04868647, 0.66032863]]]],



       [[[[0.13401385, 0.65133241, 0.89089626],
          [0.30973807, 0.15298739, 0.13020509],
          [0.92405343, 0.70475622, 0.95244906]],

         [[0.07361232, 0.14683899, 0.35275587],
          [0.49737917, 0.5805295 , 0.48676632],
          [0.98879504, 0.76725013, 0.81415682]],

         [[0.25501888, 0.41883054, 0.67725416],
          [0.94708436, 0.34450694, 0.9189983 ],
          [0.88584808, 0.01937073, 0.22290553]]],


        [[[0.15325157, 0.23456891, 0.46499901],
          [0.95378175, 0.31384807, 0.71766038],
          [0.73326054, 0.6434381 , 0.76728397]],

         [[0.07789928, 0.97959731, 0.12730871],
          [0.06855908, 0.33877544, 0.84126311],
          [0.67426368, 0.77144674, 0.83921258]],

         [[0.54686471, 0.08665861, 0.72862533],
          [0.05205892, 0.2858709 , 0.86289653],
          [0.7925423 , 0.76196177, 0.21644533]]],


        [[[0.58107165, 0.57950325, 0.64168631],
          [0.00239722, 0.01256489, 0.99369057],
          [0.21649471, 0.1422802 , 0.992974  ]],

         [[0.7865086 , 0.61823721, 0.45182919],
          [0.22629082, 0.88792053, 0.72527778],
          [0.19297732, 0.89401809, 0.93716843]],

         [[0.2424937 , 0.93444468, 0.4321969 ],
          [0.15183662, 0.70514813, 0.47562979],
          [0.19639688, 0.53044631, 0.62156995]]]]])], '\nThe value of eps is:', 1, '\nThe out_type is:', None)

======================================================================
ERROR: test_fwd (test_abstract_conv.Grouped_conv_noOptim)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 3009, in perform
    num_groups=self.num_groups)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2256, in conv
    1, val, bval, 0)
ValueError: operands could not be broadcast together with shapes (3,3) (5,5) (3,3) 

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 1546, in test_fwd
    eps=1)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tests\unittest_tools.py", line 92, in verify_grad
    T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gradient.py", line 1780, in verify_grad
    analytic_grad = grad_fn(*[p.copy() for p in pt])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 917, in __call__
    storage_map=getattr(self.fn, 'storage_map', None))
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\link.py", line 325, in raise_with_op
    reraise(exc_type, exc_value, exc_trace)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\six.py", line 702, in reraise
    raise value.with_traceback(tb)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 3009, in perform
    num_groups=self.num_groups)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2256, in conv
    1, val, bval, 0)
ValueError: ('operands could not be broadcast together with shapes (3,3) (5,5) (3,3) \nApply node that caused the error: AbstractConv2d_gradInputs{convdim=2, border_mode=\'valid\', subsample=(1, 1), filter_flip=True, imshp=(None, None, None, None), kshp=(None, None, None, None), filter_dilation=(1, 1), num_groups=3, unshared=False}(input 1, Elemwise{mul}.0, Subtensor{int64::}.0)\nToposort index: 9\nInputs types: [TensorType(float64, 4D), TensorType(float64, 4D), TensorType(int64, vector)]\nInputs shapes: [(6, 2, 3, 3), (5, 6, 3, 3), (2,)]\nInputs strides: [(144, 72, 24, 8), (432, 72, 24, 8), (8,)]\nInputs values: [\'not shown\', \'not shown\', array([5, 5], dtype=int64)]\nOutputs clients: [[\'output\']]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "C:\\Users\\mutation\\Desktop\\theano-testcase\\tests\\test_abstract_conv.py", line 1546, in test_fwd\n    eps=1)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\tests\\unittest_tools.py", line 92, in verify_grad\n    T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1770, in verify_grad\n    disconnected_inputs=\'ignore\')\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 605, in grad\n    grad_dict, wrt, cost_name)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1371, in _populate_grad_dict\n    rval = [access_grad_cache(elem) for elem in wrt]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1371, in <listcomp>\n    rval = [access_grad_cache(elem) for elem in wrt]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1326, in access_grad_cache\n    term = access_term_cache(node)[idx]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1162, in access_term_cache\n    new_output_grads)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.', '\nThe error happened with the following inputs:', [array([[[[0.36398678, 0.70548804, 0.23103497, 0.54827043, 0.3195602 ],
         [0.7302113 , 0.94257233, 0.77442252, 0.86379077, 0.82903615],
         [0.81379647, 0.63166234, 0.68810426, 0.09505542, 0.87637271],
         [0.83280508, 0.42067349, 0.77582558, 0.49097792, 0.52603444],
         [0.71381734, 0.12317237, 0.45279855, 0.14136043, 0.34007602]],

        [[0.23354548, 0.50744427, 0.42741471, 0.53647236, 0.8690842 ],
         [0.84334885, 0.04136067, 0.07753699, 0.36800508, 0.74431332],
         [0.38844287, 0.14635092, 0.37732909, 0.37146278, 0.93263398],
         [0.87870934, 0.63540289, 0.07311182, 0.84731036, 0.85063229],
         [0.33730248, 0.64449643, 0.8330261 , 0.53444522, 0.66108231]],

        [[0.59079962, 0.408068  , 0.22967834, 0.68915406, 0.97929665],
         [0.86124825, 0.85470687, 0.55202809, 0.42364925, 0.18325788],
         [0.42018606, 0.67910563, 0.32292754, 0.87410072, 0.83188017],
         [0.08145924, 0.60184952, 0.86562637, 0.71512086, 0.08951758],
         [0.95654054, 0.00970529, 0.82328371, 0.51948369, 0.11782168]],

        [[0.52863809, 0.67036106, 0.23355256, 0.66000613, 0.11651345],
         [0.3830196 , 0.62431415, 0.29450684, 0.14830011, 0.23563507],
         [0.56410203, 0.92096938, 0.72317778, 0.95357714, 0.2559986 ],
         [0.64372265, 0.3605287 , 0.42098056, 0.41913791, 0.32387905],
         [0.82007703, 0.49586036, 0.93840594, 0.26103986, 0.4649136 ]],

        [[0.91375817, 0.09912558, 0.64623778, 0.4209284 , 0.5679438 ],
         [0.8464573 , 0.17137872, 0.64278201, 0.05816461, 0.17392473],
         [0.80086056, 0.97524422, 0.91764185, 0.93008384, 0.89425348],
         [0.2635315 , 0.49923019, 0.46111572, 0.28216786, 0.62136171],
         [0.01700001, 0.88253447, 0.14659877, 0.40025178, 0.61615813]],

        [[0.588182  , 0.05404416, 0.7534885 , 0.54907551, 0.56045366],
         [0.7671055 , 0.21078897, 0.9736755 , 0.50771937, 0.49097889],
         [0.84919912, 0.31654322, 0.79819363, 0.20894901, 0.00828292],
         [0.64928251, 0.78287426, 0.10600493, 0.43968816, 0.09166968],
         [0.21235807, 0.64837616, 0.60179681, 0.4684203 , 0.12959741]]],


       [[[0.24601389, 0.77644581, 0.94747335, 0.18831673, 0.95207131],
         [0.97450331, 0.59818532, 0.59152573, 0.24403324, 0.33180442],
         [0.43624813, 0.43353388, 0.3261148 , 0.0493971 , 0.85964188],
         [0.79205476, 0.51894757, 0.2194376 , 0.64761314, 0.81083346],
         [0.37593767, 0.1583613 , 0.74428824, 0.59305375, 0.10850424]],

        [[0.2295715 , 0.41988769, 0.93801504, 0.68364089, 0.04064517],
         [0.16947985, 0.51999844, 0.7675624 , 0.25592513, 0.48114321],
         [0.10097116, 0.95411734, 0.02911458, 0.72241687, 0.50596048],
         [0.67985301, 0.03671169, 0.15567476, 0.13844643, 0.0458779 ],
         [0.92677609, 0.15817435, 0.23479392, 0.21824616, 0.49834023]],

        [[0.86638214, 0.3872798 , 0.06933087, 0.05724104, 0.03622071],
         [0.57086973, 0.4123434 , 0.35410939, 0.44043732, 0.23750906],
         [0.2956896 , 0.15874069, 0.68651944, 0.85427246, 0.70742547],
         [0.56301974, 0.33653441, 0.91111082, 0.65449806, 0.20102082],
         [0.20599207, 0.41088069, 0.42617962, 0.89704382, 0.55436945]],

        [[0.68849246, 0.87521812, 0.21226772, 0.98948062, 0.9530048 ],
         [0.8810692 , 0.01994137, 0.4598157 , 0.36101829, 0.13335841],
         [0.49170228, 0.95392698, 0.75732149, 0.44408134, 0.51094693],
         [0.14706215, 0.98637399, 0.01456855, 0.999313  , 0.32814478],
         [0.97366822, 0.3766619 , 0.68695601, 0.12127493, 0.0247109 ]],

        [[0.3492968 , 0.58075402, 0.38338364, 0.26009297, 0.23844454],
         [0.84709661, 0.12195688, 0.51540942, 0.04103995, 0.06012968],
         [0.84378299, 0.48394651, 0.80146633, 0.43896285, 0.11752676],
         [0.35216783, 0.09255172, 0.18612307, 0.49431496, 0.91610964],
         [0.20047585, 0.8194431 , 0.37848302, 0.91015635, 0.40633904]],

        [[0.59393425, 0.8940611 , 0.90440445, 0.75526531, 0.94220927],
         [0.08620036, 0.87430716, 0.52759224, 0.80722121, 0.41686144],
         [0.68947264, 0.66565195, 0.78864056, 0.86836358, 0.17096658],
         [0.69607637, 0.29628146, 0.31404761, 0.80328932, 0.29179764],
         [0.53529825, 0.72467154, 0.56093071, 0.55939088, 0.32473573]]],


       [[[0.08934504, 0.08764373, 0.84816538, 0.28586832, 0.6709421 ],
         [0.79986518, 0.30682305, 0.42572245, 0.29296549, 0.52236999],
         [0.9380497 , 0.06839887, 0.04107717, 0.06645372, 0.04138537],
         [0.72973743, 0.64079485, 0.19936767, 0.51070703, 0.99477012],
         [0.70049702, 0.02066147, 0.17827522, 0.66550871, 0.305031  ]],

        [[0.94967251, 0.48582589, 0.16920526, 0.79285181, 0.30385217],
         [0.41101116, 0.92008796, 0.51347874, 0.57071837, 0.9652707 ],
         [0.57790621, 0.71919026, 0.80227799, 0.00634026, 0.91055538],
         [0.23698235, 0.09646519, 0.34643661, 0.63814604, 0.62045727],
         [0.26789398, 0.3910099 , 0.08061318, 0.41207849, 0.74144541]],

        [[0.1353494 , 0.27341393, 0.03542599, 0.42413226, 0.13289948],
         [0.82478808, 0.17857838, 0.43939735, 0.06645644, 0.24663563],
         [0.79493822, 0.52490979, 0.34045301, 0.53797646, 0.75975521],
         [0.30765969, 0.43699149, 0.70807541, 0.90023554, 0.86306702],
         [0.08405289, 0.57291703, 0.40535822, 0.54225641, 0.02076264]],

        [[0.92698558, 0.42561029, 0.01621585, 0.29405   , 0.67385457],
         [0.392127  , 0.86358335, 0.84178091, 0.62572733, 0.39392474],
         [0.95226946, 0.92248482, 0.09590177, 0.40544916, 0.09754673],
         [0.57960793, 0.44384025, 0.15601776, 0.55353505, 0.34606006],
         [0.74474487, 0.23685693, 0.4342994 , 0.73492532, 0.31204071]],

        [[0.48146642, 0.79037419, 0.31327322, 0.6699156 , 0.11374785],
         [0.26786318, 0.67601651, 0.89896688, 0.93110595, 0.35916609],
         [0.9537354 , 0.56391595, 0.8777379 , 0.19202416, 0.52299754],
         [0.62150589, 0.06079509, 0.01869926, 0.298045  , 0.50473419],
         [0.29961557, 0.44283401, 0.38418648, 0.06549254, 0.32960424]],

        [[0.72942794, 0.55509967, 0.5288396 , 0.20307535, 0.9765716 ],
         [0.15416925, 0.3708895 , 0.22272072, 0.36039982, 0.48498188],
         [0.24948877, 0.9814008 , 0.9433964 , 0.79067807, 0.67931535],
         [0.09682639, 0.262803  , 0.99367036, 0.71032453, 0.3901081 ],
         [0.56717598, 0.08951013, 0.44073919, 0.10495735, 0.68183782]]],


       [[[0.31150283, 0.66919707, 0.98841389, 0.3930208 , 0.29226331],
         [0.46756277, 0.29031652, 0.84918804, 0.712163  , 0.34929942],
         [0.45208028, 0.42877569, 0.60850074, 0.73609298, 0.35253624],
         [0.35601395, 0.59136704, 0.82312425, 0.65087742, 0.57607829],
         [0.50310554, 0.09924719, 0.27264032, 0.03344569, 0.70604898]],

        [[0.64870168, 0.41037587, 0.00773816, 0.58266509, 0.74501867],
         [0.92419115, 0.09815225, 0.03236548, 0.106822  , 0.17913859],
         [0.17518167, 0.20578784, 0.3271364 , 0.4913322 , 0.48687574],
         [0.5032574 , 0.28815934, 0.47458508, 0.06431285, 0.3308476 ],
         [0.48623288, 0.29528988, 0.37818203, 0.5417532 , 0.40010546]],

        [[0.76240955, 0.47955264, 0.15861623, 0.13080003, 0.48172727],
         [0.24642311, 0.92249391, 0.57461442, 0.07461399, 0.37269671],
         [0.19748517, 0.63225866, 0.94114428, 0.82023108, 0.26307149],
         [0.86991022, 0.39742133, 0.88811711, 0.71855562, 0.66002236],
         [0.97249178, 0.09441107, 0.30465039, 0.0762231 , 0.78761657]],

        [[0.64670505, 0.96267341, 0.95592698, 0.86098628, 0.95262915],
         [0.04407321, 0.77759974, 0.57376583, 0.71569645, 0.15618335],
         [0.53053071, 0.34794832, 0.14246731, 0.83683726, 0.39317949],
         [0.81061229, 0.61630338, 0.63907216, 0.12253074, 0.35538833],
         [0.04429985, 0.15362478, 0.19122078, 0.82903655, 0.96854568]],

        [[0.43481821, 0.31767392, 0.77021078, 0.28244732, 0.38467936],
         [0.22577154, 0.59839337, 0.93039134, 0.13158445, 0.31302627],
         [0.36936329, 0.86175496, 0.27551035, 0.8822734 , 0.51128198],
         [0.77603478, 0.05065324, 0.01078841, 0.36965792, 0.56117075],
         [0.29515017, 0.40854509, 0.2270829 , 0.07465744, 0.89673015]],

        [[0.65823359, 0.58300058, 0.34835623, 0.6598614 , 0.32660515],
         [0.69166244, 0.21705726, 0.71085574, 0.49495187, 0.85774804],
         [0.59884657, 0.70694106, 0.24421088, 0.51280413, 0.1258849 ],
         [0.47038107, 0.39499497, 0.16628639, 0.48889568, 0.66479674],
         [0.33969304, 0.31799934, 0.2297029 , 0.05338387, 0.66195348]]],


       [[[0.11347362, 0.16848512, 0.9107186 , 0.34193589, 0.46852936],
         [0.06549789, 0.94881844, 0.45298171, 0.52923887, 0.49652562],
         [0.45500212, 0.59928577, 0.26176364, 0.86341968, 0.40887141],
         [0.52253318, 0.52862963, 0.02526051, 0.69934208, 0.43672267],
         [0.06465723, 0.30489059, 0.11921288, 0.40982387, 0.87844812]],

        [[0.36521498, 0.779061  , 0.72191177, 0.74037803, 0.38926291],
         [0.38578523, 0.51769566, 0.74273174, 0.46173375, 0.63698593],
         [0.9206278 , 0.58796342, 0.71476336, 0.16907287, 0.61311718],
         [0.31318319, 0.12316385, 0.61023826, 0.73298428, 0.64512313],
         [0.48285432, 0.58613644, 0.08857069, 0.71296366, 0.69024353]],

        [[0.10364318, 0.81836811, 0.18747622, 0.79867537, 0.84509177],
         [0.04843805, 0.45924854, 0.66491386, 0.07354179, 0.50894196],
         [0.02303884, 0.62830588, 0.73496715, 0.97180981, 0.96178439],
         [0.2374969 , 0.95344329, 0.79215238, 0.34187733, 0.83511901],
         [0.04164837, 0.59160107, 0.37956115, 0.83265946, 0.29193523]],

        [[0.81490331, 0.29666307, 0.38133984, 0.04289927, 0.90272136],
         [0.37460166, 0.98899718, 0.64508647, 0.82934657, 0.18699918],
         [0.66854153, 0.9021616 , 0.2385075 , 0.88599241, 0.33782956],
         [0.67034004, 0.73646854, 0.09175239, 0.26982124, 0.28174549],
         [0.9985896 , 0.67200059, 0.67909835, 0.05733078, 0.35599393]],

        [[0.95902684, 0.95464241, 0.31343219, 0.08617922, 0.19235828],
         [0.00246891, 0.98110502, 0.84164381, 0.23701314, 0.96539315],
         [0.30231446, 0.19268657, 0.18193401, 0.16225955, 0.04505666],
         [0.20369199, 0.11571967, 0.64883506, 0.7791346 , 0.19415013],
         [0.26672451, 0.85118467, 0.69524114, 0.46434902, 0.74577984]],

        [[0.48684707, 0.55732505, 0.77993236, 0.15788989, 0.70161665],
         [0.24979831, 0.67232796, 0.13414867, 0.86436928, 0.47698469],
         [0.93773976, 0.46846654, 0.29164279, 0.81977524, 0.42244486],
         [0.62098696, 0.0256673 , 0.96064018, 0.46138222, 0.77588756],
         [0.94258501, 0.26644057, 0.6987471 , 0.92208432, 0.71908334]]]]), array([[[[0.99405773, 0.67200431, 0.89112556],
         [0.95258474, 0.07292227, 0.52059923],
         [0.19863222, 0.19096511, 0.30195514]],

        [[0.29425999, 0.67650215, 0.53270304],
         [0.38650695, 0.15317459, 0.53713281],
         [0.14288874, 0.6167232 , 0.65723012]]],


       [[[0.17604306, 0.59741602, 0.47802721],
         [0.19335807, 0.01746181, 0.49931066],
         [0.68606468, 0.3364735 , 0.40813849]],

        [[0.36285033, 0.21554295, 0.78310389],
         [0.91699357, 0.06708089, 0.73887744],
         [0.66651497, 0.93194772, 0.19546975]]],


       [[[0.31254389, 0.84968813, 0.73915316],
         [0.82383094, 0.90650928, 0.65034284],
         [0.06183454, 0.46930783, 0.39784298]],

        [[0.37754174, 0.23307457, 0.13700117],
         [0.89633624, 0.57585313, 0.914046  ],
         [0.24360865, 0.9494913 , 0.38645519]]],


       [[[0.62369319, 0.69907392, 0.637689  ],
         [0.74880999, 0.36539177, 0.72346744],
         [0.56749412, 0.84165785, 0.84496938]],

        [[0.25003059, 0.72378177, 0.26561491],
         [0.1570533 , 0.61887558, 0.79133292],
         [0.14202812, 0.72753901, 0.01316105]]],


       [[[0.12749649, 0.68111966, 0.30113528],
         [0.27567208, 0.55361183, 0.19179808],
         [0.89546358, 0.97648769, 0.94504658]],

        [[0.1353476 , 0.02231523, 0.72994998],
         [0.37285319, 0.87749883, 0.75685146],
         [0.27747287, 0.6454367 , 0.56461069]]],


       [[[0.75353215, 0.00985136, 0.66263013],
         [0.22746452, 0.25931153, 0.96881602],
         [0.486736  , 0.64912165, 0.73616685]],

        [[0.80111855, 0.15527615, 0.78775164],
         [0.59970563, 0.98081412, 0.34374561],
         [0.30362474, 0.72838835, 0.49278871]]]])], '\nThe value of eps is:', 1, '\nThe out_type is:', None)

======================================================================
ERROR: test_gradinputs (test_abstract_conv.Grouped_conv_noOptim)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 3009, in perform
    num_groups=self.num_groups)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2256, in conv
    1, val, bval, 0)
ValueError: operands could not be broadcast together with shapes (3,3) (5,5) (3,3) 

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 1621, in test_gradinputs
    grouped_output = grouped_func(kern, top)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 917, in __call__
    storage_map=getattr(self.fn, 'storage_map', None))
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\link.py", line 325, in raise_with_op
    reraise(exc_type, exc_value, exc_trace)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\six.py", line 702, in reraise
    raise value.with_traceback(tb)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 3009, in perform
    num_groups=self.num_groups)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2256, in conv
    1, val, bval, 0)
ValueError: operands could not be broadcast together with shapes (3,3) (5,5) (3,3) 
Apply node that caused the error: AbstractConv2d_gradInputs{convdim=2, border_mode='valid', subsample=(1, 1), filter_flip=True, imshp=(None, None, None, None), kshp=(None, None, None, None), filter_dilation=(1, 1), num_groups=3, unshared=False}(kern, top, TensorConstant{(2,) of 5})
Toposort index: 0
Inputs types: [TensorType(float64, 4D), TensorType(float64, 4D), TensorType(int32, vector)]
Inputs shapes: [(6, 2, 3, 3), (5, 6, 3, 3), (2,)]
Inputs strides: [(144, 72, 24, 8), (432, 72, 24, 8), (4,)]
Inputs values: ['not shown', 'not shown', array([5, 5])]
Outputs clients: [['output']]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 122, in run
    test(result)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 84, in __call__
    return self.run(*args, **kwds)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 122, in run
    test(result)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 84, in __call__
    return self.run(*args, **kwds)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 122, in run
    test(result)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\case.py", line 653, in __call__
    return self.run(*args, **kwds)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\case.py", line 605, in run
    testMethod()
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 1617, in test_gradinputs
    imshp[-self.convdim:]))

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.

======================================================================
ERROR: test_gradweights (test_abstract_conv.Grouped_conv_noOptim)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 3009, in perform
    num_groups=self.num_groups)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2256, in conv
    1, val, bval, 0)
ValueError: operands could not be broadcast together with shapes (3,3) (5,5) (3,3) 

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 1595, in test_gradweights
    mode=self.mode, eps=1)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tests\unittest_tools.py", line 92, in verify_grad
    T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gradient.py", line 1780, in verify_grad
    analytic_grad = grad_fn(*[p.copy() for p in pt])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 917, in __call__
    storage_map=getattr(self.fn, 'storage_map', None))
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\link.py", line 325, in raise_with_op
    reraise(exc_type, exc_value, exc_trace)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\six.py", line 702, in reraise
    raise value.with_traceback(tb)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 3009, in perform
    num_groups=self.num_groups)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2256, in conv
    1, val, bval, 0)
ValueError: ('operands could not be broadcast together with shapes (3,3) (5,5) (3,3) \nApply node that caused the error: AbstractConv2d_gradInputs{convdim=2, border_mode=\'valid\', subsample=(1, 1), filter_flip=True, imshp=(None, None, None, None), kshp=(None, None, None, None), filter_dilation=(1, 1), num_groups=3, unshared=False}(Elemwise{mul}.0, input 1, Subtensor{int64::}.0)\nToposort index: 9\nInputs types: [TensorType(float64, 4D), TensorType(float64, 4D), TensorType(int64, vector)]\nInputs shapes: [(6, 2, 3, 3), (5, 6, 3, 3), (2,)]\nInputs strides: [(144, 72, 24, 8), (432, 72, 24, 8), (8,)]\nInputs values: [\'not shown\', \'not shown\', array([5, 5], dtype=int64)]\nOutputs clients: [[\'output\']]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "C:\\Users\\mutation\\Desktop\\theano-testcase\\tests\\test_abstract_conv.py", line 1595, in test_gradweights\n    mode=self.mode, eps=1)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\tests\\unittest_tools.py", line 92, in verify_grad\n    T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1770, in verify_grad\n    disconnected_inputs=\'ignore\')\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 605, in grad\n    grad_dict, wrt, cost_name)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1371, in _populate_grad_dict\n    rval = [access_grad_cache(elem) for elem in wrt]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1371, in <listcomp>\n    rval = [access_grad_cache(elem) for elem in wrt]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1326, in access_grad_cache\n    term = access_term_cache(node)[idx]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1162, in access_term_cache\n    new_output_grads)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.', '\nThe error happened with the following inputs:', [array([[[[2.05787839e-01, 3.27136404e-01, 4.91332200e-01,
          4.86875743e-01, 5.03257399e-01],
         [2.88159344e-01, 4.74585078e-01, 6.43128463e-02,
          3.30847597e-01, 4.86232877e-01],
         [2.95289884e-01, 3.78182033e-01, 5.41753200e-01,
          4.00105456e-01, 7.62409550e-01],
         [4.79552642e-01, 1.58616227e-01, 1.30800034e-01,
          4.81727275e-01, 2.46423107e-01],
         [9.22493913e-01, 5.74614423e-01, 7.46139945e-02,
          3.72696707e-01, 1.97485174e-01]],

        [[6.32258659e-01, 9.41144283e-01, 8.20231081e-01,
          2.63071489e-01, 8.69910223e-01],
         [3.97421333e-01, 8.88117110e-01, 7.18555621e-01,
          6.60022356e-01, 9.72491779e-01],
         [9.44110717e-02, 3.04650389e-01, 7.62230976e-02,
          7.87616575e-01, 6.46705051e-01],
         [9.62673408e-01, 9.55926979e-01, 8.60986280e-01,
          9.52629154e-01, 4.40732120e-02],
         [7.77599744e-01, 5.73765832e-01, 7.15696451e-01,
          1.56183350e-01, 5.30530707e-01]],

        [[3.47948320e-01, 1.42467306e-01, 8.36837257e-01,
          3.93179487e-01, 8.10612292e-01],
         [6.16303380e-01, 6.39072158e-01, 1.22530738e-01,
          3.55388331e-01, 4.42998481e-02],
         [1.53624784e-01, 1.91220784e-01, 8.29036549e-01,
          9.68545681e-01, 4.34818214e-01],
         [3.17673921e-01, 7.70210776e-01, 2.82447319e-01,
          3.84679362e-01, 2.25771544e-01],
         [5.98393375e-01, 9.30391339e-01, 1.31584453e-01,
          3.13026274e-01, 3.69363286e-01]],

        [[8.61754960e-01, 2.75510355e-01, 8.82273401e-01,
          5.11281980e-01, 7.76034776e-01],
         [5.06532405e-02, 1.07884117e-02, 3.69657924e-01,
          5.61170750e-01, 2.95150168e-01],
         [4.08545086e-01, 2.27082896e-01, 7.46574394e-02,
          8.96730153e-01, 6.58233590e-01],
         [5.83000576e-01, 3.48356234e-01, 6.59861397e-01,
          3.26605146e-01, 6.91662436e-01],
         [2.17057256e-01, 7.10855736e-01, 4.94951866e-01,
          8.57748038e-01, 5.98846572e-01]],

        [[7.06941063e-01, 2.44210884e-01, 5.12804126e-01,
          1.25884902e-01, 4.70381068e-01],
         [3.94994971e-01, 1.66286388e-01, 4.88895684e-01,
          6.64796742e-01, 3.39693038e-01],
         [3.17999337e-01, 2.29702904e-01, 5.33838657e-02,
          6.61953482e-01, 1.13473618e-01],
         [1.68485116e-01, 9.10718598e-01, 3.41935887e-01,
          4.68529364e-01, 6.54978910e-02],
         [9.48818441e-01, 4.52981712e-01, 5.29238872e-01,
          4.96525621e-01, 4.55002115e-01]],

        [[5.99285769e-01, 2.61763641e-01, 8.63419682e-01,
          4.08871408e-01, 5.22533178e-01],
         [5.28629633e-01, 2.52605146e-02, 6.99342080e-01,
          4.36722674e-01, 6.46572283e-02],
         [3.04890587e-01, 1.19212884e-01, 4.09823871e-01,
          8.78448118e-01, 3.65214981e-01],
         [7.79061002e-01, 7.21911773e-01, 7.40378029e-01,
          3.89262911e-01, 3.85785226e-01],
         [5.17695656e-01, 7.42731740e-01, 4.61733748e-01,
          6.36985930e-01, 9.20627801e-01]]],


       [[[5.87963420e-01, 7.14763357e-01, 1.69072869e-01,
          6.13117179e-01, 3.13183195e-01],
         [1.23163853e-01, 6.10238260e-01, 7.32984277e-01,
          6.45123130e-01, 4.82854315e-01],
         [5.86136441e-01, 8.85706866e-02, 7.12963655e-01,
          6.90243533e-01, 1.03643176e-01],
         [8.18368111e-01, 1.87476217e-01, 7.98675371e-01,
          8.45091767e-01, 4.84380547e-02],
         [4.59248537e-01, 6.64913860e-01, 7.35417865e-02,
          5.08941958e-01, 2.30388402e-02]],

        [[6.28305878e-01, 7.34967147e-01, 9.71809815e-01,
          9.61784391e-01, 2.37496902e-01],
         [9.53443291e-01, 7.92152384e-01, 3.41877334e-01,
          8.35119006e-01, 4.16483719e-02],
         [5.91601075e-01, 3.79561150e-01, 8.32659463e-01,
          2.91935227e-01, 8.14903314e-01],
         [2.96663069e-01, 3.81339839e-01, 4.28992675e-02,
          9.02721357e-01, 3.74601660e-01],
         [9.88997180e-01, 6.45086473e-01, 8.29346568e-01,
          1.86999182e-01, 6.68541527e-01]],

        [[9.02161601e-01, 2.38507500e-01, 8.85992407e-01,
          3.37829559e-01, 6.70340038e-01],
         [7.36468542e-01, 9.17523893e-02, 2.69821243e-01,
          2.81745492e-01, 9.98589599e-01],
         [6.72000587e-01, 6.79098353e-01, 5.73307780e-02,
          3.55993925e-01, 9.59026843e-01],
         [9.54642410e-01, 3.13432186e-01, 8.61792220e-02,
          1.92358280e-01, 2.46890509e-03],
         [9.81105020e-01, 8.41643807e-01, 2.37013135e-01,
          9.65393149e-01, 3.02314459e-01]],

        [[1.92686572e-01, 1.81934009e-01, 1.62259551e-01,
          4.50566573e-02, 2.03691991e-01],
         [1.15719669e-01, 6.48835061e-01, 7.79134602e-01,
          1.94150128e-01, 2.66724515e-01],
         [8.51184674e-01, 6.95241140e-01, 4.64349019e-01,
          7.45779835e-01, 4.86847072e-01],
         [5.57325051e-01, 7.79932363e-01, 1.57889892e-01,
          7.01616652e-01, 2.49798305e-01],
         [6.72327963e-01, 1.34148674e-01, 8.64369285e-01,
          4.76984695e-01, 9.37739761e-01]],

        [[4.68466541e-01, 2.91642792e-01, 8.19775241e-01,
          4.22444858e-01, 6.20986958e-01],
         [2.56672980e-02, 9.60640183e-01, 4.61382224e-01,
          7.75887561e-01, 9.42585014e-01],
         [2.66440570e-01, 6.98747100e-01, 9.22084321e-01,
          7.19083339e-01, 9.94057725e-01],
         [6.72004315e-01, 8.91125564e-01, 9.52584736e-01,
          7.29222718e-02, 5.20599228e-01],
         [1.98632225e-01, 1.90965110e-01, 3.01955140e-01,
          2.94259986e-01, 6.76502146e-01]],

        [[5.32703045e-01, 3.86506952e-01, 1.53174586e-01,
          5.37132806e-01, 1.42888741e-01],
         [6.16723197e-01, 6.57230122e-01, 1.76043057e-01,
          5.97416015e-01, 4.78027212e-01],
         [1.93358073e-01, 1.74618126e-02, 4.99310661e-01,
          6.86064676e-01, 3.36473500e-01],
         [4.08138490e-01, 3.62850330e-01, 2.15542946e-01,
          7.83103893e-01, 9.16993575e-01],
         [6.70808926e-02, 7.38877443e-01, 6.66514974e-01,
          9.31947725e-01, 1.95469755e-01]]],


       [[[3.12543887e-01, 8.49688133e-01, 7.39153161e-01,
          8.23830941e-01, 9.06509283e-01],
         [6.50342836e-01, 6.18345368e-02, 4.69307830e-01,
          3.97842975e-01, 3.77541741e-01],
         [2.33074575e-01, 1.37001168e-01, 8.96336244e-01,
          5.75853128e-01, 9.14045999e-01],
         [2.43608647e-01, 9.49491305e-01, 3.86455187e-01,
          6.23693188e-01, 6.99073919e-01],
         [6.37688997e-01, 7.48809986e-01, 3.65391770e-01,
          7.23467439e-01, 5.67494118e-01]],

        [[8.41657848e-01, 8.44969380e-01, 2.50030592e-01,
          7.23781768e-01, 2.65614912e-01],
         [1.57053296e-01, 6.18875585e-01, 7.91332920e-01,
          1.42028120e-01, 7.27539005e-01],
         [1.31610482e-02, 1.27496494e-01, 6.81119655e-01,
          3.01135279e-01, 2.75672084e-01],
         [5.53611832e-01, 1.91798076e-01, 8.95463579e-01,
          9.76487690e-01, 9.45046577e-01],
         [1.35347595e-01, 2.23152343e-02, 7.29949978e-01,
          3.72853188e-01, 8.77498831e-01]],

        [[7.56851456e-01, 2.77472867e-01, 6.45436701e-01,
          5.64610688e-01, 7.53532150e-01],
         [9.85136278e-03, 6.62630133e-01, 2.27464521e-01,
          2.59311534e-01, 9.68816023e-01],
         [4.86735995e-01, 6.49121645e-01, 7.36166850e-01,
          8.01118548e-01, 1.55276149e-01],
         [7.87751640e-01, 5.99705633e-01, 9.80814115e-01,
          3.43745610e-01, 3.03624736e-01],
         [7.28388353e-01, 4.92788709e-01, 9.43837567e-02,
          8.20526800e-01, 8.22199535e-01]],

        [[9.91070424e-01, 8.08132302e-01, 7.32927491e-01,
          8.46980383e-01, 7.65018622e-01],
         [6.84647523e-01, 8.25862701e-01, 8.21888709e-01,
          2.86487935e-02, 6.51405421e-01],
         [6.78007619e-01, 4.26152110e-01, 2.99122388e-03,
          6.69883583e-01, 7.73797116e-01],
         [9.74091836e-03, 8.39078042e-01, 2.89512282e-01,
          1.64799543e-01, 4.97916517e-01],
         [7.01725518e-01, 7.61153505e-01, 4.93240424e-02,
          9.95318855e-01, 9.90733501e-01]],

        [[7.31547408e-02, 7.51159197e-01, 2.01034023e-01,
          4.47066823e-01, 8.77123135e-01],
         [5.50155647e-01, 4.32496093e-01, 5.32532562e-01,
          6.41490772e-01, 1.24568334e-02],
         [1.99156688e-01, 8.47559980e-01, 4.94771164e-01,
          5.78545834e-01, 6.74808060e-01],
         [9.94017857e-01, 7.46375990e-01, 6.03306818e-02,
          9.94375563e-01, 6.07305065e-01],
         [1.81706839e-01, 1.27471052e-01, 9.39047411e-01,
          7.62565358e-01, 4.16251837e-01]],

        [[6.51394503e-01, 2.53657232e-01, 6.10239013e-01,
          7.24692398e-01, 6.73522777e-01],
         [6.46888742e-01, 8.49017857e-01, 7.46184519e-01,
          5.03427844e-01, 2.95003279e-01],
         [7.00059227e-01, 2.81170082e-01, 6.22114417e-01,
          9.54776820e-01, 6.04065981e-01],
         [4.22305017e-02, 2.99374394e-01, 2.10963369e-01,
          5.17948082e-02, 9.17869031e-02],
         [5.63344965e-01, 2.21107852e-01, 9.87620534e-01,
          8.75935623e-01, 8.15384966e-01]]],


       [[[6.77545328e-01, 6.44490062e-01, 9.93459373e-01,
          3.13292559e-01, 8.16941509e-02],
         [2.72618443e-03, 2.11901945e-01, 7.28593673e-01,
          2.41328865e-01, 2.09552561e-01],
         [2.99096656e-02, 4.68700609e-02, 4.13442876e-01,
          5.91378652e-01, 1.66267706e-01],
         [7.31467677e-01, 8.43539957e-01, 5.09965818e-01,
          8.14713794e-01, 4.10719045e-01],
         [4.88807372e-01, 3.44793344e-01, 7.47025250e-01,
          2.56591447e-01, 8.64396175e-01]],

        [[1.26650264e-04, 9.65326641e-01, 8.37793979e-01,
          2.18182977e-02, 3.26979073e-01],
         [8.34534227e-01, 7.35683748e-01, 9.55985537e-01,
          3.99283879e-01, 8.92411393e-01],
         [3.52765450e-01, 4.31192562e-01, 8.28828604e-01,
          2.32413847e-01, 6.05538828e-01],
         [6.15736799e-01, 1.25362686e-01, 4.21990782e-01,
          5.79025329e-01, 2.30304421e-01],
         [1.95336475e-01, 3.02923394e-01, 9.04109791e-01,
          4.66045623e-01, 4.48525598e-01]],

        [[8.96535748e-01, 5.79458600e-01, 5.01584638e-01,
          9.98936433e-02, 4.08602077e-01],
         [3.40961899e-01, 7.90150110e-01, 6.96602989e-01,
          5.87669637e-01, 3.53054350e-01],
         [5.06069282e-01, 1.73199856e-02, 4.50806446e-01,
          5.25146227e-01, 5.01736348e-02],
         [2.12786493e-01, 2.92023489e-01, 1.00747738e-01,
          9.25808436e-01, 9.93458148e-01],
         [3.65869523e-01, 6.65129997e-02, 3.03399392e-01,
          5.38516715e-01, 2.93553710e-01]],

        [[1.36115002e-01, 9.12957838e-01, 7.36222970e-01,
          2.67314823e-01, 3.58618501e-01],
         [2.61961365e-01, 4.27173721e-01, 8.38527312e-01,
          9.11332323e-02, 5.86093849e-01],
         [9.06588167e-01, 6.12085325e-01, 8.51893863e-01,
          1.56207214e-01, 8.60407182e-01],
         [6.11479221e-01, 4.48486178e-01, 7.36601751e-01,
          2.29426505e-01, 6.53507620e-02],
         [9.96062370e-01, 9.73040896e-02, 8.65529157e-01,
          1.27451054e-02, 5.50234267e-01]],

        [[5.28250590e-01, 2.06080915e-01, 3.88173884e-01,
          9.32825323e-01, 1.64391728e-01],
         [7.06676462e-02, 7.84316496e-01, 4.00575286e-01,
          3.58730194e-01, 2.50777072e-01],
         [6.93322518e-01, 3.76646456e-01, 6.50548444e-01,
          1.61519430e-01, 9.79738184e-01],
         [5.42486962e-01, 5.72295890e-01, 6.69063208e-01,
          1.19755804e-01, 5.77229054e-01],
         [4.53298645e-01, 3.20725310e-01, 8.68396927e-01,
          3.82436839e-01, 8.44478613e-01]],

        [[2.07223969e-01, 3.41733675e-01, 1.03440729e-01,
          3.74426741e-01, 4.19782759e-01],
         [7.40912567e-01, 5.88366929e-01, 2.73507506e-01,
          9.79575242e-01, 2.95648257e-01],
         [3.01627056e-01, 5.75754685e-02, 8.32662826e-01,
          6.77296588e-01, 5.35286739e-01],
         [2.70460625e-01, 1.24806288e-01, 9.89030772e-01,
          7.50443791e-01, 3.16513324e-01],
         [8.94254508e-01, 4.78910537e-01, 5.53428785e-01,
          9.26644040e-01, 3.93325731e-01]]],


       [[[7.73257593e-01, 8.37761126e-01, 1.30111863e-01,
          2.67385559e-02, 3.57011016e-01],
         [2.70380827e-01, 8.22737693e-01, 1.50856469e-01,
          5.22529194e-01, 1.07855033e-02],
         [4.87544716e-01, 7.34485533e-01, 9.92904367e-01,
          6.42039676e-01, 5.29912283e-02],
         [4.46849416e-01, 4.86618084e-01, 1.37326043e-01,
          3.18932742e-01, 8.02503571e-01],
         [1.35763525e-01, 9.30628364e-02, 1.65200823e-01,
          4.43686131e-02, 4.75713451e-01]],

        [[1.49421009e-01, 4.17315888e-01, 3.25547014e-01,
          1.49043024e-01, 8.64151317e-01],
         [8.72168481e-01, 9.37682197e-01, 7.58593226e-01,
          9.73070194e-01, 7.40344259e-01],
         [9.57421704e-02, 3.22002875e-01, 7.17098718e-01,
          4.84996303e-01, 9.38647968e-01],
         [4.13352574e-01, 4.71573619e-01, 2.38790505e-02,
          1.35619748e-01, 1.91465906e-01],
         [8.18703984e-01, 8.65622213e-02, 9.37345956e-01,
          2.43396066e-02, 2.01941331e-01]],

        [[2.58185042e-01, 6.13459659e-01, 4.71553603e-01,
          2.47532684e-02, 9.79578083e-01],
         [7.38253459e-03, 3.91144881e-01, 5.02535024e-02,
          8.26335226e-01, 2.23369388e-01],
         [2.17412061e-01, 8.84546960e-01, 9.96033748e-01,
          2.68600313e-01, 1.17320240e-03],
         [6.48527408e-01, 7.93920860e-01, 9.38262492e-01,
          3.80362402e-01, 5.51087795e-01],
         [7.49413442e-02, 4.39081815e-01, 4.05130537e-01,
          1.59646476e-01, 9.07795672e-01]],

        [[2.06989458e-01, 3.86264290e-01, 3.09035865e-01,
          5.29683574e-01, 4.57765975e-01],
         [7.12189968e-01, 2.97124223e-01, 3.71715436e-01,
          5.97114296e-01, 6.52450111e-01],
         [7.46635198e-01, 2.65884698e-01, 4.95624457e-01,
          5.92393850e-01, 1.70830534e-01],
         [7.82955156e-02, 8.61357307e-01, 9.42912434e-01,
          2.28565611e-01, 2.30678300e-01],
         [8.13662966e-01, 4.28748635e-01, 4.39875292e-02,
          4.64245747e-01, 4.77299695e-01]],

        [[6.52170482e-01, 8.39745288e-01, 9.48367978e-01,
          3.11110462e-01, 5.16368119e-01],
         [7.62084269e-01, 6.08031482e-01, 5.41854678e-01,
          2.19300145e-02, 7.69076081e-01],
         [4.79115705e-01, 9.16356713e-01, 7.72053218e-01,
          5.00792719e-01, 8.32526739e-01],
         [4.45682853e-01, 8.53752958e-01, 7.65266615e-01,
          6.50018760e-01, 4.78011353e-01],
         [9.96003712e-01, 7.11003565e-01, 4.03352263e-01,
          9.90624883e-01, 3.50935723e-01]],

        [[8.35657413e-02, 2.11058794e-01, 4.19492249e-01,
          1.37284082e-01, 6.99477589e-01],
         [1.78794222e-01, 3.92901085e-01, 6.64523491e-01,
          9.41705385e-01, 1.73196666e-01],
         [9.68607759e-01, 1.16968325e-01, 2.14047151e-01,
          4.87921246e-01, 6.93761671e-01],
         [7.49335745e-01, 6.37453316e-01, 8.28477812e-01,
          1.84912699e-01, 3.65173331e-01],
         [8.03711613e-01, 9.12365011e-03, 1.57714348e-01,
          7.62407818e-01, 4.32322213e-01]]]]), array([[[[0.97199216, 0.9684602 , 0.34871448],
         [0.27691133, 0.85230295, 0.5859241 ],
         [0.78796475, 0.58600666, 0.42319644]],

        [[0.5320398 , 0.71357229, 0.99914264],
         [0.48660261, 0.09946236, 0.06217693],
         [0.53364996, 0.06613392, 0.25053235]],

        [[0.85348374, 0.55442137, 0.18975826],
         [0.1816358 , 0.91221529, 0.81294462],
         [0.8004821 , 0.17889199, 0.1844333 ]],

        [[0.86525729, 0.52352739, 0.71281603],
         [0.06656857, 0.00858136, 0.84894858],
         [0.08931002, 0.60973442, 0.75728112]],

        [[0.15484333, 0.05180557, 0.36703651],
         [0.34981367, 0.73193067, 0.74069494],
         [0.80102151, 0.58526508, 0.4430425 ]],

        [[0.51509574, 0.10043658, 0.31664464],
         [0.75454814, 0.24059454, 0.762989  ],
         [0.81511278, 0.04172633, 0.03693674]]],


       [[[0.37246489, 0.14132173, 0.7051713 ],
         [0.99621963, 0.31723818, 0.99221978],
         [0.38454556, 0.27874828, 0.05458106]],

        [[0.55836864, 0.9631948 , 0.77533904],
         [0.78944763, 0.94414843, 0.19034105],
         [0.1715192 , 0.34576344, 0.27086328]],

        [[0.04010533, 0.27231961, 0.11798195],
         [0.10754347, 0.6336049 , 0.28894979],
         [0.77020267, 0.33320745, 0.57857018]],

        [[0.12361599, 0.78806992, 0.84414543],
         [0.97782718, 0.63979173, 0.20469844],
         [0.21065222, 0.25704258, 0.36052385]],

        [[0.22188939, 0.6350464 , 0.27935816],
         [0.46316491, 0.4223203 , 0.02572092],
         [0.47374578, 0.60490597, 0.39165165]],

        [[0.08499287, 0.9888453 , 0.1550809 ],
         [0.30132166, 0.77595834, 0.98814724],
         [0.25982639, 0.49280692, 0.22819617]]],


       [[[0.45479246, 0.85100042, 0.29395561],
         [0.88842674, 0.09761858, 0.5035829 ],
         [0.47428997, 0.82283929, 0.02733788]],

        [[0.70695347, 0.72810479, 0.05365852],
         [0.70105116, 0.75171489, 0.81613477],
         [0.54564022, 0.50544346, 0.78009222]],

        [[0.71007966, 0.46944774, 0.31763486],
         [0.74925558, 0.29079726, 0.52578812],
         [0.3105971 , 0.31495384, 0.10547146]],

        [[0.41653715, 0.12714413, 0.2566023 ],
         [0.99445667, 0.76541484, 0.23994102],
         [0.81097064, 0.41336322, 0.72273783]],

        [[0.4649363 , 0.32159069, 0.15198952],
         [0.37411141, 0.13883494, 0.13137689],
         [0.95503148, 0.86967776, 0.18695167]],

        [[0.2201166 , 0.95986668, 0.60539257],
         [0.80915103, 0.34550256, 0.85607595],
         [0.70312238, 0.98598541, 0.49611903]]],


       [[[0.99575274, 0.22348736, 0.81127036],
         [0.85610922, 0.38629245, 0.03975635],
         [0.6676057 , 0.55521615, 0.24945381]],

        [[0.16689497, 0.95894553, 0.4107912 ],
         [0.36632245, 0.31662091, 0.7839928 ],
         [0.29437195, 0.90438706, 0.47259638]],

        [[0.40859374, 0.4591298 , 0.57881622],
         [0.89030571, 0.61151523, 0.79129806],
         [0.60195771, 0.64768407, 0.23394378]],

        [[0.81155753, 0.22398701, 0.93740002],
         [0.01289726, 0.95127336, 0.46079939],
         [0.63695122, 0.25966487, 0.77551397]],

        [[0.96967939, 0.91981133, 0.88837821],
         [0.89437818, 0.37298693, 0.00268948],
         [0.14873734, 0.79579216, 0.91481507]],

        [[0.45170748, 0.91474393, 0.84691017],
         [0.62098558, 0.5664961 , 0.84010237],
         [0.89016173, 0.06421199, 0.0695066 ]]],


       [[[0.50893876, 0.15515865, 0.45421328],
         [0.45943304, 0.09351289, 0.75989175],
         [0.48415449, 0.93655921, 0.98280472]],

        [[0.81684733, 0.66851071, 0.40961203],
         [0.8791112 , 0.31237198, 0.92254371],
         [0.53749176, 0.17317182, 0.44952056]],

        [[0.80295447, 0.98639187, 0.62765647],
         [0.54653853, 0.29985668, 0.13441   ],
         [0.15125865, 0.95193546, 0.24438811]],

        [[0.97953281, 0.55717162, 0.11956684],
         [0.50615328, 0.34642112, 0.69079181],
         [0.93382018, 0.08414123, 0.24170279]],

        [[0.65210534, 0.14735157, 0.08571729],
         [0.78607551, 0.1401113 , 0.38318402],
         [0.87102118, 0.07757198, 0.79601169]],

        [[0.4632066 , 0.43324555, 0.93909036],
         [0.17044248, 0.60396424, 0.60486293],
         [0.10409389, 0.62597576, 0.45096025]]]])], '\nThe value of eps is:', 1, '\nThe out_type is:', None)

======================================================================
ERROR: test_fwd (test_abstract_conv.TestAsymmetricPadding)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2954, in perform
    tuple(topgrad.shape)))
ValueError: invalid input_shape for gradInputs: the given input_shape would produce an output of shape (2, 4, 4, 5), but the given topgrad has shape (2, 4, 6, 6)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 1998, in test_fwd
    utt.verify_grad(asymmetric_conv_op, [img, kern], mode=self.mode, eps=1)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tests\unittest_tools.py", line 92, in verify_grad
    T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gradient.py", line 1780, in verify_grad
    analytic_grad = grad_fn(*[p.copy() for p in pt])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 917, in __call__
    storage_map=getattr(self.fn, 'storage_map', None))
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\link.py", line 325, in raise_with_op
    reraise(exc_type, exc_value, exc_trace)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\six.py", line 702, in reraise
    raise value.with_traceback(tb)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2954, in perform
    tuple(topgrad.shape)))
ValueError: ('invalid input_shape for gradInputs: the given input_shape would produce an output of shape (2, 4, 4, 5), but the given topgrad has shape (2, 4, 6, 6)\nApply node that caused the error: AbstractConv2d_gradInputs{convdim=2, border_mode=((1, 2), (2, 1)), subsample=(1, 1), filter_flip=True, imshp=(None, None, None, None), kshp=(None, None, None, None), filter_dilation=(1, 1), num_groups=1, unshared=False}(input 1, Elemwise{mul}.0, Subtensor{int64::}.0)\nToposort index: 9\nInputs types: [TensorType(float64, 4D), TensorType(float64, 4D), TensorType(int64, vector)]\nInputs shapes: [(4, 2, 2, 2), (2, 4, 6, 6), (2,)]\nInputs strides: [(64, 32, 16, 8), (1152, 288, 48, 8), (8,)]\nInputs values: [\'not shown\', \'not shown\', array([4, 4], dtype=int64)]\nOutputs clients: [[\'output\']]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "C:\\Users\\mutation\\Desktop\\theano-testcase\\tests\\test_abstract_conv.py", line 1998, in test_fwd\n    utt.verify_grad(asymmetric_conv_op, [img, kern], mode=self.mode, eps=1)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\tests\\unittest_tools.py", line 92, in verify_grad\n    T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1770, in verify_grad\n    disconnected_inputs=\'ignore\')\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 605, in grad\n    grad_dict, wrt, cost_name)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1371, in _populate_grad_dict\n    rval = [access_grad_cache(elem) for elem in wrt]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1371, in <listcomp>\n    rval = [access_grad_cache(elem) for elem in wrt]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1326, in access_grad_cache\n    term = access_term_cache(node)[idx]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1162, in access_term_cache\n    new_output_grads)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.', '\nThe error happened with the following inputs:', [array([[[[0.47610554, 0.10211419, 0.87256332, 0.75612704],
         [0.29919884, 0.18625652, 0.49435351, 0.0408955 ],
         [0.47835228, 0.3089902 , 0.92058026, 0.91794568],
         [0.46848893, 0.23431308, 0.08982494, 0.67940357]],

        [[0.65592832, 0.0039444 , 0.06654134, 0.00112109],
         [0.66608382, 0.38565116, 0.09405827, 0.45856757],
         [0.64434173, 0.59499774, 0.79060307, 0.79996907],
         [0.67969792, 0.43875185, 0.26235889, 0.23652188]]],


       [[[0.83900208, 0.36874334, 0.61918838, 0.46656433],
         [0.49250063, 0.71862211, 0.65415881, 0.9665017 ],
         [0.38957233, 0.97017219, 0.36057961, 0.56184234],
         [0.03133558, 0.30480028, 0.07269465, 0.46721993]],

        [[0.41345069, 0.42228271, 0.79491031, 0.05651855],
         [0.89718201, 0.31869638, 0.36398678, 0.70548804],
         [0.23103497, 0.54827043, 0.3195602 , 0.7302113 ],
         [0.94257233, 0.77442252, 0.86379077, 0.82903615]]]]), array([[[[0.81379647, 0.63166234],
         [0.68810426, 0.09505542]],

        [[0.87637271, 0.83280508],
         [0.42067349, 0.77582558]]],


       [[[0.49097792, 0.52603444],
         [0.71381734, 0.12317237]],

        [[0.45279855, 0.14136043],
         [0.34007602, 0.23354548]]],


       [[[0.50744427, 0.42741471],
         [0.53647236, 0.8690842 ]],

        [[0.84334885, 0.04136067],
         [0.07753699, 0.36800508]]],


       [[[0.74431332, 0.38844287],
         [0.14635092, 0.37732909]],

        [[0.37146278, 0.93263398],
         [0.87870934, 0.63540289]]]])], '\nThe value of eps is:', 1, '\nThe out_type is:', None)

======================================================================
ERROR: test_gradinput (test_abstract_conv.TestAsymmetricPadding)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2954, in perform
    tuple(topgrad.shape)))
ValueError: invalid input_shape for gradInputs: the given input_shape would produce an output of shape (2, 4, 4, 5), but the given topgrad has shape (2, 4, 6, 6)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 2056, in test_gradinput
    asymmetric_output = asymmetric_func(kern, top)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 917, in __call__
    storage_map=getattr(self.fn, 'storage_map', None))
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\link.py", line 325, in raise_with_op
    reraise(exc_type, exc_value, exc_trace)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\six.py", line 702, in reraise
    raise value.with_traceback(tb)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2954, in perform
    tuple(topgrad.shape)))
ValueError: invalid input_shape for gradInputs: the given input_shape would produce an output of shape (2, 4, 4, 5), but the given topgrad has shape (2, 4, 6, 6)
Apply node that caused the error: AbstractConv2d_gradInputs{convdim=2, border_mode=((1, 2), (2, 1)), subsample=(1, 1), filter_flip=True, imshp=(None, None, None, None), kshp=(None, None, None, None), filter_dilation=(1, 1), num_groups=1, unshared=False}(kern, top, TensorConstant{(2,) of 4})
Toposort index: 0
Inputs types: [TensorType(float64, 4D), TensorType(float64, 4D), TensorType(int32, vector)]
Inputs shapes: [(4, 2, 2, 2), (2, 4, 6, 6), (2,)]
Inputs strides: [(64, 32, 16, 8), (1152, 288, 48, 8), (4,)]
Inputs values: ['not shown', 'not shown', array([4, 4])]
Outputs clients: [['output']]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 122, in run
    test(result)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 84, in __call__
    return self.run(*args, **kwds)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 122, in run
    test(result)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 84, in __call__
    return self.run(*args, **kwds)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 122, in run
    test(result)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\case.py", line 653, in __call__
    return self.run(*args, **kwds)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\case.py", line 605, in run
    testMethod()
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 2052, in test_gradinput
    asymmetric_out_sym = asymmetric_conv_op(kern_sym, top_sym, imshp[-2:])

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.

======================================================================
ERROR: test_gradweight (test_abstract_conv.TestAsymmetricPadding)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2954, in perform
    tuple(topgrad.shape)))
ValueError: invalid input_shape for gradInputs: the given input_shape would produce an output of shape (2, 4, 4, 5), but the given topgrad has shape (2, 4, 6, 6)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 2038, in test_gradweight
    utt.verify_grad(conv_gradweight, [img, top], mode=self.mode, eps=1)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tests\unittest_tools.py", line 92, in verify_grad
    T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gradient.py", line 1780, in verify_grad
    analytic_grad = grad_fn(*[p.copy() for p in pt])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 917, in __call__
    storage_map=getattr(self.fn, 'storage_map', None))
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\link.py", line 325, in raise_with_op
    reraise(exc_type, exc_value, exc_trace)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\six.py", line 702, in reraise
    raise value.with_traceback(tb)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2954, in perform
    tuple(topgrad.shape)))
ValueError: ('invalid input_shape for gradInputs: the given input_shape would produce an output of shape (2, 4, 4, 5), but the given topgrad has shape (2, 4, 6, 6)\nApply node that caused the error: AbstractConv2d_gradInputs{convdim=2, border_mode=((1, 2), (2, 1)), subsample=(1, 1), filter_flip=True, imshp=(None, None, None, None), kshp=(None, None, None, None), filter_dilation=(1, 1), num_groups=1, unshared=False}(Elemwise{mul}.0, input 1, Subtensor{int64::}.0)\nToposort index: 9\nInputs types: [TensorType(float64, 4D), TensorType(float64, 4D), TensorType(int64, vector)]\nInputs shapes: [(4, 2, 2, 2), (2, 4, 6, 6), (2,)]\nInputs strides: [(64, 32, 16, 8), (1152, 288, 48, 8), (8,)]\nInputs values: [\'not shown\', \'not shown\', array([4, 4], dtype=int64)]\nOutputs clients: [[\'output\']]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "C:\\Users\\mutation\\Desktop\\theano-testcase\\tests\\test_abstract_conv.py", line 2038, in test_gradweight\n    utt.verify_grad(conv_gradweight, [img, top], mode=self.mode, eps=1)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\tests\\unittest_tools.py", line 92, in verify_grad\n    T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1770, in verify_grad\n    disconnected_inputs=\'ignore\')\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 605, in grad\n    grad_dict, wrt, cost_name)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1371, in _populate_grad_dict\n    rval = [access_grad_cache(elem) for elem in wrt]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1371, in <listcomp>\n    rval = [access_grad_cache(elem) for elem in wrt]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1326, in access_grad_cache\n    term = access_term_cache(node)[idx]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1162, in access_term_cache\n    new_output_grads)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.', '\nThe error happened with the following inputs:', [array([[[[0.08951013, 0.44073919, 0.10495735, 0.68183782],
         [0.31150283, 0.66919707, 0.98841389, 0.3930208 ],
         [0.29226331, 0.46756277, 0.29031652, 0.84918804],
         [0.712163  , 0.34929942, 0.45208028, 0.42877569]],

        [[0.60850074, 0.73609298, 0.35253624, 0.35601395],
         [0.59136704, 0.82312425, 0.65087742, 0.57607829],
         [0.50310554, 0.09924719, 0.27264032, 0.03344569],
         [0.70604898, 0.64870168, 0.41037587, 0.00773816]]],


       [[[0.58266509, 0.74501867, 0.92419115, 0.09815225],
         [0.03236548, 0.106822  , 0.17913859, 0.17518167],
         [0.20578784, 0.3271364 , 0.4913322 , 0.48687574],
         [0.5032574 , 0.28815934, 0.47458508, 0.06431285]],

        [[0.3308476 , 0.48623288, 0.29528988, 0.37818203],
         [0.5417532 , 0.40010546, 0.76240955, 0.47955264],
         [0.15861623, 0.13080003, 0.48172727, 0.24642311],
         [0.92249391, 0.57461442, 0.07461399, 0.37269671]]]]), array([[[[0.19748517, 0.63225866, 0.94114428, 0.82023108, 0.26307149,
          0.86991022],
         [0.39742133, 0.88811711, 0.71855562, 0.66002236, 0.97249178,
          0.09441107],
         [0.30465039, 0.0762231 , 0.78761657, 0.64670505, 0.96267341,
          0.95592698],
         [0.86098628, 0.95262915, 0.04407321, 0.77759974, 0.57376583,
          0.71569645],
         [0.15618335, 0.53053071, 0.34794832, 0.14246731, 0.83683726,
          0.39317949],
         [0.81061229, 0.61630338, 0.63907216, 0.12253074, 0.35538833,
          0.04429985]],

        [[0.15362478, 0.19122078, 0.82903655, 0.96854568, 0.43481821,
          0.31767392],
         [0.77021078, 0.28244732, 0.38467936, 0.22577154, 0.59839337,
          0.93039134],
         [0.13158445, 0.31302627, 0.36936329, 0.86175496, 0.27551035,
          0.8822734 ],
         [0.51128198, 0.77603478, 0.05065324, 0.01078841, 0.36965792,
          0.56117075],
         [0.29515017, 0.40854509, 0.2270829 , 0.07465744, 0.89673015,
          0.65823359],
         [0.58300058, 0.34835623, 0.6598614 , 0.32660515, 0.69166244,
          0.21705726]],

        [[0.71085574, 0.49495187, 0.85774804, 0.59884657, 0.70694106,
          0.24421088],
         [0.51280413, 0.1258849 , 0.47038107, 0.39499497, 0.16628639,
          0.48889568],
         [0.66479674, 0.33969304, 0.31799934, 0.2297029 , 0.05338387,
          0.66195348],
         [0.11347362, 0.16848512, 0.9107186 , 0.34193589, 0.46852936,
          0.06549789],
         [0.94881844, 0.45298171, 0.52923887, 0.49652562, 0.45500212,
          0.59928577],
         [0.26176364, 0.86341968, 0.40887141, 0.52253318, 0.52862963,
          0.02526051]],

        [[0.69934208, 0.43672267, 0.06465723, 0.30489059, 0.11921288,
          0.40982387],
         [0.87844812, 0.36521498, 0.779061  , 0.72191177, 0.74037803,
          0.38926291],
         [0.38578523, 0.51769566, 0.74273174, 0.46173375, 0.63698593,
          0.9206278 ],
         [0.58796342, 0.71476336, 0.16907287, 0.61311718, 0.31318319,
          0.12316385],
         [0.61023826, 0.73298428, 0.64512313, 0.48285432, 0.58613644,
          0.08857069],
         [0.71296366, 0.69024353, 0.10364318, 0.81836811, 0.18747622,
          0.79867537]]],


       [[[0.84509177, 0.04843805, 0.45924854, 0.66491386, 0.07354179,
          0.50894196],
         [0.02303884, 0.62830588, 0.73496715, 0.97180981, 0.96178439,
          0.2374969 ],
         [0.95344329, 0.79215238, 0.34187733, 0.83511901, 0.04164837,
          0.59160107],
         [0.37956115, 0.83265946, 0.29193523, 0.81490331, 0.29666307,
          0.38133984],
         [0.04289927, 0.90272136, 0.37460166, 0.98899718, 0.64508647,
          0.82934657],
         [0.18699918, 0.66854153, 0.9021616 , 0.2385075 , 0.88599241,
          0.33782956]],

        [[0.67034004, 0.73646854, 0.09175239, 0.26982124, 0.28174549,
          0.9985896 ],
         [0.67200059, 0.67909835, 0.05733078, 0.35599393, 0.95902684,
          0.95464241],
         [0.31343219, 0.08617922, 0.19235828, 0.00246891, 0.98110502,
          0.84164381],
         [0.23701314, 0.96539315, 0.30231446, 0.19268657, 0.18193401,
          0.16225955],
         [0.04505666, 0.20369199, 0.11571967, 0.64883506, 0.7791346 ,
          0.19415013],
         [0.26672451, 0.85118467, 0.69524114, 0.46434902, 0.74577984,
          0.48684707]],

        [[0.55732505, 0.77993236, 0.15788989, 0.70161665, 0.24979831,
          0.67232796],
         [0.13414867, 0.86436928, 0.47698469, 0.93773976, 0.46846654,
          0.29164279],
         [0.81977524, 0.42244486, 0.62098696, 0.0256673 , 0.96064018,
          0.46138222],
         [0.77588756, 0.94258501, 0.26644057, 0.6987471 , 0.92208432,
          0.71908334],
         [0.99405773, 0.67200431, 0.89112556, 0.95258474, 0.07292227,
          0.52059923],
         [0.19863222, 0.19096511, 0.30195514, 0.29425999, 0.67650215,
          0.53270304]],

        [[0.38650695, 0.15317459, 0.53713281, 0.14288874, 0.6167232 ,
          0.65723012],
         [0.17604306, 0.59741602, 0.47802721, 0.19335807, 0.01746181,
          0.49931066],
         [0.68606468, 0.3364735 , 0.40813849, 0.36285033, 0.21554295,
          0.78310389],
         [0.91699357, 0.06708089, 0.73887744, 0.66651497, 0.93194772,
          0.19546975],
         [0.31254389, 0.84968813, 0.73915316, 0.82383094, 0.90650928,
          0.65034284],
         [0.06183454, 0.46930783, 0.39784298, 0.37754174, 0.23307457,
          0.13700117]]]])], '\nThe value of eps is:', 1, '\nThe out_type is:', None)

======================================================================
ERROR: test_interface (test_abstract_conv.TestCausalConv)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 3009, in perform
    num_groups=self.num_groups)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2256, in conv
    1, val, bval, 0)
ValueError: operands could not be broadcast together with shapes (5,1) (7,1) (5,1) 

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 2107, in test_interface
    utt.verify_grad(causal_conv_fn, [self.img, self.kern], mode=self.mode, eps=1)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tests\unittest_tools.py", line 92, in verify_grad
    T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gradient.py", line 1780, in verify_grad
    analytic_grad = grad_fn(*[p.copy() for p in pt])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 917, in __call__
    storage_map=getattr(self.fn, 'storage_map', None))
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\link.py", line 325, in raise_with_op
    reraise(exc_type, exc_value, exc_trace)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\six.py", line 702, in reraise
    raise value.with_traceback(tb)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 3009, in perform
    num_groups=self.num_groups)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2256, in conv
    1, val, bval, 0)
ValueError: ('operands could not be broadcast together with shapes (5,1) (7,1) (5,1) \nApply node that caused the error: AbstractConv2d_gradInputs{convdim=2, border_mode=((2, 0), 0), subsample=(1, 1), filter_flip=True, imshp=(None, None, None, None), kshp=(2, 2, 3, 1), filter_dilation=(1, 1), num_groups=1, unshared=False}(InplaceDimShuffle{0,1,2,x}.0, IncSubtensor{Inc;::, ::, ::, int64}.0, Subtensor{int64::}.0)\nToposort index: 15\nInputs types: [TensorType(float64, (False, False, False, True)), TensorType(float64, 4D), TensorType(int64, vector)]\nInputs shapes: [(2, 2, 3, 1), (3, 2, 5, 1), (2,)]\nInputs strides: [(48, 24, 8, 8), (80, 40, 8, 8), (8,)]\nInputs values: [\'not shown\', \'not shown\', array([5, 1], dtype=int64)]\nOutputs clients: [[Rebroadcast{?,?,?,1}(AbstractConv2d_gradInputs{convdim=2, border_mode=((2, 0), 0), subsample=(1, 1), filter_flip=True, imshp=(None, None, None, None), kshp=(2, 2, 3, 1), filter_dilation=(1, 1), num_groups=1, unshared=False}.0)]]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 605, in grad\n    grad_dict, wrt, cost_name)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1371, in _populate_grad_dict\n    rval = [access_grad_cache(elem) for elem in wrt]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1371, in <listcomp>\n    rval = [access_grad_cache(elem) for elem in wrt]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1326, in access_grad_cache\n    term = access_term_cache(node)[idx]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1021, in access_term_cache\n    output_grads = [access_grad_cache(var) for var in node.outputs]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1021, in <listcomp>\n    output_grads = [access_grad_cache(var) for var in node.outputs]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1326, in access_grad_cache\n    term = access_term_cache(node)[idx]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1162, in access_term_cache\n    new_output_grads)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.', '\nThe error happened with the following inputs:', [array([[[2., 4., 9., 5., 8.],
        [0., 0., 4., 0., 5.]],

       [[2., 5., 8., 5., 5.],
        [1., 3., 0., 7., 9.]],

       [[7., 0., 7., 1., 0.],
        [0., 1., 4., 7., 2.]]]), array([[[5., 3., 1.],
        [3., 1., 0.]],

       [[6., 4., 9.],
        [2., 2., 7.]]])], '\nThe value of eps is:', 1, '\nThe out_type is:', None)

======================================================================
ERROR: test_conv2d_grad_wrt_inputs (test_abstract_conv.TestConv2dGrads)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
ValueError: CorrMM shape inconsistency:
  bottom shape: 8 1 12 12
  weight shape: 5 1 2 2
  top shape: 8 5 12 12 (expected 8 5 13 13)


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 1437, in test_conv2d_grad_wrt_inputs
    utt.assert_allclose(f_new(filter_val, out_grad_val), f_old(input_val, filter_val, out_grad_val))
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 917, in __call__
    storage_map=getattr(self.fn, 'storage_map', None))
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\link.py", line 325, in raise_with_op
    reraise(exc_type, exc_value, exc_trace)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\six.py", line 702, in reraise
    raise value.with_traceback(tb)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
ValueError: CorrMM shape inconsistency:
  bottom shape: 8 1 12 12
  weight shape: 5 1 2 2
  top shape: 8 5 12 12 (expected 8 5 13 13)

Apply node that caused the error: CorrMM_gradInputs{full, (1, 1), (1, 1), 1 False}(Subtensor{::, ::, ::int64, ::int64}.0, <TensorType(float64, 4D)>, Elemwise{Cast{int64}}.0, Elemwise{Cast{int64}}.0)
Toposort index: 5
Inputs types: [TensorType(float64, 4D), TensorType(float64, 4D), TensorType(int64, scalar), TensorType(int64, scalar)]
Inputs shapes: [(5, 1, 2, 2), (8, 5, 12, 12), (), ()]
Inputs strides: [(32, 32, -16, -8), (5760, 1152, 96, 8), (), ()]
Inputs values: ['not shown', 'not shown', array(12, dtype=int64), array(12, dtype=int64)]
Outputs clients: [['output']]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 122, in run
    test(result)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 84, in __call__
    return self.run(*args, **kwds)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 122, in run
    test(result)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 84, in __call__
    return self.run(*args, **kwds)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 122, in run
    test(result)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\case.py", line 653, in __call__
    return self.run(*args, **kwds)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\case.py", line 605, in run
    testMethod()
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 1432, in test_conv2d_grad_wrt_inputs
    filter_flip=ff

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.

======================================================================
ERROR: test_conv2d_grad_wrt_weights (test_abstract_conv.TestConv2dGrads)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
ValueError: CorrMM shape inconsistency:
  bottom shape: 8 1 12 12
  weight shape: 5 1 2 2
  top shape: 8 5 12 12 (expected 8 5 13 13)


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 1476, in test_conv2d_grad_wrt_weights
    utt.assert_allclose(f_new(input_val, out_grad_val), f_old(input_val, filter_val, out_grad_val))
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 917, in __call__
    storage_map=getattr(self.fn, 'storage_map', None))
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\link.py", line 325, in raise_with_op
    reraise(exc_type, exc_value, exc_trace)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\six.py", line 702, in reraise
    raise value.with_traceback(tb)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
ValueError: CorrMM shape inconsistency:
  bottom shape: 8 1 12 12
  weight shape: 5 1 2 2
  top shape: 8 5 12 12 (expected 8 5 13 13)

Apply node that caused the error: CorrMM_gradWeights{full, (1, 1), (1, 1), 1 False}(x, <TensorType(float64, 4D)>, Elemwise{Cast{int64}}.0, Elemwise{Cast{int64}}.0)
Toposort index: 4
Inputs types: [TensorType(float64, 4D), TensorType(float64, 4D), TensorType(int64, scalar), TensorType(int64, scalar)]
Inputs shapes: [(8, 1, 12, 12), (8, 5, 12, 12), (), ()]
Inputs strides: [(1152, 1152, 96, 8), (5760, 1152, 96, 8), (), ()]
Inputs values: ['not shown', 'not shown', array(2, dtype=int64), array(2, dtype=int64)]
Outputs clients: [[Subtensor{::, ::, ::int64, ::int64}(CorrMM_gradWeights{full, (1, 1), (1, 1), 1 False}.0, Constant{-1}, Constant{-1})]]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 122, in run
    test(result)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 84, in __call__
    return self.run(*args, **kwds)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 122, in run
    test(result)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 84, in __call__
    return self.run(*args, **kwds)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 122, in run
    test(result)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\case.py", line 653, in __call__
    return self.run(*args, **kwds)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\case.py", line 605, in run
    testMethod()
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 1473, in test_conv2d_grad_wrt_weights
    filter_flip=ff

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.

======================================================================
ERROR: test_fwd (test_abstract_conv.TestUnsharedConv)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 3000, in perform
    num_groups=self.num_groups, unshared=True, direction="backprop inputs")
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2251, in conv
    out_shape[2:], direction)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2296, in unshared2d
    kern[row, col, ::-1, ::-1]
ValueError: operands could not be broadcast together with shapes (2,2) (3,3) (2,2) 

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 1860, in test_fwd
    utt.verify_grad(unshared_conv_op, [img, kern], mode=self.mode, eps=1)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tests\unittest_tools.py", line 92, in verify_grad
    T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gradient.py", line 1780, in verify_grad
    analytic_grad = grad_fn(*[p.copy() for p in pt])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 917, in __call__
    storage_map=getattr(self.fn, 'storage_map', None))
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\link.py", line 325, in raise_with_op
    reraise(exc_type, exc_value, exc_trace)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\six.py", line 702, in reraise
    raise value.with_traceback(tb)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 3000, in perform
    num_groups=self.num_groups, unshared=True, direction="backprop inputs")
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2251, in conv
    out_shape[2:], direction)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2296, in unshared2d
    kern[row, col, ::-1, ::-1]
ValueError: ('operands could not be broadcast together with shapes (2,2) (3,3) (2,2) \nApply node that caused the error: AbstractConv2d_gradInputs{convdim=2, border_mode=\'valid\', subsample=(1, 1), filter_flip=True, imshp=(None, None, None, None), kshp=(None, None, None, None, None, None), filter_dilation=(1, 1), num_groups=1, unshared=True}(input 1, Elemwise{mul}.0, Subtensor{int64::}.0)\nToposort index: 9\nInputs types: [TensorType(float64, 6D), TensorType(float64, 4D), TensorType(int64, vector)]\nInputs shapes: [(2, 2, 2, 2, 3, 3), (2, 2, 2, 2), (2,)]\nInputs strides: [(576, 288, 144, 72, 24, 8), (64, 32, 16, 8), (8,)]\nInputs values: [\'not shown\', \'not shown\', array([4, 4], dtype=int64)]\nOutputs clients: [[\'output\']]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "C:\\Users\\mutation\\Desktop\\theano-testcase\\tests\\test_abstract_conv.py", line 1860, in test_fwd\n    utt.verify_grad(unshared_conv_op, [img, kern], mode=self.mode, eps=1)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\tests\\unittest_tools.py", line 92, in verify_grad\n    T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1770, in verify_grad\n    disconnected_inputs=\'ignore\')\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 605, in grad\n    grad_dict, wrt, cost_name)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1371, in _populate_grad_dict\n    rval = [access_grad_cache(elem) for elem in wrt]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1371, in <listcomp>\n    rval = [access_grad_cache(elem) for elem in wrt]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1326, in access_grad_cache\n    term = access_term_cache(node)[idx]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1162, in access_term_cache\n    new_output_grads)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.', '\nThe error happened with the following inputs:', [array([[[[0.88889931, 0.62640453, 0.81887369, 0.54734542],
         [0.41671201, 0.74304719, 0.36959638, 0.07516654],
         [0.77519298, 0.21940924, 0.07934213, 0.48678052],
         [0.1536739 , 0.82846513, 0.19136857, 0.27040895]],

        [[0.56103442, 0.90238039, 0.85178834, 0.41808196],
         [0.39347627, 0.01622051, 0.29921337, 0.35377822],
         [0.89350267, 0.78613657, 0.77138693, 0.42005486],
         [0.77602514, 0.46430814, 0.18177017, 0.8840256 ]]],


       [[[0.71879227, 0.6718813 , 0.25656363, 0.43080182],
         [0.01645358, 0.23499383, 0.51117131, 0.29200924],
         [0.50189351, 0.49827313, 0.10377152, 0.44644312],
         [0.96918917, 0.73847112, 0.71955061, 0.89304339]],

        [[0.96267468, 0.19705023, 0.71458996, 0.16192394],
         [0.86625477, 0.62382025, 0.95945512, 0.52414204],
         [0.03643288, 0.72687158, 0.00390984, 0.050294  ],
         [0.99199232, 0.2122575 , 0.94737066, 0.45154055]]]]), array([[[[[[0.99879467, 0.64750149, 0.70224071],
           [0.42958177, 0.16777476, 0.11813309],
           [0.93788262, 0.91099744, 0.39799354]],

          [[0.92530327, 0.74549922, 0.78982636],
           [0.63770852, 0.99274137, 0.47610554],
           [0.10211419, 0.87256332, 0.75612704]]],


         [[[0.29919884, 0.18625652, 0.49435351],
           [0.0408955 , 0.47835228, 0.3089902 ],
           [0.92058026, 0.91794568, 0.46848893]],

          [[0.23431308, 0.08982494, 0.67940357],
           [0.65592832, 0.0039444 , 0.06654134],
           [0.00112109, 0.66608382, 0.38565116]]]],



        [[[[0.09405827, 0.45856757, 0.64434173],
           [0.59499774, 0.79060307, 0.79996907],
           [0.67969792, 0.43875185, 0.26235889]],

          [[0.23652188, 0.83900208, 0.36874334],
           [0.61918838, 0.46656433, 0.49250063],
           [0.71862211, 0.65415881, 0.9665017 ]]],


         [[[0.38957233, 0.97017219, 0.36057961],
           [0.56184234, 0.03133558, 0.30480028],
           [0.07269465, 0.46721993, 0.41345069]],

          [[0.42228271, 0.79491031, 0.05651855],
           [0.89718201, 0.31869638, 0.36398678],
           [0.70548804, 0.23103497, 0.54827043]]]]],




       [[[[[0.3195602 , 0.7302113 , 0.94257233],
           [0.77442252, 0.86379077, 0.82903615],
           [0.81379647, 0.63166234, 0.68810426]],

          [[0.09505542, 0.87637271, 0.83280508],
           [0.42067349, 0.77582558, 0.49097792],
           [0.52603444, 0.71381734, 0.12317237]]],


         [[[0.45279855, 0.14136043, 0.34007602],
           [0.23354548, 0.50744427, 0.42741471],
           [0.53647236, 0.8690842 , 0.84334885]],

          [[0.04136067, 0.07753699, 0.36800508],
           [0.74431332, 0.38844287, 0.14635092],
           [0.37732909, 0.37146278, 0.93263398]]]],



        [[[[0.87870934, 0.63540289, 0.07311182],
           [0.84731036, 0.85063229, 0.33730248],
           [0.64449643, 0.8330261 , 0.53444522]],

          [[0.66108231, 0.59079962, 0.408068  ],
           [0.22967834, 0.68915406, 0.97929665],
           [0.86124825, 0.85470687, 0.55202809]]],


         [[[0.42364925, 0.18325788, 0.42018606],
           [0.67910563, 0.32292754, 0.87410072],
           [0.83188017, 0.08145924, 0.60184952]],

          [[0.86562637, 0.71512086, 0.08951758],
           [0.95654054, 0.00970529, 0.82328371],
           [0.51948369, 0.11782168, 0.52863809]]]]]])], '\nThe value of eps is:', 1, '\nThe out_type is:', None)

======================================================================
ERROR: test_gradinput (test_abstract_conv.TestUnsharedConv)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 3000, in perform
    num_groups=self.num_groups, unshared=True, direction="backprop inputs")
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2251, in conv
    out_shape[2:], direction)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2296, in unshared2d
    kern[row, col, ::-1, ::-1]
ValueError: operands could not be broadcast together with shapes (2,2) (3,3) (2,2) 

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 1923, in test_gradinput
    unshared_output = unshared_func(kern, top)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 917, in __call__
    storage_map=getattr(self.fn, 'storage_map', None))
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\link.py", line 325, in raise_with_op
    reraise(exc_type, exc_value, exc_trace)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\six.py", line 702, in reraise
    raise value.with_traceback(tb)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 3000, in perform
    num_groups=self.num_groups, unshared=True, direction="backprop inputs")
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2251, in conv
    out_shape[2:], direction)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2296, in unshared2d
    kern[row, col, ::-1, ::-1]
ValueError: operands could not be broadcast together with shapes (2,2) (3,3) (2,2) 
Apply node that caused the error: AbstractConv2d_gradInputs{convdim=2, border_mode='valid', subsample=(1, 1), filter_flip=True, imshp=(None, None, None, None), kshp=(None, None, None, None, None, None), filter_dilation=(1, 1), num_groups=1, unshared=True}(kern, top, TensorConstant{(2,) of 4})
Toposort index: 0
Inputs types: [TensorType(float64, 6D), TensorType(float64, 4D), TensorType(int32, vector)]
Inputs shapes: [(2, 2, 2, 2, 3, 3), (2, 2, 2, 2), (2,)]
Inputs strides: [(576, 288, 144, 72, 24, 8), (64, 32, 16, 8), (4,)]
Inputs values: ['not shown', 'not shown', array([4, 4])]
Outputs clients: [['output']]

Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 122, in run
    test(result)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 84, in __call__
    return self.run(*args, **kwds)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 122, in run
    test(result)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 84, in __call__
    return self.run(*args, **kwds)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\suite.py", line 122, in run
    test(result)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\case.py", line 653, in __call__
    return self.run(*args, **kwds)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\unittest\case.py", line 605, in run
    testMethod()
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 1919, in test_gradinput
    unshared_out_sym = unshared_conv_op(kern_sym, top_sym, tensor.as_tensor_variable(imshp[-2:]))

HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.

======================================================================
ERROR: test_gradweight (test_abstract_conv.TestUnsharedConv)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 3000, in perform
    num_groups=self.num_groups, unshared=True, direction="backprop inputs")
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2251, in conv
    out_shape[2:], direction)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2296, in unshared2d
    kern[row, col, ::-1, ::-1]
ValueError: operands could not be broadcast together with shapes (2,2) (3,3) (2,2) 

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 1900, in test_gradweight
    utt.verify_grad(conv_gradweight, [img, top], mode=self.mode, eps=1)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tests\unittest_tools.py", line 92, in verify_grad
    T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gradient.py", line 1780, in verify_grad
    analytic_grad = grad_fn(*[p.copy() for p in pt])
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 917, in __call__
    storage_map=getattr(self.fn, 'storage_map', None))
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\link.py", line 325, in raise_with_op
    reraise(exc_type, exc_value, exc_trace)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\six.py", line 702, in reraise
    raise value.with_traceback(tb)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\compile\function_module.py", line 903, in __call__
    self.fn() if output_subset is None else\
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\gof\op.py", line 892, in rval
    r = p(n, [x[0] for x in i], o)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 3000, in perform
    num_groups=self.num_groups, unshared=True, direction="backprop inputs")
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2251, in conv
    out_shape[2:], direction)
  File "C:\ProgramData\Anaconda3\envs\keras\lib\site-packages\theano\tensor\nnet\abstract_conv.py", line 2296, in unshared2d
    kern[row, col, ::-1, ::-1]
ValueError: ('operands could not be broadcast together with shapes (2,2) (3,3) (2,2) \nApply node that caused the error: AbstractConv2d_gradInputs{convdim=2, border_mode=\'valid\', subsample=(1, 1), filter_flip=True, imshp=(None, None, None, None), kshp=(None, None, None, None, None, None), filter_dilation=(1, 1), num_groups=1, unshared=True}(Elemwise{mul}.0, input 1, Subtensor{int64::}.0)\nToposort index: 9\nInputs types: [TensorType(float64, 6D), TensorType(float64, 4D), TensorType(int64, vector)]\nInputs shapes: [(2, 2, 2, 2, 3, 3), (2, 2, 2, 2), (2,)]\nInputs strides: [(576, 288, 144, 72, 24, 8), (64, 32, 16, 8), (8,)]\nInputs values: [\'not shown\', \'not shown\', array([4, 4], dtype=int64)]\nOutputs clients: [[\'output\']]\n\nBacktrace when the node is created(use Theano flag traceback.limit=N to make it longer):\n  File "C:\\Users\\mutation\\Desktop\\theano-testcase\\tests\\test_abstract_conv.py", line 1900, in test_gradweight\n    utt.verify_grad(conv_gradweight, [img, top], mode=self.mode, eps=1)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\tests\\unittest_tools.py", line 92, in verify_grad\n    T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1770, in verify_grad\n    disconnected_inputs=\'ignore\')\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 605, in grad\n    grad_dict, wrt, cost_name)\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1371, in _populate_grad_dict\n    rval = [access_grad_cache(elem) for elem in wrt]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1371, in <listcomp>\n    rval = [access_grad_cache(elem) for elem in wrt]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1326, in access_grad_cache\n    term = access_term_cache(node)[idx]\n  File "C:\\ProgramData\\Anaconda3\\envs\\keras\\lib\\site-packages\\theano\\gradient.py", line 1162, in access_term_cache\n    new_output_grads)\n\nHINT: Use the Theano flag \'exception_verbosity=high\' for a debugprint and storage map footprint of this apply node.', '\nThe error happened with the following inputs:', [array([[[[0.87637271, 0.83280508, 0.42067349, 0.77582558],
         [0.49097792, 0.52603444, 0.71381734, 0.12317237],
         [0.45279855, 0.14136043, 0.34007602, 0.23354548],
         [0.50744427, 0.42741471, 0.53647236, 0.8690842 ]],

        [[0.84334885, 0.04136067, 0.07753699, 0.36800508],
         [0.74431332, 0.38844287, 0.14635092, 0.37732909],
         [0.37146278, 0.93263398, 0.87870934, 0.63540289],
         [0.07311182, 0.84731036, 0.85063229, 0.33730248]]],


       [[[0.64449643, 0.8330261 , 0.53444522, 0.66108231],
         [0.59079962, 0.408068  , 0.22967834, 0.68915406],
         [0.97929665, 0.86124825, 0.85470687, 0.55202809],
         [0.42364925, 0.18325788, 0.42018606, 0.67910563]],

        [[0.32292754, 0.87410072, 0.83188017, 0.08145924],
         [0.60184952, 0.86562637, 0.71512086, 0.08951758],
         [0.95654054, 0.00970529, 0.82328371, 0.51948369],
         [0.11782168, 0.52863809, 0.67036106, 0.23355256]]]]), array([[[[0.66000613, 0.11651345],
         [0.3830196 , 0.62431415]],

        [[0.29450684, 0.14830011],
         [0.23563507, 0.56410203]]],


       [[[0.92096938, 0.72317778],
         [0.95357714, 0.2559986 ]],

        [[0.64372265, 0.3605287 ],
         [0.42098056, 0.41913791]]]])], '\nThe value of eps is:', 1, '\nThe out_type is:', None)

======================================================================
FAIL: test_get_shape (test_abstract_conv.TestConvGradInputsShape)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 189, in test_get_shape
    self.assertEqual(computed_image_shape, image_shape)
AssertionError: Tuples differ: (59, 61, 1, -1) != (59, 61, 1, 1)

First differing element 3:
-1
1

- (59, 61, 1, -1)
?             -

+ (59, 61, 1, 1)

======================================================================
FAIL: test_basic (test_abstract_conv.TestGetConvOutShape)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 117, in test_basic
    self.assertTrue(test2_params == (3, 4, 12, 5))
AssertionError: False is not true

======================================================================
FAIL: test_basic_3d (test_abstract_conv.TestGetConvOutShape)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "C:\Users\mutation\Desktop\theano-testcase\tests\test_abstract_conv.py", line 135, in test_basic_3d
    self.assertTrue(test2_params == (3, 4, 12, 5, 8))
AssertionError: False is not true

----------------------------------------------------------------------
Ran 39 tests in 22.797s

FAILED (failures=3, errors=15)
