[{"node type": "expr_stmt", "line number": "(2573, 22)", "node content": "<ExprStmt: # Aliases  Convolution1D = Conv1D@2573,0>", "related code": "Convolution1D = Conv1D\n"}, {"node type": "expr_stmt", "line number": "(2574, 22)", "node content": "<ExprStmt: Convolution2D = Conv2D@2574,0>", "related code": "Convolution2D = Conv2D\n"}, {"node type": "expr_stmt", "line number": "(2575, 22)", "node content": "<ExprStmt: Convolution3D = Conv3D@2575,0>", "related code": "Convolution3D = Conv3D\n"}, {"node type": "expr_stmt", "line number": "(2576, 40)", "node content": "<ExprStmt: SeparableConvolution1D = SeparableConv1D@2576,0>", "related code": "SeparableConvolution1D = SeparableConv1D\n"}, {"node type": "expr_stmt", "line number": "(2577, 40)", "node content": "<ExprStmt: SeparableConvolution2D = SeparableConv2D@2577,0>", "related code": "SeparableConvolution2D = SeparableConv2D\n"}, {"node type": "expr_stmt", "line number": "(2578, 40)", "node content": "<ExprStmt: Convolution2DTranspose = Conv2DTranspose@2578,0>", "related code": "Convolution2DTranspose = Conv2DTranspose\n"}, {"node type": "expr_stmt", "line number": "(2579, 44)", "node content": "<ExprStmt: Deconvolution2D = Deconv2D = Conv2DTranspose@2579,0>", "related code": "Deconvolution2D = Deconv2D = Conv2DTranspose\n"}, {"node type": "expr_stmt", "line number": "(2580, 44)", "node content": "<ExprStmt: Deconvolution3D = Deconv3D = Conv3DTranspose@2580,0>", "related code": "Deconvolution3D = Deconv3D = Conv3DTranspose\n"}, {"node type": "expr_stmt", "line number": "(2583, 34)", "node content": "<ExprStmt: # Legacy aliases AtrousConv1D = AtrousConvolution1D@2583,0>", "related code": "AtrousConv1D = AtrousConvolution1D\n"}, {"node type": "expr_stmt", "line number": "(2584, 34)", "node content": "<ExprStmt: AtrousConv2D = AtrousConvolution2D@2584,0>", "related code": "AtrousConv2D = AtrousConvolution2D\n"}, {"node type": "decorator", "line number": "(315, 0)", "node content": "<Decorator: @interfaces.legacy_conv1d_support@314,4>", "related code": "    def __init__(self, filters,\n"}, {"node type": "decorator", "line number": "(451, 0)", "node content": "<Decorator: @interfaces.legacy_conv2d_support@450,4>", "related code": "    def __init__(self, filters,\n"}, {"node type": "decorator", "line number": "(580, 0)", "node content": "<Decorator: @interfaces.legacy_conv3d_support@579,4>", "related code": "    def __init__(self, filters,\n"}, {"node type": "decorator", "line number": "(731, 0)", "node content": "<Decorator: @interfaces.legacy_deconv2d_support@730,4>", "related code": "    def __init__(self, filters,\n"}, {"node type": "decorator", "line number": "(1643, 0)", "node content": "<Decorator: @interfaces.legacy_separable_conv2d_support@1642,4>", "related code": "    def __init__(self, filters,\n"}, {"node type": "decorator", "line number": "(1961, 0)", "node content": "<Decorator: @interfaces.legacy_upsampling1d_support@1960,4>", "related code": "    def __init__(self, size=2, **kwargs):\n"}, {"node type": "decorator", "line number": "(2014, 0)", "node content": "<Decorator: @interfaces.legacy_upsampling2d_support@2013,4>", "related code": "    def __init__(self, size=(2, 2), data_format=None, interpolation='nearest',\n"}, {"node type": "decorator", "line number": "(2069, 0)", "node content": "<Decorator: @interfaces.legacy_upsampling3d_support@2068,4>", "related code": "    def __init__(self, size=(2, 2, 2), data_format=None, **kwargs):\n"}, {"node type": "decorator", "line number": "(2204, 0)", "node content": "<Decorator: @interfaces.legacy_zeropadding2d_support@2203,4>", "related code": "    def __init__(self,\n"}, {"node type": "decorator", "line number": "(2283, 0)", "node content": "<Decorator: @interfaces.legacy_zeropadding3d_support@2282,4>", "related code": "    def __init__(self, padding=(1, 1, 1), data_format=None, **kwargs):\n"}, {"node type": "decorator", "line number": "(2465, 0)", "node content": "<Decorator: @interfaces.legacy_cropping2d_support@2464,4>", "related code": "    def __init__(self, cropping=((0, 0), (0, 0)),\n"}, {"node type": "decorator", "line number": "(2539, 0)", "node content": "<Decorator: @interfaces.legacy_cropping3d_support@2538,4>", "related code": "    def __init__(self, cropping=((1, 1), (1, 1), (1, 1)),\n"}, {"node type": "expr_stmt", "line number": "(106, 24)", "node content": "<ExprStmt: self.rank = rank@106,8>", "related code": "        self.rank = rank\n"}, {"node type": "expr_stmt", "line number": "(107, 30)", "node content": "<ExprStmt: self.filters = filters@107,8>", "related code": "        self.filters = filters\n"}, {"node type": "expr_stmt", "line number": "(110, 75)", "node content": "<ExprStmt: self.strides = conv_utils.normalize_tuple(strides, rank, 'strides')@110,8>", "related code": "        self.strides = conv_utils.normalize_tuple(strides, rank, 'strides')\n"}, {"node type": "expr_stmt", "line number": "(111, 60)", "node content": "<ExprStmt: self.padding = conv_utils.normalize_padding(padding)@111,8>", "related code": "        self.padding = conv_utils.normalize_padding(padding)\n"}, {"node type": "number", "line number": "(2144, 32)", "node content": "<Number: 1>", "related code": "    def __init__(self, padding=1, **kwargs):\n"}, {"node type": "operator", "line number": "(127, 30)", "node content": "<Operator: ==>", "related code": "        if self.data_format == 'channels_first':\n"}, {"node type": "string", "line number": "(127, 47)", "node content": "<String: 'channels_first'>", "related code": "        if self.data_format == 'channels_first':\n"}, {"node type": "keyword", "line number": "(131, 39)", "node content": "<Keyword: is>", "related code": "        if input_shape[channel_axis] is None:\n"}, {"node type": "keyword", "line number": "(153, 25)", "node content": "<Keyword: True>", "related code": "        self.built = True\n"}, {"node type": "operator", "line number": "(156, 23)", "node content": "<Operator: ==>", "related code": "        if self.rank == 1:\n"}, {"node type": "number", "line number": "(156, 25)", "node content": "<Number: 1>", "related code": "        if self.rank == 1:\n"}, {"node type": "operator", "line number": "(164, 23)", "node content": "<Operator: ==>", "related code": "        if self.rank == 2:\n"}, {"node type": "number", "line number": "(164, 25)", "node content": "<Number: 2>", "related code": "        if self.rank == 2:\n"}, {"node type": "operator", "line number": "(172, 23)", "node content": "<Operator: ==>", "related code": "        if self.rank == 3:\n"}, {"node type": "number", "line number": "(172, 25)", "node content": "<Number: 3>", "related code": "        if self.rank == 3:\n"}, {"node type": "operator", "line number": "(192, 30)", "node content": "<Operator: ==>", "related code": "        if self.data_format == 'channels_last':\n"}, {"node type": "string", "line number": "(192, 46)", "node content": "<String: 'channels_last'>", "related code": "        if self.data_format == 'channels_last':\n"}, {"node type": "operator", "line number": "(194, 32)", "node content": "<Operator: ==>", "related code": "        elif self.data_format == 'channels_first':\n"}, {"node type": "string", "line number": "(194, 49)", "node content": "<String: 'channels_first'>", "related code": "        elif self.data_format == 'channels_first':\n"}, {"node type": "operator", "line number": "(205, 30)", "node content": "<Operator: ==>", "related code": "        if self.data_format == 'channels_last':\n"}, {"node type": "string", "line number": "(205, 46)", "node content": "<String: 'channels_last'>", "related code": "        if self.data_format == 'channels_last':\n"}, {"node type": "operator", "line number": "(207, 32)", "node content": "<Operator: ==>", "related code": "        elif self.data_format == 'channels_first':\n"}, {"node type": "string", "line number": "(207, 49)", "node content": "<String: 'channels_first'>", "related code": "        elif self.data_format == 'channels_first':\n"}, {"node type": "operator", "line number": "(777, 30)", "node content": "<Operator: !=>", "related code": "        if len(input_shape) != 4:\n"}, {"node type": "number", "line number": "(777, 32)", "node content": "<Number: 4>", "related code": "        if len(input_shape) != 4:\n"}, {"node type": "operator", "line number": "(781, 30)", "node content": "<Operator: ==>", "related code": "        if self.data_format == 'channels_first':\n"}, {"node type": "string", "line number": "(781, 47)", "node content": "<String: 'channels_first'>", "related code": "        if self.data_format == 'channels_first':\n"}, {"node type": "keyword", "line number": "(785, 39)", "node content": "<Keyword: is>", "related code": "        if input_shape[channel_axis] is None:\n"}]
