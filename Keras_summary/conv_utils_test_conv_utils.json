[{"node type": "expr_stmt", "line number": "(52, 27)", "node content": "<ExprStmt: padding = value.lower()@52,4>", "related code": "    padding = value.lower()\n"}, {"node type": "expr_stmt", "line number": "(53, 41)", "node content": "<ExprStmt: allowed = {'valid', 'same', 'causal'}@53,4>", "related code": "    allowed = {'valid', 'same', 'causal'}\n"}, {"node type": "expr_stmt", "line number": "(76, 31)", "node content": "<ExprStmt: kernel = np.asarray(kernel)@76,4>", "related code": "    kernel = np.asarray(kernel)\n"}, {"node type": "operator", "line number": "(54, 21)", "node content": "<Operator: ==>", "related code": "    if K.backend() == 'theano':\n"}, {"node type": "string", "line number": "(54, 30)", "node content": "<String: 'theano'>", "related code": "    if K.backend() == 'theano':\n"}, {"node type": "keyword", "line number": "(77, 10)", "node content": "<Keyword: not>", "related code": "    if not 3 <= kernel.ndim <= 5:\n"}, {"node type": "keyword", "line number": "(99, 22)", "node content": "<Keyword: is>", "related code": "    if input_length is None:\n"}, {"node type": "operator", "line number": "(103, 17)", "node content": "<Operator: ==>", "related code": "    if padding == 'same':\n"}, {"node type": "string", "line number": "(103, 24)", "node content": "<String: 'same'>", "related code": "    if padding == 'same':\n"}, {"node type": "operator", "line number": "(105, 19)", "node content": "<Operator: ==>", "related code": "    elif padding == 'valid':\n"}, {"node type": "string", "line number": "(105, 27)", "node content": "<String: 'valid'>", "related code": "    elif padding == 'valid':\n"}, {"node type": "operator", "line number": "(107, 19)", "node content": "<Operator: ==>", "related code": "    elif padding == 'causal':\n"}, {"node type": "string", "line number": "(107, 28)", "node content": "<String: 'causal'>", "related code": "    elif padding == 'causal':\n"}, {"node type": "operator", "line number": "(109, 19)", "node content": "<Operator: ==>", "related code": "    elif padding == 'full':\n"}, {"node type": "string", "line number": "(109, 26)", "node content": "<String: 'full'>", "related code": "    elif padding == 'full':\n"}, {"node type": "keyword", "line number": "(126, 23)", "node content": "<Keyword: is>", "related code": "    if output_length is None:\n"}, {"node type": "operator", "line number": "(129, 17)", "node content": "<Operator: ==>", "related code": "    if padding == 'same':\n"}, {"node type": "string", "line number": "(129, 24)", "node content": "<String: 'same'>", "related code": "    if padding == 'same':\n"}, {"node type": "operator", "line number": "(131, 19)", "node content": "<Operator: ==>", "related code": "    elif padding == 'valid':\n"}, {"node type": "string", "line number": "(131, 27)", "node content": "<String: 'valid'>", "related code": "    elif padding == 'valid':\n"}, {"node type": "operator", "line number": "(133, 19)", "node content": "<Operator: ==>", "related code": "    elif padding == 'full':\n"}, {"node type": "string", "line number": "(133, 26)", "node content": "<String: 'full'>", "related code": "    elif padding == 'full':\n"}, {"node type": "keyword", "line number": "(156, 18)", "node content": "<Keyword: is>", "related code": "    if dim_size is None:\n"}, {"node type": "keyword", "line number": "(163, 24)", "node content": "<Keyword: is>", "related code": "    if output_padding is None:\n"}, {"node type": "keyword", "line number": "(56, 18)", "node content": "<Keyword: not>", "related code": "    if padding not in allowed:\n"}, {"node type": "number", "line number": "(77, 12)", "node content": "<Number: 3>", "related code": "    if not 3 <= kernel.ndim <= 5:\n"}, {"node type": "operator", "line number": "(77, 15)", "node content": "<Operator: <=>", "related code": "    if not 3 <= kernel.ndim <= 5:\n"}, {"node type": "operator", "line number": "(77, 30)", "node content": "<Operator: <=>", "related code": "    if not 3 <= kernel.ndim <= 5:\n"}, {"node type": "number", "line number": "(77, 32)", "node content": "<Number: 5>", "related code": "    if not 3 <= kernel.ndim <= 5:\n"}, {"node type": "keyword", "line number": "(101, 21)", "node content": "<Keyword: in>", "related code": "    assert padding in {'same', 'valid', 'full', 'causal'}\n"}, {"node type": "operator", "line number": "(102, 56)", "node content": "<Operator: +>", "related code": "    dilated_filter_size = (filter_size - 1) * dilation + 1\n"}, {"node type": "number", "line number": "(102, 58)", "node content": "<Number: 1>", "related code": "    dilated_filter_size = (filter_size - 1) * dilation + 1\n"}, {"node type": "expr_stmt", "line number": "(104, 36)", "node content": "<ExprStmt: output_length = input_length@104,8>", "related code": "        output_length = input_length\n"}, {"node type": "expr_stmt", "line number": "(108, 36)", "node content": "<ExprStmt: output_length = input_length@108,8>", "related code": "        output_length = input_length\n"}, {"node type": "operator", "line number": "(111, 42)", "node content": "<Operator: //>", "related code": "    return (output_length + stride - 1) // stride\n"}, {"node type": "keyword", "line number": "(128, 21)", "node content": "<Keyword: in>", "related code": "    assert padding in {'same', 'valid', 'full'}\n"}, {"node type": "operator", "line number": "(135, 41)", "node content": "<Operator: ->", "related code": "    return (output_length - 1) * stride - 2 * pad + filter_size\n"}, {"node type": "operator", "line number": "(135, 51)", "node content": "<Operator: +>", "related code": "    return (output_length - 1) * stride - 2 * pad + filter_size\n"}, {"node type": "keyword", "line number": "(155, 21)", "node content": "<Keyword: in>", "related code": "    assert padding in {'same', 'valid', 'full'}\n"}, {"node type": "operator", "line number": "(160, 48)", "node content": "<Operator: +>", "related code": "    kernel_size = (kernel_size - 1) * dilation + 1\n"}, {"node type": "number", "line number": "(160, 50)", "node content": "<Number: 1>", "related code": "    kernel_size = (kernel_size - 1) * dilation + 1\n"}, {"node type": "operator", "line number": "(37, 30)", "node content": "<Operator: !=>", "related code": "        if len(value_tuple) != n:\n"}, {"node type": "string", "line number": "(53, 22)", "node content": "<String: 'valid'>", "related code": "    allowed = {'valid', 'same', 'causal'}\n"}, {"node type": "string", "line number": "(53, 30)", "node content": "<String: 'same'>", "related code": "    allowed = {'valid', 'same', 'causal'}\n"}, {"node type": "string", "line number": "(53, 40)", "node content": "<String: 'causal'>", "related code": "    allowed = {'valid', 'same', 'causal'}\n"}, {"node type": "operator", "line number": "(102, 45)", "node content": "<Operator: *>", "related code": "    dilated_filter_size = (filter_size - 1) * dilation + 1\n"}, {"node type": "number", "line number": "(132, 15)", "node content": "<Number: 0>", "related code": "        pad = 0\n"}, {"node type": "operator", "line number": "(135, 32)", "node content": "<Operator: *>", "related code": "    return (output_length - 1) * stride - 2 * pad + filter_size\n"}, {"node type": "number", "line number": "(135, 43)", "node content": "<Number: 2>", "related code": "    return (output_length - 1) * stride - 2 * pad + filter_size\n"}, {"node type": "operator", "line number": "(135, 45)", "node content": "<Operator: *>", "related code": "    return (output_length - 1) * stride - 2 * pad + filter_size\n"}]
